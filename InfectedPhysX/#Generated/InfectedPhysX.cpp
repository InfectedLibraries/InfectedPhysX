// This file was automatically generated by Biohazrd and should not be modified by hand!
#include "..\..\external\PhysX\physx\include\characterkinematic\PxBoxController.h"
#include "..\..\external\PhysX\physx\include\characterkinematic\PxCapsuleController.h"
#include "..\..\external\PhysX\physx\include\characterkinematic\PxController.h"
#include "..\..\external\PhysX\physx\include\characterkinematic\PxControllerManager.h"
#include "..\..\external\PhysX\physx\include\characterkinematic\PxControllerObstacles.h"
#include "..\..\external\PhysX\physx\include\characterkinematic\PxExtended.h"
#include "..\..\external\PhysX\physx\include\collision\PxCollisionDefs.h"
#include "..\..\external\PhysX\physx\include\common\PxBase.h"
#include "..\..\external\PhysX\physx\include\common\PxCollection.h"
#include "..\..\external\PhysX\physx\include\common\PxCoreUtilityTypes.h"
#include "..\..\external\PhysX\physx\include\common\PxRenderBuffer.h"
#include "..\..\external\PhysX\physx\include\common\PxSerialFramework.h"
#include "..\..\external\PhysX\physx\include\common\PxTolerancesScale.h"
#include "..\..\external\PhysX\physx\include\common\windows\PxWindowsDelayLoadHook.h"
#include "..\..\external\PhysX\physx\include\cooking\PxBVH33MidphaseDesc.h"
#include "..\..\external\PhysX\physx\include\cooking\PxBVH34MidphaseDesc.h"
#include "..\..\external\PhysX\physx\include\cooking\PxBVHStructureDesc.h"
#include "..\..\external\PhysX\physx\include\cooking\PxConvexMeshDesc.h"
#include "..\..\external\PhysX\physx\include\cooking\PxCooking.h"
#include "..\..\external\PhysX\physx\include\cooking\PxMidphaseDesc.h"
#include "..\..\external\PhysX\physx\include\cooking\PxTriangleMeshDesc.h"
#include "..\..\external\PhysX\physx\include\cudamanager\PxCudaContextManager.h"
#include "..\..\external\PhysX\physx\include\cudamanager\PxCudaMemoryManager.h"
#include "..\..\external\PhysX\physx\include\extensions\PxBroadPhaseExt.h"
#include "..\..\external\PhysX\physx\include\extensions\PxCollectionExt.h"
#include "..\..\external\PhysX\physx\include\extensions\PxContactJoint.h"
#include "..\..\external\PhysX\physx\include\extensions\PxConvexMeshExt.h"
#include "..\..\external\PhysX\physx\include\extensions\PxD6Joint.h"
#include "..\..\external\PhysX\physx\include\extensions\PxD6JointCreate.h"
#include "..\..\external\PhysX\physx\include\extensions\PxDefaultAllocator.h"
#include "..\..\external\PhysX\physx\include\extensions\PxDefaultCpuDispatcher.h"
#include "..\..\external\PhysX\physx\include\extensions\PxDefaultErrorCallback.h"
#include "..\..\external\PhysX\physx\include\extensions\PxDefaultSimulationFilterShader.h"
#include "..\..\external\PhysX\physx\include\extensions\PxDefaultStreams.h"
#include "..\..\external\PhysX\physx\include\extensions\PxDistanceJoint.h"
#include "..\..\external\PhysX\physx\include\extensions\PxExtensionsAPI.h"
#include "..\..\external\PhysX\physx\include\extensions\PxFixedJoint.h"
#include "..\..\external\PhysX\physx\include\extensions\PxJoint.h"
#include "..\..\external\PhysX\physx\include\extensions\PxJointLimit.h"
#include "..\..\external\PhysX\physx\include\extensions\PxMassProperties.h"
#include "..\..\external\PhysX\physx\include\extensions\PxPrismaticJoint.h"
#include "..\..\external\PhysX\physx\include\extensions\PxRaycastCCD.h"
#include "..\..\external\PhysX\physx\include\extensions\PxRepXSerializer.h"
#include "..\..\external\PhysX\physx\include\extensions\PxRepXSimpleType.h"
#include "..\..\external\PhysX\physx\include\extensions\PxRevoluteJoint.h"
#include "..\..\external\PhysX\physx\include\extensions\PxRigidActorExt.h"
#include "..\..\external\PhysX\physx\include\extensions\PxRigidBodyExt.h"
#include "..\..\external\PhysX\physx\include\extensions\PxSceneQueryExt.h"
#include "..\..\external\PhysX\physx\include\extensions\PxSerialization.h"
#include "..\..\external\PhysX\physx\include\extensions\PxShapeExt.h"
#include "..\..\external\PhysX\physx\include\extensions\PxSimpleFactory.h"
#include "..\..\external\PhysX\physx\include\extensions\PxSmoothNormals.h"
#include "..\..\external\PhysX\physx\include\extensions\PxSphericalJoint.h"
#include "..\..\external\PhysX\physx\include\extensions\PxStringTableExt.h"
#include "..\..\external\PhysX\physx\include\extensions\PxTriangleMeshExt.h"
#include "..\..\external\PhysX\physx\include\filebuf\PxFileBuf.h"
#include "..\..\external\PhysX\physx\include\foundation\PxAssert.h"
#include "..\..\external\PhysX\physx\include\foundation\PxMathUtils.h"
#include "..\..\external\PhysX\physx\include\geometry\PxBoxGeometry.h"
#include "..\..\external\PhysX\physx\include\geometry\PxCapsuleGeometry.h"
#include "..\..\external\PhysX\physx\include\geometry\PxConvexMeshGeometry.h"
#include "..\..\external\PhysX\physx\include\geometry\PxGeometry.h"
#include "..\..\external\PhysX\physx\include\geometry\PxGeometryHelpers.h"
#include "..\..\external\PhysX\physx\include\geometry\PxGeometryQuery.h"
#include "..\..\external\PhysX\physx\include\geometry\PxHeightFieldDesc.h"
#include "..\..\external\PhysX\physx\include\geometry\PxHeightFieldGeometry.h"
#include "..\..\external\PhysX\physx\include\geometry\PxHeightFieldSample.h"
#include "..\..\external\PhysX\physx\include\geometry\PxMeshQuery.h"
#include "..\..\external\PhysX\physx\include\geometry\PxMeshScale.h"
#include "..\..\external\PhysX\physx\include\geometry\PxPlaneGeometry.h"
#include "..\..\external\PhysX\physx\include\geometry\PxSimpleTriangleMesh.h"
#include "..\..\external\PhysX\physx\include\geometry\PxSphereGeometry.h"
#include "..\..\external\PhysX\physx\include\geometry\PxTriangle.h"
#include "..\..\external\PhysX\physx\include\geometry\PxTriangleMeshGeometry.h"
#include "..\..\external\PhysX\physx\include\geomutils\GuContactBuffer.h"
#include "..\..\external\PhysX\physx\include\gpu\PxGpu.h"
#include "..\..\external\PhysX\physx\include\pvd\PxPvd.h"
#include "..\..\external\PhysX\physx\include\pvd\PxPvdTransport.h"
#include "..\..\external\PhysX\physx\include\PxArticulationReducedCoordinate.h"
#include "..\..\external\PhysX\physx\include\PxBatchQueryDesc.h"
#include "..\..\external\PhysX\physx\include\PxConstraintDesc.h"
#include "..\..\external\PhysX\physx\include\PxContact.h"
#include "..\..\external\PhysX\physx\include\PxContactModifyCallback.h"
#include "..\..\external\PhysX\physx\include\PxFiltering.h"
#include "..\..\external\PhysX\physx\include\PxFoundation.h"
#include "..\..\external\PhysX\physx\include\PxImmediateMode.h"
#include "..\..\external\PhysX\physx\include\PxPhysics.h"
#include "..\..\external\PhysX\physx\include\PxPhysicsSerialization.h"
#include "..\..\external\PhysX\physx\include\PxQueryFiltering.h"
#include "..\..\external\PhysX\physx\include\PxQueryReport.h"
#include "..\..\external\PhysX\physx\include\PxScene.h"
#include "..\..\external\PhysX\physx\include\PxSceneDesc.h"
#include "..\..\external\PhysX\physx\include\PxSceneLock.h"
#include "..\..\external\PhysX\physx\include\PxSimulationEventCallback.h"
#include "..\..\external\PhysX\physx\include\PxSimulationStatistics.h"
#include "..\..\external\PhysX\physx\include\solver\PxSolverDefs.h"
#include "..\..\external\PhysX\physx\include\task\PxTask.h"
#include "..\..\external\PhysX\physx\include\task\PxTaskManager.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleComponents.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleDrive.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleDrive4W.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleDriveNW.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleDriveTank.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleNoDrive.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleSDK.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleTireFriction.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleUpdate.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleUtil.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleUtilControl.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleUtilSetup.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleUtilTelemetry.h"
#include "..\..\external\PhysX\physx\include\vehicle\PxVehicleWheels.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxBounds3.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxMat33.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxMat44.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxMath.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxMemory.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxPlane.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxProfiler.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxQuat.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxTransform.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxVec2.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxVec3.h"
#include "..\..\external\PhysX\pxshared\include\foundation\PxVec4.h"
#include "..\..\external\PhysX\pxshared\include\foundation\windows\PxWindowsIntrinsics.h"

void __PxVec3__ctor(void* _this) { new (_this) physx::PxVec3(); }
void __PxVec3__ctor(void* _this, physx::PxZERO _0) { new (_this) physx::PxVec3(_0); }
void __PxVec3__ctor(void* _this, float _0) { new (_this) physx::PxVec3(_0); }
void __PxVec3__ctor(void* _this, float _0, float _1, float _2) { new (_this) physx::PxVec3(_0, _1, _2); }
void __PxVec3__ctor(void* _this, const physx::PxVec3 & _0) { new (_this) physx::PxVec3(_0); }
physx::PxVec3 & (physx::PxVec3::* unused0)(const physx::PxVec3 &) = &physx::PxVec3::operator=;
float & (physx::PxVec3::* unused1)(unsigned int) = &physx::PxVec3::operator[];
const float & (physx::PxVec3::* unused2)(unsigned int) const = &physx::PxVec3::operator[];
bool (physx::PxVec3::* unused3)(const physx::PxVec3 &) const = &physx::PxVec3::operator==;
bool (physx::PxVec3::* unused4)(const physx::PxVec3 &) const = &physx::PxVec3::operator!=;
bool (physx::PxVec3::* unused5)() const = &physx::PxVec3::isZero;
bool (physx::PxVec3::* unused6)() const = &physx::PxVec3::isFinite;
bool (physx::PxVec3::* unused7)() const = &physx::PxVec3::isNormalized;
float (physx::PxVec3::* unused8)() const = &physx::PxVec3::magnitudeSquared;
float (physx::PxVec3::* unused9)() const = &physx::PxVec3::magnitude;
physx::PxVec3 (physx::PxVec3::* unused10)() const = &physx::PxVec3::operator-;
physx::PxVec3 (physx::PxVec3::* unused11)(const physx::PxVec3 &) const = &physx::PxVec3::operator+;
physx::PxVec3 (physx::PxVec3::* unused12)(const physx::PxVec3 &) const = &physx::PxVec3::operator-;
physx::PxVec3 (physx::PxVec3::* unused13)(float) const = &physx::PxVec3::operator*;
physx::PxVec3 (physx::PxVec3::* unused14)(float) const = &physx::PxVec3::operator/;
physx::PxVec3 & (physx::PxVec3::* unused15)(const physx::PxVec3 &) = &physx::PxVec3::operator+=;
physx::PxVec3 & (physx::PxVec3::* unused16)(const physx::PxVec3 &) = &physx::PxVec3::operator-=;
physx::PxVec3 & (physx::PxVec3::* unused17)(float) = &physx::PxVec3::operator*=;
physx::PxVec3 & (physx::PxVec3::* unused18)(float) = &physx::PxVec3::operator/=;
float (physx::PxVec3::* unused19)(const physx::PxVec3 &) const = &physx::PxVec3::dot;
physx::PxVec3 (physx::PxVec3::* unused20)(const physx::PxVec3 &) const = &physx::PxVec3::cross;
physx::PxVec3 (physx::PxVec3::* unused21)() const = &physx::PxVec3::getNormalized;
float (physx::PxVec3::* unused22)() = &physx::PxVec3::normalize;
float (physx::PxVec3::* unused23)() = &physx::PxVec3::normalizeSafe;
float (physx::PxVec3::* unused24)() = &physx::PxVec3::normalizeFast;
physx::PxVec3 (physx::PxVec3::* unused25)(const physx::PxVec3 &) const = &physx::PxVec3::multiply;
physx::PxVec3 (physx::PxVec3::* unused26)(const physx::PxVec3 &) const = &physx::PxVec3::minimum;
float (physx::PxVec3::* unused27)() const = &physx::PxVec3::minElement;
physx::PxVec3 (physx::PxVec3::* unused28)(const physx::PxVec3 &) const = &physx::PxVec3::maximum;
float (physx::PxVec3::* unused29)() const = &physx::PxVec3::maxElement;
physx::PxVec3 (physx::PxVec3::* unused30)() const = &physx::PxVec3::abs;
void __PxQuat__ctor(void* _this) { new (_this) physx::PxQuat(); }
void __PxQuat__ctor(void* _this, physx::PxIDENTITY _0) { new (_this) physx::PxQuat(_0); }
void __PxQuat__ctor(void* _this, float _0) { new (_this) physx::PxQuat(_0); }
void __PxQuat__ctor(void* _this, float _0, float _1, float _2, float _3) { new (_this) physx::PxQuat(_0, _1, _2, _3); }
void __PxQuat__ctor(void* _this, float _0, const physx::PxVec3 & _1) { new (_this) physx::PxQuat(_0, _1); }
void __PxQuat__ctor(void* _this, const physx::PxQuat & _0) { new (_this) physx::PxQuat(_0); }
void __PxQuat__ctor(void* _this, const physx::PxMat33 & _0) { new (_this) physx::PxQuat(_0); }
bool (physx::PxQuat::* unused31)() const = &physx::PxQuat::isIdentity;
bool (physx::PxQuat::* unused32)() const = &physx::PxQuat::isFinite;
bool (physx::PxQuat::* unused33)() const = &physx::PxQuat::isUnit;
bool (physx::PxQuat::* unused34)() const = &physx::PxQuat::isSane;
bool (physx::PxQuat::* unused35)(const physx::PxQuat &) const = &physx::PxQuat::operator==;
void (physx::PxQuat::* unused36)(float &, physx::PxVec3 &) const = &physx::PxQuat::toRadiansAndUnitAxis;
float (physx::PxQuat::* unused37)() const = &physx::PxQuat::getAngle;
float (physx::PxQuat::* unused38)(const physx::PxQuat &) const = &physx::PxQuat::getAngle;
float (physx::PxQuat::* unused39)() const = &physx::PxQuat::magnitudeSquared;
float (physx::PxQuat::* unused40)(const physx::PxQuat &) const = &physx::PxQuat::dot;
physx::PxQuat (physx::PxQuat::* unused41)() const = &physx::PxQuat::getNormalized;
float (physx::PxQuat::* unused42)() const = &physx::PxQuat::magnitude;
float (physx::PxQuat::* unused43)() = &physx::PxQuat::normalize;
physx::PxQuat (physx::PxQuat::* unused44)() const = &physx::PxQuat::getConjugate;
physx::PxVec3 (physx::PxQuat::* unused45)() const = &physx::PxQuat::getImaginaryPart;
physx::PxVec3 (physx::PxQuat::* unused46)() const = &physx::PxQuat::getBasisVector0;
physx::PxVec3 (physx::PxQuat::* unused47)() const = &physx::PxQuat::getBasisVector1;
physx::PxVec3 (physx::PxQuat::* unused48)() const = &physx::PxQuat::getBasisVector2;
const physx::PxVec3 (physx::PxQuat::* unused49)(const physx::PxVec3 &) const = &physx::PxQuat::rotate;
const physx::PxVec3 (physx::PxQuat::* unused50)(const physx::PxVec3 &) const = &physx::PxQuat::rotateInv;
physx::PxQuat & (physx::PxQuat::* unused51)(const physx::PxQuat &) = &physx::PxQuat::operator=;
physx::PxQuat & (physx::PxQuat::* unused52)(const physx::PxQuat &) = &physx::PxQuat::operator*=;
physx::PxQuat & (physx::PxQuat::* unused53)(const physx::PxQuat &) = &physx::PxQuat::operator+=;
physx::PxQuat & (physx::PxQuat::* unused54)(const physx::PxQuat &) = &physx::PxQuat::operator-=;
physx::PxQuat & (physx::PxQuat::* unused55)(const float) = &physx::PxQuat::operator*=;
physx::PxQuat (physx::PxQuat::* unused56)(const physx::PxQuat &) const = &physx::PxQuat::operator*;
physx::PxQuat (physx::PxQuat::* unused57)(const physx::PxQuat &) const = &physx::PxQuat::operator+;
physx::PxQuat (physx::PxQuat::* unused58)() const = &physx::PxQuat::operator-;
physx::PxQuat (physx::PxQuat::* unused59)(const physx::PxQuat &) const = &physx::PxQuat::operator-;
physx::PxQuat (physx::PxQuat::* unused60)(float) const = &physx::PxQuat::operator*;
void __PxPlane__ctor(void* _this) { new (_this) physx::PxPlane(); }
void __PxPlane__ctor(void* _this, float _0, float _1, float _2, float _3) { new (_this) physx::PxPlane(_0, _1, _2, _3); }
void __PxPlane__ctor(void* _this, const physx::PxVec3 & _0, float _1) { new (_this) physx::PxPlane(_0, _1); }
void __PxPlane__ctor(void* _this, const physx::PxVec3 & _0, const physx::PxVec3 & _1) { new (_this) physx::PxPlane(_0, _1); }
void __PxPlane__ctor(void* _this, const physx::PxVec3 & _0, const physx::PxVec3 & _1, const physx::PxVec3 & _2) { new (_this) physx::PxPlane(_0, _1, _2); }
bool (physx::PxPlane::* unused61)(const physx::PxPlane &) const = &physx::PxPlane::operator==;
float (physx::PxPlane::* unused62)(const physx::PxVec3 &) const = &physx::PxPlane::distance;
bool (physx::PxPlane::* unused63)(const physx::PxVec3 &) const = &physx::PxPlane::contains;
physx::PxVec3 (physx::PxPlane::* unused64)(const physx::PxVec3 &) const = &physx::PxPlane::project;
physx::PxVec3 (physx::PxPlane::* unused65)() const = &physx::PxPlane::pointInPlane;
void (physx::PxPlane::* unused66)() = &physx::PxPlane::normalize;
void __PxTransform__ctor(void* _this) { new (_this) physx::PxTransform(); }
void __PxTransform__ctor(void* _this, const physx::PxVec3 & _0) { new (_this) physx::PxTransform(_0); }
void __PxTransform__ctor(void* _this, physx::PxIDENTITY _0) { new (_this) physx::PxTransform(_0); }
void __PxTransform__ctor(void* _this, const physx::PxQuat & _0) { new (_this) physx::PxTransform(_0); }
void __PxTransform__ctor(void* _this, float _0, float _1, float _2, physx::PxQuat _3) { new (_this) physx::PxTransform(_0, _1, _2, _3); }
void __PxTransform__ctor(void* _this, const physx::PxVec3 & _0, const physx::PxQuat & _1) { new (_this) physx::PxTransform(_0, _1); }
void __PxTransform__ctor(void* _this, const physx::PxMat44 & _0) { new (_this) physx::PxTransform(_0); }
bool (physx::PxTransform::* unused67)(const physx::PxTransform &) const = &physx::PxTransform::operator==;
physx::PxTransform (physx::PxTransform::* unused68)(const physx::PxTransform &) const = &physx::PxTransform::operator*;
physx::PxTransform & (physx::PxTransform::* unused69)(physx::PxTransform &) = &physx::PxTransform::operator*=;
physx::PxTransform (physx::PxTransform::* unused70)() const = &physx::PxTransform::getInverse;
physx::PxVec3 (physx::PxTransform::* unused71)(const physx::PxVec3 &) const = &physx::PxTransform::transform;
physx::PxVec3 (physx::PxTransform::* unused72)(const physx::PxVec3 &) const = &physx::PxTransform::transformInv;
physx::PxVec3 (physx::PxTransform::* unused73)(const physx::PxVec3 &) const = &physx::PxTransform::rotate;
physx::PxVec3 (physx::PxTransform::* unused74)(const physx::PxVec3 &) const = &physx::PxTransform::rotateInv;
physx::PxTransform (physx::PxTransform::* unused75)(const physx::PxTransform &) const = &physx::PxTransform::transform;
bool (physx::PxTransform::* unused76)() const = &physx::PxTransform::isValid;
bool (physx::PxTransform::* unused77)() const = &physx::PxTransform::isSane;
bool (physx::PxTransform::* unused78)() const = &physx::PxTransform::isFinite;
physx::PxTransform (physx::PxTransform::* unused79)(const physx::PxTransform &) const = &physx::PxTransform::transformInv;
physx::PxPlane (physx::PxTransform::* unused80)(const physx::PxPlane &) const = &physx::PxTransform::transform;
physx::PxPlane (physx::PxTransform::* unused81)(const physx::PxPlane &) const = &physx::PxTransform::inverseTransform;
physx::PxTransform (physx::PxTransform::* unused82)() const = &physx::PxTransform::getNormalized;
void __PxMat33__ctor(void* _this) { new (_this) physx::PxMat33(); }
void __PxMat33__ctor(void* _this, physx::PxIDENTITY _0) { new (_this) physx::PxMat33(_0); }
void __PxMat33__ctor(void* _this, physx::PxZERO _0) { new (_this) physx::PxMat33(_0); }
void __PxMat33__ctor(void* _this, const physx::PxVec3 & _0, const physx::PxVec3 & _1, const physx::PxVec3 & _2) { new (_this) physx::PxMat33(_0, _1, _2); }
void __PxMat33__ctor(void* _this, float _0) { new (_this) physx::PxMat33(_0); }
void __PxMat33__ctor(void* _this, float  _0[]) { new (_this) physx::PxMat33(_0); }
void __PxMat33__ctor(void* _this, const physx::PxQuat & _0) { new (_this) physx::PxMat33(_0); }
void __PxMat33__ctor(void* _this, const physx::PxMat33 & _0) { new (_this) physx::PxMat33(_0); }
physx::PxMat33 & (physx::PxMat33::* unused83)(const physx::PxMat33 &) = &physx::PxMat33::operator=;
const physx::PxMat33 (*unused84)(const physx::PxVec3 &) = &physx::PxMat33::createDiagonal;
bool (physx::PxMat33::* unused85)(const physx::PxMat33 &) const = &physx::PxMat33::operator==;
const physx::PxMat33 (physx::PxMat33::* unused86)() const = &physx::PxMat33::getTranspose;
const physx::PxMat33 (physx::PxMat33::* unused87)() const = &physx::PxMat33::getInverse;
float (physx::PxMat33::* unused88)() const = &physx::PxMat33::getDeterminant;
const physx::PxMat33 (physx::PxMat33::* unused89)() const = &physx::PxMat33::operator-;
const physx::PxMat33 (physx::PxMat33::* unused90)(const physx::PxMat33 &) const = &physx::PxMat33::operator+;
const physx::PxMat33 (physx::PxMat33::* unused91)(const physx::PxMat33 &) const = &physx::PxMat33::operator-;
const physx::PxMat33 (physx::PxMat33::* unused92)(float) const = &physx::PxMat33::operator*;
const physx::PxVec3 (physx::PxMat33::* unused93)(const physx::PxVec3 &) const = &physx::PxMat33::operator*;
const physx::PxMat33 (physx::PxMat33::* unused94)(const physx::PxMat33 &) const = &physx::PxMat33::operator*;
physx::PxMat33 & (physx::PxMat33::* unused95)(const physx::PxMat33 &) = &physx::PxMat33::operator+=;
physx::PxMat33 & (physx::PxMat33::* unused96)(const physx::PxMat33 &) = &physx::PxMat33::operator-=;
physx::PxMat33 & (physx::PxMat33::* unused97)(float) = &physx::PxMat33::operator*=;
physx::PxMat33 & (physx::PxMat33::* unused98)(const physx::PxMat33 &) = &physx::PxMat33::operator*=;
float (physx::PxMat33::* unused99)(unsigned int, unsigned int) const = &physx::PxMat33::operator();
float & (physx::PxMat33::* unused100)(unsigned int, unsigned int) = &physx::PxMat33::operator();
const physx::PxVec3 (physx::PxMat33::* unused101)(const physx::PxVec3 &) const = &physx::PxMat33::transform;
const physx::PxVec3 (physx::PxMat33::* unused102)(const physx::PxVec3 &) const = &physx::PxMat33::transformTranspose;
const float * (physx::PxMat33::* unused103)() const = &physx::PxMat33::front;
physx::PxVec3 & (physx::PxMat33::* unused104)(unsigned int) = &physx::PxMat33::operator[];
const physx::PxVec3 & (physx::PxMat33::* unused105)(unsigned int) const = &physx::PxMat33::operator[];
void __PxBounds3__ctor(void* _this) { new (_this) physx::PxBounds3(); }
void __PxBounds3__ctor(void* _this, const physx::PxVec3 & _0, const physx::PxVec3 & _1) { new (_this) physx::PxBounds3(_0, _1); }
physx::PxBounds3 (*unused106)() = &physx::PxBounds3::empty;
physx::PxBounds3 (*unused107)(const physx::PxVec3 &, const physx::PxVec3 &) = &physx::PxBounds3::boundsOfPoints;
physx::PxBounds3 (*unused108)(const physx::PxVec3 &, const physx::PxVec3 &) = &physx::PxBounds3::centerExtents;
physx::PxBounds3 (*unused109)(const physx::PxVec3 &, const physx::PxMat33 &, const physx::PxVec3 &) = &physx::PxBounds3::basisExtent;
physx::PxBounds3 (*unused110)(const physx::PxTransform &, const physx::PxVec3 &) = &physx::PxBounds3::poseExtent;
physx::PxBounds3 (*unused111)(const physx::PxMat33 &, const physx::PxBounds3 &) = &physx::PxBounds3::transformSafe;
physx::PxBounds3 (*unused112)(const physx::PxMat33 &, const physx::PxBounds3 &) = &physx::PxBounds3::transformFast;
physx::PxBounds3 (*unused113)(const physx::PxTransform &, const physx::PxBounds3 &) = &physx::PxBounds3::transformSafe;
physx::PxBounds3 (*unused114)(const physx::PxTransform &, const physx::PxBounds3 &) = &physx::PxBounds3::transformFast;
void (physx::PxBounds3::* unused115)() = &physx::PxBounds3::setEmpty;
void (physx::PxBounds3::* unused116)() = &physx::PxBounds3::setMaximal;
void (physx::PxBounds3::* unused117)(const physx::PxVec3 &) = &physx::PxBounds3::include;
void (physx::PxBounds3::* unused118)(const physx::PxBounds3 &) = &physx::PxBounds3::include;
bool (physx::PxBounds3::* unused119)() const = &physx::PxBounds3::isEmpty;
bool (physx::PxBounds3::* unused120)(const physx::PxBounds3 &) const = &physx::PxBounds3::intersects;
bool (physx::PxBounds3::* unused121)(const physx::PxBounds3 &, unsigned int) const = &physx::PxBounds3::intersects1D;
bool (physx::PxBounds3::* unused122)(const physx::PxVec3 &) const = &physx::PxBounds3::contains;
bool (physx::PxBounds3::* unused123)(const physx::PxBounds3 &) const = &physx::PxBounds3::isInside;
physx::PxVec3 (physx::PxBounds3::* unused124)() const = &physx::PxBounds3::getCenter;
float (physx::PxBounds3::* unused125)(unsigned int) const = &physx::PxBounds3::getCenter;
float (physx::PxBounds3::* unused126)(unsigned int) const = &physx::PxBounds3::getExtents;
physx::PxVec3 (physx::PxBounds3::* unused127)() const = &physx::PxBounds3::getDimensions;
physx::PxVec3 (physx::PxBounds3::* unused128)() const = &physx::PxBounds3::getExtents;
void (physx::PxBounds3::* unused129)(float) = &physx::PxBounds3::scaleSafe;
void (physx::PxBounds3::* unused130)(float) = &physx::PxBounds3::scaleFast;
void (physx::PxBounds3::* unused131)(float) = &physx::PxBounds3::fattenSafe;
void (physx::PxBounds3::* unused132)(float) = &physx::PxBounds3::fattenFast;
bool (physx::PxBounds3::* unused133)() const = &physx::PxBounds3::isFinite;
bool (physx::PxBounds3::* unused134)() const = &physx::PxBounds3::isValid;
void (physx::PxDeserializationContext::* unused135)(const char *&) = &physx::PxDeserializationContext::readName;
void (physx::PxDeserializationContext::* unused136)(unsigned int) = &physx::PxDeserializationContext::alignExtraData;
physx::PxCollection * (*unused137)() = &PxCreateCollection;
unsigned short (physx::PxBase::* unused138)() const = &physx::PxBase::getConcreteType;
void (physx::PxBase::* unused139)(physx::PxBaseFlag::Enum, bool) = &physx::PxBase::setBaseFlag;
void (physx::PxBase::* unused140)(physx::PxFlags<physx::PxBaseFlag::Enum, unsigned short>) = &physx::PxBase::setBaseFlags;
physx::PxFlags<physx::PxBaseFlag::Enum, unsigned short> (physx::PxBase::* unused141)() const = &physx::PxBase::getBaseFlags;
void __Px1DConstraintFlag__ctor(void* _this) { new (_this) physx::Px1DConstraintFlag(); }
void __PxConstraintInvMassScale__ctor(void* _this) { new (_this) physx::PxConstraintInvMassScale(); }
void __PxConstraintInvMassScale__ctor(void* _this, float _0, float _1, float _2, float _3) { new (_this) physx::PxConstraintInvMassScale(_0, _1, _2, _3); }
void __PxSolverBody__ctor(void* _this) { new (_this) physx::PxSolverBody(); }
float (physx::PxSolverBodyData::* unused142)(const physx::PxVec3 &, const physx::PxVec3 &) const = &physx::PxSolverBodyData::projectVelocity;
float (physx::PxTGSSolverBodyVel::* unused143)(const physx::PxVec3 &, const physx::PxVec3 &) const = &physx::PxTGSSolverBodyVel::projectVelocity;
float (physx::PxTGSSolverBodyData::* unused144)(const physx::PxVec3 &, const physx::PxVec3 &) const = &physx::PxTGSSolverBodyData::projectVelocity;
physx::PxGeometryType::Enum (physx::PxGeometry::* unused145)() const = &physx::PxGeometry::getType;
void __PxBoxGeometry__ctor(void* _this) { new (_this) physx::PxBoxGeometry(); }
void __PxBoxGeometry__ctor(void* _this, float _0, float _1, float _2) { new (_this) physx::PxBoxGeometry(_0, _1, _2); }
void __PxBoxGeometry__ctor(void* _this, physx::PxVec3 _0) { new (_this) physx::PxBoxGeometry(_0); }
bool (physx::PxBoxGeometry::* unused146)() const = &physx::PxBoxGeometry::isValid;
void __PxSphereGeometry__ctor(void* _this) { new (_this) physx::PxSphereGeometry(); }
void __PxSphereGeometry__ctor(void* _this, float _0) { new (_this) physx::PxSphereGeometry(_0); }
bool (physx::PxSphereGeometry::* unused147)() const = &physx::PxSphereGeometry::isValid;
void __PxCapsuleGeometry__ctor(void* _this) { new (_this) physx::PxCapsuleGeometry(); }
void __PxCapsuleGeometry__ctor(void* _this, float _0, float _1) { new (_this) physx::PxCapsuleGeometry(_0, _1); }
bool (physx::PxCapsuleGeometry::* unused148)() const = &physx::PxCapsuleGeometry::isValid;
physx::PxTransform (*unused149)(const physx::PxVec3 &, const physx::PxVec3 &, float *) = &physx::PxTransformFromSegment;
void __PxPlaneGeometry__ctor(void* _this) { new (_this) physx::PxPlaneGeometry(); }
bool (physx::PxPlaneGeometry::* unused150)() const = &physx::PxPlaneGeometry::isValid;
physx::PxTransform (*unused151)(const physx::PxPlane &) = &physx::PxTransformFromPlaneEquation;
physx::PxPlane (*unused152)(const physx::PxTransform &) = &physx::PxPlaneEquationFromTransform;
void __PxMeshScale__ctor(void* _this) { new (_this) physx::PxMeshScale(); }
void __PxMeshScale__ctor(void* _this, float _0) { new (_this) physx::PxMeshScale(_0); }
void __PxMeshScale__ctor(void* _this, const physx::PxVec3 & _0) { new (_this) physx::PxMeshScale(_0); }
void __PxMeshScale__ctor(void* _this, const physx::PxVec3 & _0, const physx::PxQuat & _1) { new (_this) physx::PxMeshScale(_0, _1); }
bool (physx::PxMeshScale::* unused153)() const = &physx::PxMeshScale::isIdentity;
physx::PxMeshScale (physx::PxMeshScale::* unused154)() const = &physx::PxMeshScale::getInverse;
physx::PxMat33 (physx::PxMeshScale::* unused155)() const = &physx::PxMeshScale::toMat33;
bool (physx::PxMeshScale::* unused156)() const = &physx::PxMeshScale::hasNegativeDeterminant;
physx::PxVec3 (physx::PxMeshScale::* unused157)(const physx::PxVec3 &) const = &physx::PxMeshScale::transform;
bool (physx::PxMeshScale::* unused158)() const = &physx::PxMeshScale::isValidForTriangleMesh;
bool (physx::PxMeshScale::* unused159)() const = &physx::PxMeshScale::isValidForConvexMesh;
void __PxStridedData__ctor(void* _this) { new (_this) physx::PxStridedData(); }
void __PxBoundedData__ctor(void* _this) { new (_this) physx::PxBoundedData(); }
void __PxConvexMeshGeometry__ctor(void* _this) { new (_this) physx::PxConvexMeshGeometry(); }
void __PxConvexMeshGeometry__ctor(void* _this, physx::PxConvexMesh * _0, const physx::PxMeshScale & _1, physx::PxFlags<physx::PxConvexMeshGeometryFlag::Enum, unsigned char> _2) { new (_this) physx::PxConvexMeshGeometry(_0, _1, _2); }
bool (physx::PxConvexMeshGeometry::* unused160)() const = &physx::PxConvexMeshGeometry::isValid;
void __PxTriangleMeshGeometry__ctor(void* _this) { new (_this) physx::PxTriangleMeshGeometry(); }
void __PxTriangleMeshGeometry__ctor(void* _this, physx::PxTriangleMesh * _0, const physx::PxMeshScale & _1, physx::PxFlags<physx::PxMeshGeometryFlag::Enum, unsigned char> _2) { new (_this) physx::PxTriangleMeshGeometry(_0, _1, _2); }
bool (physx::PxTriangleMeshGeometry::* unused161)() const = &physx::PxTriangleMeshGeometry::isValid;
void __PxHeightFieldGeometry__ctor(void* _this) { new (_this) physx::PxHeightFieldGeometry(); }
void __PxHeightFieldGeometry__ctor(void* _this, physx::PxHeightField * _0, physx::PxFlags<physx::PxMeshGeometryFlag::Enum, unsigned char> _1, float _2, float _3, float _4) { new (_this) physx::PxHeightFieldGeometry(_0, _1, _2, _3, _4); }
bool (physx::PxHeightFieldGeometry::* unused162)() const = &physx::PxHeightFieldGeometry::isValid;
physx::PxGeometryType::Enum (physx::PxGeometryHolder::* unused163)() const = &physx::PxGeometryHolder::getType;
physx::PxGeometry & (physx::PxGeometryHolder::* unused164)() = &physx::PxGeometryHolder::any;
const physx::PxGeometry & (physx::PxGeometryHolder::* unused165)() const = &physx::PxGeometryHolder::any;
physx::PxSphereGeometry & (physx::PxGeometryHolder::* unused166)() = &physx::PxGeometryHolder::sphere;
const physx::PxSphereGeometry & (physx::PxGeometryHolder::* unused167)() const = &physx::PxGeometryHolder::sphere;
physx::PxPlaneGeometry & (physx::PxGeometryHolder::* unused168)() = &physx::PxGeometryHolder::plane;
const physx::PxPlaneGeometry & (physx::PxGeometryHolder::* unused169)() const = &physx::PxGeometryHolder::plane;
physx::PxCapsuleGeometry & (physx::PxGeometryHolder::* unused170)() = &physx::PxGeometryHolder::capsule;
const physx::PxCapsuleGeometry & (physx::PxGeometryHolder::* unused171)() const = &physx::PxGeometryHolder::capsule;
physx::PxBoxGeometry & (physx::PxGeometryHolder::* unused172)() = &physx::PxGeometryHolder::box;
const physx::PxBoxGeometry & (physx::PxGeometryHolder::* unused173)() const = &physx::PxGeometryHolder::box;
physx::PxConvexMeshGeometry & (physx::PxGeometryHolder::* unused174)() = &physx::PxGeometryHolder::convexMesh;
const physx::PxConvexMeshGeometry & (physx::PxGeometryHolder::* unused175)() const = &physx::PxGeometryHolder::convexMesh;
physx::PxTriangleMeshGeometry & (physx::PxGeometryHolder::* unused176)() = &physx::PxGeometryHolder::triangleMesh;
const physx::PxTriangleMeshGeometry & (physx::PxGeometryHolder::* unused177)() const = &physx::PxGeometryHolder::triangleMesh;
physx::PxHeightFieldGeometry & (physx::PxGeometryHolder::* unused178)() = &physx::PxGeometryHolder::heightField;
const physx::PxHeightFieldGeometry & (physx::PxGeometryHolder::* unused179)() const = &physx::PxGeometryHolder::heightField;
void (physx::PxGeometryHolder::* unused180)(const physx::PxGeometry &) = &physx::PxGeometryHolder::storeAny;
void __PxGeometryHolder__ctor(void* _this) { new (_this) physx::PxGeometryHolder(); }
void __PxGeometryHolder__ctor(void* _this, const physx::PxGeometry & _0) { new (_this) physx::PxGeometryHolder(_0); }
void __PxArticulationCache__ctor(void* _this) { new (_this) physx::PxArticulationCache(); }
void __PxFilterData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxFilterData(_0); }
void __PxFilterData__ctor(void* _this) { new (_this) physx::PxFilterData(); }
void __PxFilterData__ctor(void* _this, const physx::PxFilterData & _0) { new (_this) physx::PxFilterData(_0); }
void __PxFilterData__ctor(void* _this, unsigned int _0, unsigned int _1, unsigned int _2, unsigned int _3) { new (_this) physx::PxFilterData(_0, _1, _2, _3); }
void (physx::PxFilterData::* unused181)() = &physx::PxFilterData::setToDefault;
void (physx::PxFilterData::* unused182)(const physx::PxFilterData &) = &physx::PxFilterData::operator=;
bool (physx::PxFilterData::* unused183)(const physx::PxFilterData &) const = &physx::PxFilterData::operator==;
bool (physx::PxFilterData::* unused184)(const physx::PxFilterData &) const = &physx::PxFilterData::operator!=;
void __PxActorShape__ctor(void* _this) { new (_this) physx::PxActorShape(); }
void __PxActorShape__ctor(void* _this, physx::PxRigidActor * _0, physx::PxShape * _1) { new (_this) physx::PxActorShape(_0, _1); }
void __PxQueryHit__ctor(void* _this) { new (_this) physx::PxQueryHit(); }
void __PxLocationHit__ctor(void* _this) { new (_this) physx::PxLocationHit(); }
bool (physx::PxLocationHit::* unused185)() const = &physx::PxLocationHit::hadInitialOverlap;
void __PxRaycastHit__ctor(void* _this) { new (_this) physx::PxRaycastHit(); }
void __PxSweepHit__ctor(void* _this) { new (_this) physx::PxSweepHit(); }
void __PxQueryFilterData__ctor(void* _this) { new (_this) physx::PxQueryFilterData(); }
void __PxQueryFilterData__ctor(void* _this, const physx::PxFilterData & _0, physx::PxFlags<physx::PxQueryFlag::Enum, unsigned short> _1) { new (_this) physx::PxQueryFilterData(_0, _1); }
void __PxQueryFilterData__ctor(void* _this, physx::PxFlags<physx::PxQueryFlag::Enum, unsigned short> _0) { new (_this) physx::PxQueryFilterData(_0); }
unsigned int (physx::PxBatchQueryMemory::* unused186)() const = &physx::PxBatchQueryMemory::getMaxRaycastsPerExecute;
unsigned int (physx::PxBatchQueryMemory::* unused187)() const = &physx::PxBatchQueryMemory::getMaxSweepsPerExecute;
unsigned int (physx::PxBatchQueryMemory::* unused188)() const = &physx::PxBatchQueryMemory::getMaxOverlapsPerExecute;
void __PxBatchQueryMemory__ctor(void* _this, unsigned int _0, unsigned int _1, unsigned int _2) { new (_this) physx::PxBatchQueryMemory(_0, _1, _2); }
void __PxBatchQueryDesc__ctor(void* _this, unsigned int _0, unsigned int _1, unsigned int _2) { new (_this) physx::PxBatchQueryDesc(_0, _1, _2); }
bool (physx::PxBatchQueryDesc::* unused189)() const = &physx::PxBatchQueryDesc::isValid;
void __PxContactStreamIterator__ctor(void* _this, const unsigned char * _0, const unsigned char * _1, const unsigned int * _2, unsigned int _3, unsigned int _4) { new (_this) physx::PxContactStreamIterator(_0, _1, _2, _3, _4); }
bool (physx::PxContactStreamIterator::* unused190)() const = &physx::PxContactStreamIterator::hasNextPatch;
unsigned int (physx::PxContactStreamIterator::* unused191)() const = &physx::PxContactStreamIterator::getTotalContactCount;
unsigned int (physx::PxContactStreamIterator::* unused192)() const = &physx::PxContactStreamIterator::getTotalPatchCount;
void (physx::PxContactStreamIterator::* unused193)() = &physx::PxContactStreamIterator::nextPatch;
bool (physx::PxContactStreamIterator::* unused194)() const = &physx::PxContactStreamIterator::hasNextContact;
void (physx::PxContactStreamIterator::* unused195)() = &physx::PxContactStreamIterator::nextContact;
const physx::PxVec3 & (physx::PxContactStreamIterator::* unused196)() const = &physx::PxContactStreamIterator::getContactNormal;
float (physx::PxContactStreamIterator::* unused197)() const = &physx::PxContactStreamIterator::getInvMassScale0;
float (physx::PxContactStreamIterator::* unused198)() const = &physx::PxContactStreamIterator::getInvMassScale1;
float (physx::PxContactStreamIterator::* unused199)() const = &physx::PxContactStreamIterator::getInvInertiaScale0;
float (physx::PxContactStreamIterator::* unused200)() const = &physx::PxContactStreamIterator::getInvInertiaScale1;
float (physx::PxContactStreamIterator::* unused201)() const = &physx::PxContactStreamIterator::getMaxImpulse;
const physx::PxVec3 & (physx::PxContactStreamIterator::* unused202)() const = &physx::PxContactStreamIterator::getTargetVel;
const physx::PxVec3 & (physx::PxContactStreamIterator::* unused203)() const = &physx::PxContactStreamIterator::getContactPoint;
float (physx::PxContactStreamIterator::* unused204)() const = &physx::PxContactStreamIterator::getSeparation;
unsigned int (physx::PxContactStreamIterator::* unused205)() const = &physx::PxContactStreamIterator::getFaceIndex0;
unsigned int (physx::PxContactStreamIterator::* unused206)() const = &physx::PxContactStreamIterator::getFaceIndex1;
float (physx::PxContactStreamIterator::* unused207)() const = &physx::PxContactStreamIterator::getStaticFriction;
float (physx::PxContactStreamIterator::* unused208)() const = &physx::PxContactStreamIterator::getDynamicFriction;
float (physx::PxContactStreamIterator::* unused209)() const = &physx::PxContactStreamIterator::getRestitution;
unsigned int (physx::PxContactStreamIterator::* unused210)() const = &physx::PxContactStreamIterator::getMaterialFlags;
unsigned short (physx::PxContactStreamIterator::* unused211)() const = &physx::PxContactStreamIterator::getMaterialIndex0;
unsigned short (physx::PxContactStreamIterator::* unused212)() const = &physx::PxContactStreamIterator::getMaterialIndex1;
bool (physx::PxContactStreamIterator::* unused213)(const unsigned int) = &physx::PxContactStreamIterator::advanceToIndex;
const physx::PxVec3 & (physx::PxContactSet::* unused214)(unsigned int) const = &physx::PxContactSet::getPoint;
void (physx::PxContactSet::* unused215)(unsigned int, const physx::PxVec3 &) = &physx::PxContactSet::setPoint;
const physx::PxVec3 & (physx::PxContactSet::* unused216)(unsigned int) const = &physx::PxContactSet::getNormal;
void (physx::PxContactSet::* unused217)(unsigned int, const physx::PxVec3 &) = &physx::PxContactSet::setNormal;
float (physx::PxContactSet::* unused218)(unsigned int) const = &physx::PxContactSet::getSeparation;
void (physx::PxContactSet::* unused219)(unsigned int, float) = &physx::PxContactSet::setSeparation;
const physx::PxVec3 & (physx::PxContactSet::* unused220)(unsigned int) const = &physx::PxContactSet::getTargetVelocity;
void (physx::PxContactSet::* unused221)(unsigned int, const physx::PxVec3 &) = &physx::PxContactSet::setTargetVelocity;
unsigned int (physx::PxContactSet::* unused222)(unsigned int) = &physx::PxContactSet::getInternalFaceIndex0;
unsigned int (physx::PxContactSet::* unused223)(unsigned int) = &physx::PxContactSet::getInternalFaceIndex1;
float (physx::PxContactSet::* unused224)(unsigned int) const = &physx::PxContactSet::getMaxImpulse;
void (physx::PxContactSet::* unused225)(unsigned int, float) = &physx::PxContactSet::setMaxImpulse;
float (physx::PxContactSet::* unused226)(unsigned int) const = &physx::PxContactSet::getRestitution;
void (physx::PxContactSet::* unused227)(unsigned int, float) = &physx::PxContactSet::setRestitution;
float (physx::PxContactSet::* unused228)(unsigned int) const = &physx::PxContactSet::getStaticFriction;
void (physx::PxContactSet::* unused229)(unsigned int, float) = &physx::PxContactSet::setStaticFriction;
float (physx::PxContactSet::* unused230)(unsigned int) const = &physx::PxContactSet::getDynamicFriction;
void (physx::PxContactSet::* unused231)(unsigned int, float) = &physx::PxContactSet::setDynamicFriction;
void (physx::PxContactSet::* unused232)(unsigned int) = &physx::PxContactSet::ignore;
unsigned int (physx::PxContactSet::* unused233)() const = &physx::PxContactSet::size;
float (physx::PxContactSet::* unused234)() const = &physx::PxContactSet::getInvMassScale0;
float (physx::PxContactSet::* unused235)() const = &physx::PxContactSet::getInvMassScale1;
float (physx::PxContactSet::* unused236)() const = &physx::PxContactSet::getInvInertiaScale0;
float (physx::PxContactSet::* unused237)() const = &physx::PxContactSet::getInvInertiaScale1;
void (physx::PxContactSet::* unused238)(const float) = &physx::PxContactSet::setInvMassScale0;
void (physx::PxContactSet::* unused239)(const float) = &physx::PxContactSet::setInvMassScale1;
void (physx::PxContactSet::* unused240)(const float) = &physx::PxContactSet::setInvInertiaScale0;
void (physx::PxContactSet::* unused241)(const float) = &physx::PxContactSet::setInvInertiaScale1;
physx::PxFoundation * (*unused242)(unsigned int, physx::PxAllocatorCallback &, physx::PxErrorCallback &) = &PxCreateFoundation;
physx::PxFoundation & (*unused243)() = &PxGetFoundation;
physx::PxProfilerCallback * (*unused244)() = &PxGetProfilerCallback;
void (*unused245)(physx::PxProfilerCallback *) = &PxSetProfilerCallback;
void __NarrowPhaseParams__ctor(void* _this, float _0, float _1, float _2) { new (_this) physx::Gu::NarrowPhaseParams(_0, _1, _2); }
void (physx::Gu::ContactBuffer::* unused246)() = &physx::Gu::ContactBuffer::reset;
bool (physx::Gu::ContactBuffer::* unused247)(const physx::PxVec3 &, const physx::PxVec3 &, float, unsigned int) = &physx::Gu::ContactBuffer::contact;
bool (physx::Gu::ContactBuffer::* unused248)(const physx::PxVec3 &, const physx::PxVec3 &, float, unsigned short, unsigned int) = &physx::Gu::ContactBuffer::contact;
bool (physx::Gu::ContactBuffer::* unused249)(const physx::Gu::ContactPoint &) = &physx::Gu::ContactBuffer::contact;
physx::Gu::ContactPoint * (physx::Gu::ContactBuffer::* unused250)() = &physx::Gu::ContactBuffer::contact;
void __PxCache__ctor(void* _this) { new (_this) physx::PxCache(); }
void (physx::PxCache::* unused251)() = &physx::PxCache::reset;
void __PxFeatherstoneArticulationLinkData__ctor(void* _this) { new (_this) physx::immediate::PxFeatherstoneArticulationLinkData(); }
void (physx::immediate::PxFeatherstoneArticulationLinkData::* unused252)() = &physx::immediate::PxFeatherstoneArticulationLinkData::initData;
physx::PxShape * (physx::PxPhysics::* unused253)(const physx::PxGeometry &, const physx::PxMaterial &, bool, physx::PxFlags<physx::PxShapeFlag::Enum, unsigned char>) = &physx::PxPhysics::createShape;
void (*unused254)(physx::PxPhysics &) = &PxRegisterArticulations;
void (*unused255)(physx::PxPhysics &) = &PxRegisterArticulationsReducedCoordinate;
void (*unused256)(physx::PxPhysics &) = &PxRegisterHeightFields;
physx::PxPhysics * (*unused257)(unsigned int, physx::PxFoundation &, const physx::PxTolerancesScale &, bool, physx::PxPvd *) = &PxCreateBasePhysics;
physx::PxPhysics * (*unused258)(unsigned int, physx::PxFoundation &, const physx::PxTolerancesScale &, bool, physx::PxPvd *) = &PxCreatePhysics;
physx::PxPhysics & (*unused259)() = &PxGetPhysics;
void __PxVec4__ctor(void* _this) { new (_this) physx::PxVec4(); }
void __PxVec4__ctor(void* _this, physx::PxZERO _0) { new (_this) physx::PxVec4(_0); }
void __PxVec4__ctor(void* _this, float _0) { new (_this) physx::PxVec4(_0); }
void __PxVec4__ctor(void* _this, float _0, float _1, float _2, float _3) { new (_this) physx::PxVec4(_0, _1, _2, _3); }
void __PxVec4__ctor(void* _this, const physx::PxVec3 & _0, float _1) { new (_this) physx::PxVec4(_0, _1); }
void __PxVec4__ctor(void* _this, float const _0[]) { new (_this) physx::PxVec4(_0); }
void __PxVec4__ctor(void* _this, const physx::PxVec4 & _0) { new (_this) physx::PxVec4(_0); }
physx::PxVec4 & (physx::PxVec4::* unused260)(const physx::PxVec4 &) = &physx::PxVec4::operator=;
float & (physx::PxVec4::* unused261)(unsigned int) = &physx::PxVec4::operator[];
const float & (physx::PxVec4::* unused262)(unsigned int) const = &physx::PxVec4::operator[];
bool (physx::PxVec4::* unused263)(const physx::PxVec4 &) const = &physx::PxVec4::operator==;
bool (physx::PxVec4::* unused264)(const physx::PxVec4 &) const = &physx::PxVec4::operator!=;
bool (physx::PxVec4::* unused265)() const = &physx::PxVec4::isZero;
bool (physx::PxVec4::* unused266)() const = &physx::PxVec4::isFinite;
bool (physx::PxVec4::* unused267)() const = &physx::PxVec4::isNormalized;
float (physx::PxVec4::* unused268)() const = &physx::PxVec4::magnitudeSquared;
float (physx::PxVec4::* unused269)() const = &physx::PxVec4::magnitude;
physx::PxVec4 (physx::PxVec4::* unused270)() const = &physx::PxVec4::operator-;
physx::PxVec4 (physx::PxVec4::* unused271)(const physx::PxVec4 &) const = &physx::PxVec4::operator+;
physx::PxVec4 (physx::PxVec4::* unused272)(const physx::PxVec4 &) const = &physx::PxVec4::operator-;
physx::PxVec4 (physx::PxVec4::* unused273)(float) const = &physx::PxVec4::operator*;
physx::PxVec4 (physx::PxVec4::* unused274)(float) const = &physx::PxVec4::operator/;
physx::PxVec4 & (physx::PxVec4::* unused275)(const physx::PxVec4 &) = &physx::PxVec4::operator+=;
physx::PxVec4 & (physx::PxVec4::* unused276)(const physx::PxVec4 &) = &physx::PxVec4::operator-=;
physx::PxVec4 & (physx::PxVec4::* unused277)(float) = &physx::PxVec4::operator*=;
physx::PxVec4 & (physx::PxVec4::* unused278)(float) = &physx::PxVec4::operator/=;
float (physx::PxVec4::* unused279)(const physx::PxVec4 &) const = &physx::PxVec4::dot;
physx::PxVec4 (physx::PxVec4::* unused280)() const = &physx::PxVec4::getNormalized;
float (physx::PxVec4::* unused281)() = &physx::PxVec4::normalize;
physx::PxVec4 (physx::PxVec4::* unused282)(const physx::PxVec4 &) const = &physx::PxVec4::multiply;
physx::PxVec4 (physx::PxVec4::* unused283)(const physx::PxVec4 &) const = &physx::PxVec4::minimum;
physx::PxVec4 (physx::PxVec4::* unused284)(const physx::PxVec4 &) const = &physx::PxVec4::maximum;
physx::PxVec3 (physx::PxVec4::* unused285)() const = &physx::PxVec4::getXYZ;
void (physx::PxVec4::* unused286)() = &physx::PxVec4::setZero;
void __PxMat44__ctor(void* _this) { new (_this) physx::PxMat44(); }
void __PxMat44__ctor(void* _this, physx::PxIDENTITY _0) { new (_this) physx::PxMat44(_0); }
void __PxMat44__ctor(void* _this, physx::PxZERO _0) { new (_this) physx::PxMat44(_0); }
void __PxMat44__ctor(void* _this, const physx::PxVec4 & _0, const physx::PxVec4 & _1, const physx::PxVec4 & _2, const physx::PxVec4 & _3) { new (_this) physx::PxMat44(_0, _1, _2, _3); }
void __PxMat44__ctor(void* _this, float _0) { new (_this) physx::PxMat44(_0); }
void __PxMat44__ctor(void* _this, const physx::PxVec3 & _0, const physx::PxVec3 & _1, const physx::PxVec3 & _2, const physx::PxVec3 & _3) { new (_this) physx::PxMat44(_0, _1, _2, _3); }
void __PxMat44__ctor(void* _this, float  _0[]) { new (_this) physx::PxMat44(_0); }
void __PxMat44__ctor(void* _this, const physx::PxQuat & _0) { new (_this) physx::PxMat44(_0); }
void __PxMat44__ctor(void* _this, const physx::PxVec4 & _0) { new (_this) physx::PxMat44(_0); }
void __PxMat44__ctor(void* _this, const physx::PxMat33 & _0, const physx::PxVec3 & _1) { new (_this) physx::PxMat44(_0, _1); }
void __PxMat44__ctor(void* _this, const physx::PxTransform & _0) { new (_this) physx::PxMat44(_0); }
bool (physx::PxMat44::* unused287)(const physx::PxMat44 &) const = &physx::PxMat44::operator==;
void __PxMat44__ctor(void* _this, const physx::PxMat44 & _0) { new (_this) physx::PxMat44(_0); }
physx::PxMat44 & (physx::PxMat44::* unused288)(const physx::PxMat44 &) = &physx::PxMat44::operator=;
const physx::PxMat44 (physx::PxMat44::* unused289)() const = &physx::PxMat44::getTranspose;
const physx::PxMat44 (physx::PxMat44::* unused290)() const = &physx::PxMat44::operator-;
const physx::PxMat44 (physx::PxMat44::* unused291)(const physx::PxMat44 &) const = &physx::PxMat44::operator+;
const physx::PxMat44 (physx::PxMat44::* unused292)(const physx::PxMat44 &) const = &physx::PxMat44::operator-;
const physx::PxMat44 (physx::PxMat44::* unused293)(float) const = &physx::PxMat44::operator*;
const physx::PxMat44 (physx::PxMat44::* unused294)(const physx::PxMat44 &) const = &physx::PxMat44::operator*;
physx::PxMat44 & (physx::PxMat44::* unused295)(const physx::PxMat44 &) = &physx::PxMat44::operator+=;
physx::PxMat44 & (physx::PxMat44::* unused296)(const physx::PxMat44 &) = &physx::PxMat44::operator-=;
physx::PxMat44 & (physx::PxMat44::* unused297)(float) = &physx::PxMat44::operator*=;
physx::PxMat44 & (physx::PxMat44::* unused298)(const physx::PxMat44 &) = &physx::PxMat44::operator*=;
float (physx::PxMat44::* unused299)(unsigned int, unsigned int) const = &physx::PxMat44::operator();
float & (physx::PxMat44::* unused300)(unsigned int, unsigned int) = &physx::PxMat44::operator();
const physx::PxVec4 (physx::PxMat44::* unused301)(const physx::PxVec4 &) const = &physx::PxMat44::transform;
const physx::PxVec3 (physx::PxMat44::* unused302)(const physx::PxVec3 &) const = &physx::PxMat44::transform;
const physx::PxVec4 (physx::PxMat44::* unused303)(const physx::PxVec4 &) const = &physx::PxMat44::rotate;
const physx::PxVec3 (physx::PxMat44::* unused304)(const physx::PxVec3 &) const = &physx::PxMat44::rotate;
const physx::PxVec3 (physx::PxMat44::* unused305)(int) const = &physx::PxMat44::getBasis;
const physx::PxVec3 (physx::PxMat44::* unused306)() const = &physx::PxMat44::getPosition;
void (physx::PxMat44::* unused307)(const physx::PxVec3 &) = &physx::PxMat44::setPosition;
const float * (physx::PxMat44::* unused308)() const = &physx::PxMat44::front;
physx::PxVec4 & (physx::PxMat44::* unused309)(unsigned int) = &physx::PxMat44::operator[];
const physx::PxVec4 & (physx::PxMat44::* unused310)(unsigned int) const = &physx::PxMat44::operator[];
void (physx::PxMat44::* unused311)(const physx::PxVec4 &) = &physx::PxMat44::scale;
const physx::PxMat44 (physx::PxMat44::* unused312)() const = &physx::PxMat44::inverseRT;
bool (physx::PxMat44::* unused313)() const = &physx::PxMat44::isFinite;
void __PxVec2__ctor(void* _this) { new (_this) physx::PxVec2(); }
void __PxVec2__ctor(void* _this, physx::PxZERO _0) { new (_this) physx::PxVec2(_0); }
void __PxVec2__ctor(void* _this, float _0) { new (_this) physx::PxVec2(_0); }
void __PxVec2__ctor(void* _this, float _0, float _1) { new (_this) physx::PxVec2(_0, _1); }
void __PxVec2__ctor(void* _this, const physx::PxVec2 & _0) { new (_this) physx::PxVec2(_0); }
physx::PxVec2 & (physx::PxVec2::* unused314)(const physx::PxVec2 &) = &physx::PxVec2::operator=;
float & (physx::PxVec2::* unused315)(int) = &physx::PxVec2::operator[];
const float & (physx::PxVec2::* unused316)(int) const = &physx::PxVec2::operator[];
bool (physx::PxVec2::* unused317)(const physx::PxVec2 &) const = &physx::PxVec2::operator==;
bool (physx::PxVec2::* unused318)(const physx::PxVec2 &) const = &physx::PxVec2::operator!=;
bool (physx::PxVec2::* unused319)() const = &physx::PxVec2::isZero;
bool (physx::PxVec2::* unused320)() const = &physx::PxVec2::isFinite;
bool (physx::PxVec2::* unused321)() const = &physx::PxVec2::isNormalized;
float (physx::PxVec2::* unused322)() const = &physx::PxVec2::magnitudeSquared;
float (physx::PxVec2::* unused323)() const = &physx::PxVec2::magnitude;
physx::PxVec2 (physx::PxVec2::* unused324)() const = &physx::PxVec2::operator-;
physx::PxVec2 (physx::PxVec2::* unused325)(const physx::PxVec2 &) const = &physx::PxVec2::operator+;
physx::PxVec2 (physx::PxVec2::* unused326)(const physx::PxVec2 &) const = &physx::PxVec2::operator-;
physx::PxVec2 (physx::PxVec2::* unused327)(float) const = &physx::PxVec2::operator*;
physx::PxVec2 (physx::PxVec2::* unused328)(float) const = &physx::PxVec2::operator/;
physx::PxVec2 & (physx::PxVec2::* unused329)(const physx::PxVec2 &) = &physx::PxVec2::operator+=;
physx::PxVec2 & (physx::PxVec2::* unused330)(const physx::PxVec2 &) = &physx::PxVec2::operator-=;
physx::PxVec2 & (physx::PxVec2::* unused331)(float) = &physx::PxVec2::operator*=;
physx::PxVec2 & (physx::PxVec2::* unused332)(float) = &physx::PxVec2::operator/=;
float (physx::PxVec2::* unused333)(const physx::PxVec2 &) const = &physx::PxVec2::dot;
physx::PxVec2 (physx::PxVec2::* unused334)() const = &physx::PxVec2::getNormalized;
float (physx::PxVec2::* unused335)() = &physx::PxVec2::normalize;
physx::PxVec2 (physx::PxVec2::* unused336)(const physx::PxVec2 &) const = &physx::PxVec2::multiply;
physx::PxVec2 (physx::PxVec2::* unused337)(const physx::PxVec2 &) const = &physx::PxVec2::minimum;
float (physx::PxVec2::* unused338)() const = &physx::PxVec2::minElement;
physx::PxVec2 (physx::PxVec2::* unused339)(const physx::PxVec2 &) const = &physx::PxVec2::maximum;
float (physx::PxVec2::* unused340)() const = &physx::PxVec2::maxElement;
void __PxDebugPoint__ctor(void* _this, const physx::PxVec3 & _0, const unsigned int & _1) { new (_this) physx::PxDebugPoint(_0, _1); }
void __PxDebugLine__ctor(void* _this, const physx::PxVec3 & _0, const physx::PxVec3 & _1, const unsigned int & _2) { new (_this) physx::PxDebugLine(_0, _1, _2); }
void __PxDebugTriangle__ctor(void* _this, const physx::PxVec3 & _0, const physx::PxVec3 & _1, const physx::PxVec3 & _2, const unsigned int & _3) { new (_this) physx::PxDebugTriangle(_0, _1, _2, _3); }
void __PxDebugText__ctor(void* _this) { new (_this) physx::PxDebugText(); }
void __PxDebugText__ctor(void* _this, const physx::PxVec3 & _0, const float & _1, const unsigned int & _2, const char * _3) { new (_this) physx::PxDebugText(_0, _1, _2, _3); }
void __PxTolerancesScale__ctor(void* _this) { new (_this) physx::PxTolerancesScale(); }
bool (physx::PxTolerancesScale::* unused341)() const = &physx::PxTolerancesScale::isValid;
physx::PxTaskManager * (*unused342)(physx::PxErrorCallback &, physx::PxCpuDispatcher *) = &physx::PxTaskManager::createTaskManager;
physx::PxTaskManager * (physx::PxBaseTask::* unused343)() const = &physx::PxBaseTask::getTaskManager;
void (physx::PxBaseTask::* unused344)(unsigned long long) = &physx::PxBaseTask::setContextId;
unsigned long long (physx::PxBaseTask::* unused345)() const = &physx::PxBaseTask::getContextId;
void (physx::PxTask::* unused346)(unsigned int) = &physx::PxTask::finishBefore;
void (physx::PxTask::* unused347)(unsigned int) = &physx::PxTask::startAfter;
unsigned int (physx::PxTask::* unused348)() const = &physx::PxTask::getTaskID;
void (physx::PxLightCpuTask::* unused349)(physx::PxTaskManager &, physx::PxBaseTask *) = &physx::PxLightCpuTask::setContinuation;
void (physx::PxLightCpuTask::* unused350)(physx::PxBaseTask *) = &physx::PxLightCpuTask::setContinuation;
physx::PxBaseTask * (physx::PxLightCpuTask::* unused351)() const = &physx::PxLightCpuTask::getContinuation;
void __PxAllocInfo__ctor(void* _this) { new (_this) physx::PxAllocInfo(); }
void __PxAllocInfo__ctor(void* _this, const char * _0, int _1, const char * _2, physx::PxAllocId::Enum _3) { new (_this) physx::PxAllocInfo(_0, _1, _2, _3); }
const char * (physx::PxAllocInfo::* unused352)() const = &physx::PxAllocInfo::getFileName;
int (physx::PxAllocInfo::* unused353)() const = &physx::PxAllocInfo::getLine;
const char * (physx::PxAllocInfo::* unused354)() const = &physx::PxAllocInfo::getAllocName;
physx::PxAllocId::Enum (physx::PxAllocInfo::* unused355)() const = &physx::PxAllocInfo::getAllocId;
void __PxCudaBufferType__ctor(void* _this, const physx::PxCudaBufferType & _0) { new (_this) physx::PxCudaBufferType(_0); }
void __PxCudaBufferType__ctor(void* _this, physx::PxCudaBufferMemorySpace::Enum _0, physx::PxCudaBufferFlags::Enum _1) { new (_this) physx::PxCudaBufferType(_0, _1); }
void __PxCudaContextManagerDesc__ctor(void* _this) { new (_this) physx::PxCudaContextManagerDesc(); }
void __PxScopedCudaLock__ctor(void* _this, physx::PxCudaContextManager & _0) { new (_this) physx::PxScopedCudaLock(_0); }
bool (*unused356)(const physx::PxVec3 &, const float, const physx::PxGeometry &, const physx::PxTransform &, const physx::PxGeometry &, const physx::PxTransform &, physx::PxSweepHit &, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>, const float) = &physx::PxGeometryQuery::sweep;
bool (*unused357)(const physx::PxGeometry &, const physx::PxTransform &, const physx::PxGeometry &, const physx::PxTransform &) = &physx::PxGeometryQuery::overlap;
unsigned int (*unused358)(const physx::PxVec3 &, const physx::PxVec3 &, const physx::PxGeometry &, const physx::PxTransform &, float, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>, unsigned int, physx::PxRaycastHit *__restrict) = &physx::PxGeometryQuery::raycast;
bool (*unused359)(physx::PxVec3 &, float &, const physx::PxGeometry &, const physx::PxTransform &, const physx::PxGeometry &, const physx::PxTransform &) = &physx::PxGeometryQuery::computePenetration;
float (*unused360)(const physx::PxVec3 &, const physx::PxGeometry &, const physx::PxTransform &, physx::PxVec3 *) = &physx::PxGeometryQuery::pointDistance;
physx::PxBounds3 (*unused361)(const physx::PxGeometry &, const physx::PxTransform &, float) = &physx::PxGeometryQuery::getWorldBounds;
bool (*unused362)(const physx::PxGeometry &) = &physx::PxGeometryQuery::isValid;
unsigned char (physx::PxHeightFieldSample::* unused363)() const = &physx::PxHeightFieldSample::tessFlag;
void (physx::PxHeightFieldSample::* unused364)() = &physx::PxHeightFieldSample::setTessFlag;
void (physx::PxHeightFieldSample::* unused365)() = &physx::PxHeightFieldSample::clearTessFlag;
void __PxHeightFieldDesc__ctor(void* _this) { new (_this) physx::PxHeightFieldDesc(); }
void (physx::PxHeightFieldDesc::* unused366)() = &physx::PxHeightFieldDesc::setToDefault;
bool (physx::PxHeightFieldDesc::* unused367)() const = &physx::PxHeightFieldDesc::isValid;
void (*unused368)(const physx::PxTriangleMeshGeometry &, const physx::PxTransform &, unsigned int, physx::PxTriangle &, unsigned int *, unsigned int *) = &physx::PxMeshQuery::getTriangle;
void (*unused369)(const physx::PxHeightFieldGeometry &, const physx::PxTransform &, unsigned int, physx::PxTriangle &, unsigned int *, unsigned int *) = &physx::PxMeshQuery::getTriangle;
unsigned int (*unused370)(const physx::PxGeometry &, const physx::PxTransform &, const physx::PxTriangleMeshGeometry &, const physx::PxTransform &, unsigned int *, unsigned int, unsigned int, bool &) = &physx::PxMeshQuery::findOverlapTriangleMesh;
unsigned int (*unused371)(const physx::PxGeometry &, const physx::PxTransform &, const physx::PxHeightFieldGeometry &, const physx::PxTransform &, unsigned int *, unsigned int, unsigned int, bool &) = &physx::PxMeshQuery::findOverlapHeightField;
bool (*unused372)(const physx::PxVec3 &, const float, const physx::PxGeometry &, const physx::PxTransform &, unsigned int, const physx::PxTriangle *, physx::PxSweepHit &, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>, const unsigned int *, const float, bool) = &physx::PxMeshQuery::sweep;
void __PxSimpleTriangleMesh__ctor(void* _this) { new (_this) physx::PxSimpleTriangleMesh(); }
void (physx::PxSimpleTriangleMesh::* unused373)() = &physx::PxSimpleTriangleMesh::setToDefault;
bool (physx::PxSimpleTriangleMesh::* unused374)() const = &physx::PxSimpleTriangleMesh::isValid;
void __PxTriangle__ctor(void* _this) { new (_this) physx::PxTriangle(); }
void __PxTriangle__ctor(void* _this, const physx::PxVec3 & _0, const physx::PxVec3 & _1, const physx::PxVec3 & _2) { new (_this) physx::PxTriangle(_0, _1, _2); }
void __PxTriangle__ctor(void* _this, const physx::PxTriangle & _0) { new (_this) physx::PxTriangle(_0); }
void (physx::PxTriangle::* unused375)(const physx::PxTriangle &) = &physx::PxTriangle::operator=;
void (physx::PxTriangle::* unused376)(physx::PxVec3 &) const = &physx::PxTriangle::normal;
void (physx::PxTriangle::* unused377)(physx::PxVec3 &) const = &physx::PxTriangle::denormalizedNormal;
float (physx::PxTriangle::* unused378)() const = &physx::PxTriangle::area;
physx::PxVec3 (physx::PxTriangle::* unused379)(float, float) const = &physx::PxTriangle::pointFromUV;
void __PxSceneLimits__ctor(void* _this) { new (_this) physx::PxSceneLimits(); }
void (physx::PxSceneLimits::* unused380)() = &physx::PxSceneLimits::setToDefault;
bool (physx::PxSceneLimits::* unused381)() const = &physx::PxSceneLimits::isValid;
void __PxgDynamicsMemoryConfig__ctor(void* _this) { new (_this) physx::PxgDynamicsMemoryConfig(); }
void __PxSceneDesc__ctor(void* _this, const physx::PxTolerancesScale & _0) { new (_this) physx::PxSceneDesc(_0); }
void (physx::PxSceneDesc::* unused382)(const physx::PxTolerancesScale &) = &physx::PxSceneDesc::setToDefault;
bool (physx::PxSceneDesc::* unused383)() const = &physx::PxSceneDesc::isValid;
const physx::PxTolerancesScale & (physx::PxSceneDesc::* unused384)() const = &physx::PxSceneDesc::getTolerancesScale;
unsigned int (physx::PxSimulationStatistics::* unused385)() const = &physx::PxSimulationStatistics::getNbBroadPhaseAdds;
unsigned int (physx::PxSimulationStatistics::* unused386)() const = &physx::PxSimulationStatistics::getNbBroadPhaseRemoves;
unsigned int (physx::PxSimulationStatistics::* unused387)(physx::PxSimulationStatistics::RbPairStatsType, physx::PxGeometryType::Enum, physx::PxGeometryType::Enum) const = &physx::PxSimulationStatistics::getRbPairStats;
void __PxSimulationStatistics__ctor(void* _this) { new (_this) physx::PxSimulationStatistics(); }
void __PxDominanceGroupPair__ctor(void* _this, unsigned char _0, unsigned char _1) { new (_this) physx::PxDominanceGroupPair(_0, _1); }
void __PxQueryCache__ctor(void* _this) { new (_this) physx::PxQueryCache(); }
void __PxQueryCache__ctor(void* _this, physx::PxShape * _0, unsigned int _1) { new (_this) physx::PxQueryCache(_0, _1); }
void __PxSceneReadLock__ctor(void* _this, physx::PxScene & _0, const char * _1, unsigned int _2) { new (_this) physx::PxSceneReadLock(_0, _1, _2); }
void __PxSceneWriteLock__ctor(void* _this, physx::PxScene & _0, const char * _1, unsigned int _2) { new (_this) physx::PxSceneWriteLock(_0, _1, _2); }
void __PxContactPairExtraDataItem__ctor(void* _this) { new (_this) physx::PxContactPairExtraDataItem(); }
void __PxContactPairVelocity__ctor(void* _this) { new (_this) physx::PxContactPairVelocity(); }
void __PxContactPairPose__ctor(void* _this) { new (_this) physx::PxContactPairPose(); }
void __PxContactPairIndex__ctor(void* _this) { new (_this) physx::PxContactPairIndex(); }
void __PxContactPairExtraDataIterator__ctor(void* _this, const unsigned char * _0, unsigned int _1) { new (_this) physx::PxContactPairExtraDataIterator(_0, _1); }
bool (physx::PxContactPairExtraDataIterator::* unused388)() = &physx::PxContactPairExtraDataIterator::nextItemSet;
void __PxContactPairHeader__ctor(void* _this) { new (_this) physx::PxContactPairHeader(); }
void __PxContactPair__ctor(void* _this) { new (_this) physx::PxContactPair(); }
unsigned int (physx::PxContactPair::* unused389)(physx::PxContactPairPoint *, unsigned int) const = &physx::PxContactPair::extractContacts;
void (physx::PxContactPair::* unused390)(physx::PxContactPair *, unsigned char *) const = &physx::PxContactPair::bufferContacts;
const unsigned int * (physx::PxContactPair::* unused391)() const = &physx::PxContactPair::getInternalFaceIndices;
void __PxTriggerPair__ctor(void* _this) { new (_this) physx::PxTriggerPair(); }
void __PxConstraintInfo__ctor(void* _this) { new (_this) physx::PxConstraintInfo(); }
void __PxConstraintInfo__ctor(void* _this, physx::PxConstraint * _0, void * _1, unsigned int _2) { new (_this) physx::PxConstraintInfo(_0, _1, _2); }
void __PxExtendedVec3__ctor(void* _this) { new (_this) physx::PxExtendedVec3(); }
void __PxExtendedVec3__ctor(void* _this, double _0, double _1, double _2) { new (_this) physx::PxExtendedVec3(_0, _1, _2); }
bool (physx::PxExtendedVec3::* unused392)() const = &physx::PxExtendedVec3::isZero;
double (physx::PxExtendedVec3::* unused393)(const physx::PxVec3 &) const = &physx::PxExtendedVec3::dot;
double (physx::PxExtendedVec3::* unused394)(const physx::PxExtendedVec3 &) const = &physx::PxExtendedVec3::distanceSquared;
double (physx::PxExtendedVec3::* unused395)() const = &physx::PxExtendedVec3::magnitudeSquared;
double (physx::PxExtendedVec3::* unused396)() const = &physx::PxExtendedVec3::magnitude;
double (physx::PxExtendedVec3::* unused397)() = &physx::PxExtendedVec3::normalize;
bool (physx::PxExtendedVec3::* unused398)() const = &physx::PxExtendedVec3::isFinite;
void (physx::PxExtendedVec3::* unused399)(const physx::PxExtendedVec3 &) = &physx::PxExtendedVec3::maximum;
void (physx::PxExtendedVec3::* unused400)(const physx::PxExtendedVec3 &) = &physx::PxExtendedVec3::minimum;
void (physx::PxExtendedVec3::* unused401)(double, double, double) = &physx::PxExtendedVec3::set;
void (physx::PxExtendedVec3::* unused402)() = &physx::PxExtendedVec3::setPlusInfinity;
void (physx::PxExtendedVec3::* unused403)() = &physx::PxExtendedVec3::setMinusInfinity;
void (physx::PxExtendedVec3::* unused404)(const physx::PxExtendedVec3 &, const physx::PxVec3 &) = &physx::PxExtendedVec3::cross;
void (physx::PxExtendedVec3::* unused405)(const physx::PxExtendedVec3 &, const physx::PxExtendedVec3 &) = &physx::PxExtendedVec3::cross;
physx::PxExtendedVec3 (physx::PxExtendedVec3::* unused406)(const physx::PxExtendedVec3 &) const = &physx::PxExtendedVec3::cross;
void (physx::PxExtendedVec3::* unused407)(const physx::PxVec3 &, const physx::PxExtendedVec3 &) = &physx::PxExtendedVec3::cross;
physx::PxExtendedVec3 (physx::PxExtendedVec3::* unused408)() const = &physx::PxExtendedVec3::operator-;
physx::PxExtendedVec3 & (physx::PxExtendedVec3::* unused409)(const physx::PxExtendedVec3 &) = &physx::PxExtendedVec3::operator+=;
physx::PxExtendedVec3 & (physx::PxExtendedVec3::* unused410)(const physx::PxExtendedVec3 &) = &physx::PxExtendedVec3::operator-=;
physx::PxExtendedVec3 & (physx::PxExtendedVec3::* unused411)(const physx::PxVec3 &) = &physx::PxExtendedVec3::operator+=;
physx::PxExtendedVec3 & (physx::PxExtendedVec3::* unused412)(const physx::PxVec3 &) = &physx::PxExtendedVec3::operator-=;
physx::PxExtendedVec3 & (physx::PxExtendedVec3::* unused413)(const float &) = &physx::PxExtendedVec3::operator*=;
physx::PxExtendedVec3 (physx::PxExtendedVec3::* unused414)(const physx::PxExtendedVec3 &) const = &physx::PxExtendedVec3::operator+;
physx::PxVec3 (physx::PxExtendedVec3::* unused415)(const physx::PxExtendedVec3 &) const = &physx::PxExtendedVec3::operator-;
double & (physx::PxExtendedVec3::* unused416)(int) = &physx::PxExtendedVec3::operator[];
double (physx::PxExtendedVec3::* unused417)(int) const = &physx::PxExtendedVec3::operator[];
physx::PxGeometryType::Enum (physx::PxObstacle::* unused418)() const = &physx::PxObstacle::getType;
void __PxBoxObstacle__ctor(void* _this) { new (_this) physx::PxBoxObstacle(); }
void __PxCapsuleObstacle__ctor(void* _this) { new (_this) physx::PxCapsuleObstacle(); }
void __PxControllerFilters__ctor(void* _this, const physx::PxFilterData * _0, physx::PxQueryFilterCallback * _1, physx::PxControllerFilterCallback * _2) { new (_this) physx::PxControllerFilters(_0, _1, _2); }
physx::PxControllerShapeType::Enum (physx::PxControllerDesc::* unused419)() const = &physx::PxControllerDesc::getType;
void __PxBoxControllerDesc__ctor(void* _this) { new (_this) physx::PxBoxControllerDesc(); }
void __PxBoxControllerDesc__ctor(void* _this, const physx::PxBoxControllerDesc & _0) { new (_this) physx::PxBoxControllerDesc(_0); }
physx::PxBoxControllerDesc & (physx::PxBoxControllerDesc::* unused420)(const physx::PxBoxControllerDesc &) = &physx::PxBoxControllerDesc::operator=;
void __PxCapsuleControllerDesc__ctor(void* _this) { new (_this) physx::PxCapsuleControllerDesc(); }
void __PxCapsuleControllerDesc__ctor(void* _this, const physx::PxCapsuleControllerDesc & _0) { new (_this) physx::PxCapsuleControllerDesc(_0); }
physx::PxCapsuleControllerDesc & (physx::PxCapsuleControllerDesc::* unused421)(const physx::PxCapsuleControllerDesc &) = &physx::PxCapsuleControllerDesc::operator=;
physx::PxControllerManager * (*unused422)(physx::PxScene &, bool) = &PxCreateControllerManager;
void __PxConvexMeshDesc__ctor(void* _this) { new (_this) physx::PxConvexMeshDesc(); }
void (physx::PxConvexMeshDesc::* unused423)() = &physx::PxConvexMeshDesc::setToDefault;
bool (physx::PxConvexMeshDesc::* unused424)() const = &physx::PxConvexMeshDesc::isValid;
void __PxTriangleMeshDesc__ctor(void* _this) { new (_this) physx::PxTriangleMeshDesc(); }
void (physx::PxTriangleMeshDesc::* unused425)() = &physx::PxTriangleMeshDesc::setToDefault;
bool (physx::PxTriangleMeshDesc::* unused426)() const = &physx::PxTriangleMeshDesc::isValid;
void (physx::PxBVH33MidphaseDesc::* unused427)() = &physx::PxBVH33MidphaseDesc::setToDefault;
bool (physx::PxBVH33MidphaseDesc::* unused428)() const = &physx::PxBVH33MidphaseDesc::isValid;
void (physx::PxBVH34MidphaseDesc::* unused429)() = &physx::PxBVH34MidphaseDesc::setToDefault;
bool (physx::PxBVH34MidphaseDesc::* unused430)() const = &physx::PxBVH34MidphaseDesc::isValid;
void __PxMidphaseDesc__ctor(void* _this) { new (_this) physx::PxMidphaseDesc(); }
physx::PxMeshMidPhase::Enum (physx::PxMidphaseDesc::* unused431)() const = &physx::PxMidphaseDesc::getType;
void (physx::PxMidphaseDesc::* unused432)(physx::PxMeshMidPhase::Enum) = &physx::PxMidphaseDesc::setToDefault;
bool (physx::PxMidphaseDesc::* unused433)() const = &physx::PxMidphaseDesc::isValid;
physx::PxMidphaseDesc & (physx::PxMidphaseDesc::* unused434)(physx::PxMeshMidPhase::Enum) = &physx::PxMidphaseDesc::operator=;
void __PxBVHStructureDesc__ctor(void* _this) { new (_this) physx::PxBVHStructureDesc(); }
void (physx::PxBVHStructureDesc::* unused435)() = &physx::PxBVHStructureDesc::setToDefault;
bool (physx::PxBVHStructureDesc::* unused436)() const = &physx::PxBVHStructureDesc::isValid;
void __PxCookingParams__ctor(void* _this, const physx::PxTolerancesScale & _0) { new (_this) physx::PxCookingParams(_0); }
physx::PxCooking * (*unused437)(unsigned int, physx::PxFoundation &, const physx::PxCookingParams &) = &PxCreateCooking;
void __PxDefaultMemoryOutputStream__ctor(void* _this, physx::PxAllocatorCallback & _0) { new (_this) physx::PxDefaultMemoryOutputStream(_0); }
void __PxDefaultMemoryInputData__ctor(void* _this, unsigned char * _0, unsigned int _1) { new (_this) physx::PxDefaultMemoryInputData(_0, _1); }
void __PxDefaultFileOutputStream__ctor(void* _this, const char * _0) { new (_this) physx::PxDefaultFileOutputStream(_0); }
void __PxDefaultFileInputData__ctor(void* _this, const char * _0) { new (_this) physx::PxDefaultFileInputData(_0); }
bool (physx::PxDefaultFileInputData::* unused438)() const = &physx::PxDefaultFileInputData::isValid;
void (*unused439)(physx::PxOutputStream &) = &physx::PxJoint::getBinaryMetaData;
void (*unused440)(physx::PxJoint &, const physx::PxVec3 *, const physx::PxVec3 *) = &PxSetJointGlobalFrame;
void __PxSpring__ctor(void* _this, float _0, float _1) { new (_this) physx::PxSpring(_0, _1); }
physx::PxDistanceJoint * (*unused441)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxTransform &, physx::PxRigidActor *, const physx::PxTransform &) = &physx::PxDistanceJointCreate;
void * (*unused442)(unsigned long long) = &physx::platformAlignedAlloc;
void (*unused443)(void *) = &physx::platformAlignedFree;
void __PxJacobianRow__ctor(void* _this) { new (_this) physx::PxJacobianRow(); }
void __PxJacobianRow__ctor(void* _this, const physx::PxVec3 & _0, const physx::PxVec3 & _1, const physx::PxVec3 & _2, const physx::PxVec3 & _3) { new (_this) physx::PxJacobianRow(_0, _1, _2, _3); }
void (physx::PxJacobianRow::* unused444)(const float) = &physx::PxJacobianRow::operator*=;
physx::PxJacobianRow (physx::PxJacobianRow::* unused445)(const float) const = &physx::PxJacobianRow::operator*;
physx::PxContactJoint * (*unused446)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxTransform &, physx::PxRigidActor *, const physx::PxTransform &) = &physx::PxContactJointCreate;
physx::PxFixedJoint * (*unused447)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxTransform &, physx::PxRigidActor *, const physx::PxTransform &) = &physx::PxFixedJointCreate;
void __PxJointLimitParameters__ctor(void* _this) { new (_this) physx::PxJointLimitParameters(); }
void __PxJointLimitParameters__ctor(void* _this, const physx::PxJointLimitParameters & _0) { new (_this) physx::PxJointLimitParameters(_0); }
bool (physx::PxJointLimitParameters::* unused448)() const = &physx::PxJointLimitParameters::isValid;
bool (physx::PxJointLimitParameters::* unused449)() const = &physx::PxJointLimitParameters::isSoft;
void __PxJointLinearLimit__ctor(void* _this, const physx::PxTolerancesScale & _0, float _1, float _2) { new (_this) physx::PxJointLinearLimit(_0, _1, _2); }
void __PxJointLinearLimit__ctor(void* _this, float _0, const physx::PxSpring & _1) { new (_this) physx::PxJointLinearLimit(_0, _1); }
bool (physx::PxJointLinearLimit::* unused450)() const = &physx::PxJointLinearLimit::isValid;
void __PxJointLinearLimitPair__ctor(void* _this, const physx::PxTolerancesScale & _0, float _1, float _2, float _3) { new (_this) physx::PxJointLinearLimitPair(_0, _1, _2, _3); }
void __PxJointLinearLimitPair__ctor(void* _this, float _0, float _1, const physx::PxSpring & _2) { new (_this) physx::PxJointLinearLimitPair(_0, _1, _2); }
bool (physx::PxJointLinearLimitPair::* unused451)() const = &physx::PxJointLinearLimitPair::isValid;
void __PxJointAngularLimitPair__ctor(void* _this, float _0, float _1, float _2) { new (_this) physx::PxJointAngularLimitPair(_0, _1, _2); }
void __PxJointAngularLimitPair__ctor(void* _this, float _0, float _1, const physx::PxSpring & _2) { new (_this) physx::PxJointAngularLimitPair(_0, _1, _2); }
bool (physx::PxJointAngularLimitPair::* unused452)() const = &physx::PxJointAngularLimitPair::isValid;
void __PxJointLimitCone__ctor(void* _this, float _0, float _1, float _2) { new (_this) physx::PxJointLimitCone(_0, _1, _2); }
void __PxJointLimitCone__ctor(void* _this, float _0, float _1, const physx::PxSpring & _2) { new (_this) physx::PxJointLimitCone(_0, _1, _2); }
bool (physx::PxJointLimitCone::* unused453)() const = &physx::PxJointLimitCone::isValid;
void __PxJointLimitPyramid__ctor(void* _this, float _0, float _1, float _2, float _3, float _4) { new (_this) physx::PxJointLimitPyramid(_0, _1, _2, _3, _4); }
void __PxJointLimitPyramid__ctor(void* _this, float _0, float _1, float _2, float _3, const physx::PxSpring & _4) { new (_this) physx::PxJointLimitPyramid(_0, _1, _2, _3, _4); }
bool (physx::PxJointLimitPyramid::* unused454)() const = &physx::PxJointLimitPyramid::isValid;
physx::PxPrismaticJoint * (*unused455)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxTransform &, physx::PxRigidActor *, const physx::PxTransform &) = &physx::PxPrismaticJointCreate;
physx::PxRevoluteJoint * (*unused456)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxTransform &, physx::PxRigidActor *, const physx::PxTransform &) = &physx::PxRevoluteJointCreate;
physx::PxSphericalJoint * (*unused457)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxTransform &, physx::PxRigidActor *, const physx::PxTransform &) = &physx::PxSphericalJointCreate;
void __PxD6JointDrive__ctor(void* _this) { new (_this) physx::PxD6JointDrive(); }
void __PxD6JointDrive__ctor(void* _this, float _0, float _1, float _2, bool _3) { new (_this) physx::PxD6JointDrive(_0, _1, _2, _3); }
bool (physx::PxD6JointDrive::* unused458)() const = &physx::PxD6JointDrive::isValid;
float (physx::PxD6Joint::* unused459)() const = &physx::PxD6Joint::getTwist;
void (physx::PxD6Joint::* unused460)(const physx::PxJointLinearLimit &) = &physx::PxD6Joint::setLinearLimit;
physx::PxJointLinearLimit (physx::PxD6Joint::* unused461)() const = &physx::PxD6Joint::getLinearLimit;
physx::PxD6Joint * (*unused462)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxTransform &, physx::PxRigidActor *, const physx::PxTransform &) = &physx::PxD6JointCreate;
void __PxGroupsMask__ctor(void* _this) { new (_this) physx::PxGroupsMask(); }
void __PxDefaultErrorCallback__ctor(void* _this) { new (_this) physx::PxDefaultErrorCallback(); }
physx::PxShape * (*unused463)(physx::PxRigidActor &, const physx::PxGeometry &, physx::PxMaterial *const *, unsigned short, physx::PxFlags<physx::PxShapeFlag::Enum, unsigned char>) = &physx::PxRigidActorExt::createExclusiveShape;
physx::PxShape * (*unused464)(physx::PxRigidActor &, const physx::PxGeometry &, const physx::PxMaterial &, physx::PxFlags<physx::PxShapeFlag::Enum, unsigned char>) = &physx::PxRigidActorExt::createExclusiveShape;
physx::PxBounds3 * (*unused465)(const physx::PxRigidActor &, unsigned int &) = &physx::PxRigidActorExt::getRigidActorShapeLocalBoundsList;
void __PxMassProperties__ctor(void* _this) { new (_this) physx::PxMassProperties(); }
void __PxMassProperties__ctor(void* _this, const float _0, const physx::PxMat33 & _1, const physx::PxVec3 & _2) { new (_this) physx::PxMassProperties(_0, _1, _2); }
void __PxMassProperties__ctor(void* _this, const physx::PxGeometry & _0) { new (_this) physx::PxMassProperties(_0); }
physx::PxMassProperties (physx::PxMassProperties::* unused466)(const float) const = &physx::PxMassProperties::operator*;
void (physx::PxMassProperties::* unused467)(const physx::PxVec3 &) = &physx::PxMassProperties::translate;
physx::PxVec3 (*unused468)(const physx::PxMat33 &, physx::PxQuat &) = &physx::PxMassProperties::getMassSpaceInertia;
physx::PxMat33 (*unused469)(const physx::PxMat33 &, const float, const physx::PxVec3 &) = &physx::PxMassProperties::translateInertia;
physx::PxMat33 (*unused470)(const physx::PxMat33 &, const physx::PxQuat &) = &physx::PxMassProperties::rotateInertia;
physx::PxMat33 (*unused471)(const physx::PxMat33 &, const physx::PxQuat &, const physx::PxVec3 &) = &physx::PxMassProperties::scaleInertia;
physx::PxMassProperties (*unused472)(const physx::PxMassProperties *, const physx::PxTransform *, const unsigned int) = &physx::PxMassProperties::sum;
bool (*unused473)(physx::PxRigidBody &, const float *, unsigned int, const physx::PxVec3 *, bool) = &physx::PxRigidBodyExt::updateMassAndInertia;
bool (*unused474)(physx::PxRigidBody &, float, const physx::PxVec3 *, bool) = &physx::PxRigidBodyExt::updateMassAndInertia;
bool (*unused475)(physx::PxRigidBody &, const float *, unsigned int, const physx::PxVec3 *, bool) = &physx::PxRigidBodyExt::setMassAndUpdateInertia;
bool (*unused476)(physx::PxRigidBody &, float, const physx::PxVec3 *, bool) = &physx::PxRigidBodyExt::setMassAndUpdateInertia;
physx::PxMassProperties (*unused477)(const physx::PxShape *const *, unsigned int) = &physx::PxRigidBodyExt::computeMassPropertiesFromShapes;
void (*unused478)(physx::PxRigidBody &, const physx::PxVec3 &, const physx::PxVec3 &, physx::PxForceMode::Enum, bool) = &physx::PxRigidBodyExt::addForceAtPos;
void (*unused479)(physx::PxRigidBody &, const physx::PxVec3 &, const physx::PxVec3 &, physx::PxForceMode::Enum, bool) = &physx::PxRigidBodyExt::addForceAtLocalPos;
void (*unused480)(physx::PxRigidBody &, const physx::PxVec3 &, const physx::PxVec3 &, physx::PxForceMode::Enum, bool) = &physx::PxRigidBodyExt::addLocalForceAtPos;
void (*unused481)(physx::PxRigidBody &, const physx::PxVec3 &, const physx::PxVec3 &, physx::PxForceMode::Enum, bool) = &physx::PxRigidBodyExt::addLocalForceAtLocalPos;
physx::PxVec3 (*unused482)(const physx::PxRigidBody &, const physx::PxVec3 &) = &physx::PxRigidBodyExt::getVelocityAtPos;
physx::PxVec3 (*unused483)(const physx::PxRigidBody &, const physx::PxVec3 &) = &physx::PxRigidBodyExt::getLocalVelocityAtLocalPos;
physx::PxVec3 (*unused484)(const physx::PxRigidBody &, const physx::PxVec3 &) = &physx::PxRigidBodyExt::getVelocityAtOffset;
bool (*unused485)(physx::PxRigidBody &, physx::PxScene &, const physx::PxVec3 &, const float, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>, physx::PxSweepHit &, unsigned int &, const physx::PxQueryFilterData &, physx::PxQueryFilterCallback *, const physx::PxQueryCache *, const float) = &physx::PxRigidBodyExt::linearSweepSingle;
unsigned int (*unused486)(physx::PxRigidBody &, physx::PxScene &, const physx::PxVec3 &, const float, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>, physx::PxSweepHit *, unsigned int *, unsigned int, physx::PxSweepHit &, int &, bool &, const physx::PxQueryFilterData &, physx::PxQueryFilterCallback *, const physx::PxQueryCache *, const float) = &physx::PxRigidBodyExt::linearSweepMultiple;
void (*unused487)(const physx::PxRigidBody &, const physx::PxVec3 &, const physx::PxVec3 &, physx::PxVec3 &, physx::PxVec3 &) = &physx::PxRigidBodyExt::computeVelocityDeltaFromImpulse;
void (*unused488)(const physx::PxRigidBody &, const physx::PxTransform &, const physx::PxVec3 &, const physx::PxVec3 &, const float, const float, physx::PxVec3 &, physx::PxVec3 &) = &physx::PxRigidBodyExt::computeVelocityDeltaFromImpulse;
void (*unused489)(const physx::PxRigidBody &, const physx::PxTransform &, const physx::PxVec3 &, const physx::PxVec3 &, const float, const float, physx::PxVec3 &, physx::PxVec3 &) = &physx::PxRigidBodyExt::computeLinearAngularImpulse;
physx::PxTransform (*unused490)(const physx::PxShape &, const physx::PxRigidActor &) = &physx::PxShapeExt::getGlobalPose;
unsigned int (*unused491)(const physx::PxShape &, const physx::PxRigidActor &, const physx::PxVec3 &, const physx::PxVec3 &, float, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>, unsigned int, physx::PxRaycastHit *) = &physx::PxShapeExt::raycast;
bool (*unused492)(const physx::PxShape &, const physx::PxRigidActor &, const physx::PxGeometry &, const physx::PxTransform &) = &physx::PxShapeExt::overlap;
bool (*unused493)(const physx::PxShape &, const physx::PxRigidActor &, const physx::PxVec3 &, const float, const physx::PxGeometry &, const physx::PxTransform &, physx::PxSweepHit &, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>) = &physx::PxShapeExt::sweep;
physx::PxBounds3 (*unused494)(const physx::PxShape &, const physx::PxRigidActor &, float) = &physx::PxShapeExt::getWorldBounds;
void __PxMeshOverlapUtil__ctor(void* _this) { new (_this) physx::PxMeshOverlapUtil(); }
unsigned int (physx::PxMeshOverlapUtil::* unused495)(const physx::PxGeometry &, const physx::PxTransform &, const physx::PxTriangleMeshGeometry &, const physx::PxTransform &) = &physx::PxMeshOverlapUtil::findOverlap;
unsigned int (physx::PxMeshOverlapUtil::* unused496)(const physx::PxGeometry &, const physx::PxTransform &, const physx::PxHeightFieldGeometry &, const physx::PxTransform &) = &physx::PxMeshOverlapUtil::findOverlap;
const unsigned int * (physx::PxMeshOverlapUtil::* unused497)() const = &physx::PxMeshOverlapUtil::getResults;
unsigned int (physx::PxMeshOverlapUtil::* unused498)() const = &physx::PxMeshOverlapUtil::getNbResults;
void __PxXmlMiscParameter__ctor(void* _this) { new (_this) physx::PxSerialization::PxXmlMiscParameter(); }
void __PxXmlMiscParameter__ctor(void* _this, physx::PxVec3 & _0, physx::PxTolerancesScale _1) { new (_this) physx::PxSerialization::PxXmlMiscParameter(_0, _1); }
bool (*unused499)(physx::PxCollection &, physx::PxSerializationRegistry &, const physx::PxCollection *) = &physx::PxSerialization::isSerializable;
void (*unused500)(physx::PxCollection &, physx::PxSerializationRegistry &, const physx::PxCollection *, bool) = &physx::PxSerialization::complete;
void (*unused501)(physx::PxCollection &, const unsigned long long) = &physx::PxSerialization::createSerialObjectIds;
physx::PxCollection * (*unused502)(physx::PxInputData &, physx::PxCooking &, physx::PxSerializationRegistry &, const physx::PxCollection *, physx::PxStringTable *, physx::PxSerialization::PxXmlMiscParameter *) = &physx::PxSerialization::createCollectionFromXml;
physx::PxCollection * (*unused503)(void *, physx::PxSerializationRegistry &, const physx::PxCollection *) = &physx::PxSerialization::createCollectionFromBinary;
bool (*unused504)(physx::PxOutputStream &, physx::PxCollection &, physx::PxSerializationRegistry &, physx::PxCooking *, const physx::PxCollection *, physx::PxSerialization::PxXmlMiscParameter *) = &physx::PxSerialization::serializeCollectionToXml;
bool (*unused505)(physx::PxOutputStream &, physx::PxCollection &, physx::PxSerializationRegistry &, const physx::PxCollection *, bool) = &physx::PxSerialization::serializeCollectionToBinary;
bool (*unused506)(physx::PxOutputStream &, physx::PxCollection &, physx::PxSerializationRegistry &, const physx::PxCollection *, bool) = &physx::PxSerialization::serializeCollectionToBinaryDeterministic;
void (*unused507)(physx::PxOutputStream &, physx::PxSerializationRegistry &) = &physx::PxSerialization::dumpBinaryMetaData;
physx::PxBinaryConverter * (*unused508)() = &physx::PxSerialization::createBinaryConverter;
physx::PxSerializationRegistry * (*unused509)(physx::PxPhysics &) = &physx::PxSerialization::createSerializationRegistry;
physx::PxDefaultCpuDispatcher * (*unused510)(unsigned int, unsigned int *) = &physx::PxDefaultCpuDispatcherCreate;
physx::PxStringTable & (*unused511)(physx::PxAllocatorCallback &) = &physx::PxStringTableExt::createStringTable;
unsigned int (*unused512)(physx::PxBounds3 *, const physx::PxBounds3 &, unsigned int, unsigned int) = &physx::PxBroadPhaseExt::createRegionsFromWorldBounds;
bool (*unused513)(const physx::PxScene &, const physx::PxVec3 &, const physx::PxVec3 &, const float, physx::PxQueryHit &, const physx::PxQueryFilterData &, physx::PxQueryFilterCallback *, const physx::PxQueryCache *) = &physx::PxSceneQueryExt::raycastAny;
bool (*unused514)(const physx::PxScene &, const physx::PxVec3 &, const physx::PxVec3 &, const float, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>, physx::PxRaycastHit &, const physx::PxQueryFilterData &, physx::PxQueryFilterCallback *, const physx::PxQueryCache *) = &physx::PxSceneQueryExt::raycastSingle;
int (*unused515)(const physx::PxScene &, const physx::PxVec3 &, const physx::PxVec3 &, const float, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>, physx::PxRaycastHit *, unsigned int, bool &, const physx::PxQueryFilterData &, physx::PxQueryFilterCallback *, const physx::PxQueryCache *) = &physx::PxSceneQueryExt::raycastMultiple;
bool (*unused516)(const physx::PxScene &, const physx::PxGeometry &, const physx::PxTransform &, const physx::PxVec3 &, const float, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>, physx::PxQueryHit &, const physx::PxQueryFilterData &, physx::PxQueryFilterCallback *, const physx::PxQueryCache *, float) = &physx::PxSceneQueryExt::sweepAny;
bool (*unused517)(const physx::PxScene &, const physx::PxGeometry &, const physx::PxTransform &, const physx::PxVec3 &, const float, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>, physx::PxSweepHit &, const physx::PxQueryFilterData &, physx::PxQueryFilterCallback *, const physx::PxQueryCache *, float) = &physx::PxSceneQueryExt::sweepSingle;
int (*unused518)(const physx::PxScene &, const physx::PxGeometry &, const physx::PxTransform &, const physx::PxVec3 &, const float, physx::PxFlags<physx::PxHitFlag::Enum, unsigned short>, physx::PxSweepHit *, unsigned int, bool &, const physx::PxQueryFilterData &, physx::PxQueryFilterCallback *, const physx::PxQueryCache *, float) = &physx::PxSceneQueryExt::sweepMultiple;
int (*unused519)(const physx::PxScene &, const physx::PxGeometry &, const physx::PxTransform &, physx::PxOverlapHit *, unsigned int, const physx::PxQueryFilterData &, physx::PxQueryFilterCallback *) = &physx::PxSceneQueryExt::overlapMultiple;
bool (*unused520)(const physx::PxScene &, const physx::PxGeometry &, const physx::PxTransform &, physx::PxOverlapHit &, const physx::PxQueryFilterData &, physx::PxQueryFilterCallback *) = &physx::PxSceneQueryExt::overlapAny;
void __PxRepXObject__ctor(void* _this, const char * _0, const void * _1, const unsigned long long _2) { new (_this) physx::PxRepXObject(_0, _1, _2); }
bool (physx::PxRepXObject::* unused521)() const = &physx::PxRepXObject::isValid;
void __PxRepXInstantiationArgs__ctor(void* _this, physx::PxPhysics & _0, physx::PxCooking * _1, physx::PxStringTable * _2) { new (_this) physx::PxRepXInstantiationArgs(_0, _1, _2); }
physx::PxRepXObject (*unused522)(const physx::PxBase *, const unsigned long long) = &PxCreateRepXObject;
void __PxVehicleChassisData__ctor(void* _this) { new (_this) physx::PxVehicleChassisData(); }
void __PxVehicleEngineData__ctor(void* _this) { new (_this) physx::PxVehicleEngineData(); }
float (physx::PxVehicleEngineData::* unused523)() const = &physx::PxVehicleEngineData::getRecipMOI;
float (physx::PxVehicleEngineData::* unused524)() const = &physx::PxVehicleEngineData::getRecipMaxOmega;
void __PxVehicleEngineData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleEngineData(_0); }
void __PxVehicleGearsData__ctor(void* _this) { new (_this) physx::PxVehicleGearsData(); }
void __PxVehicleGearsData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleGearsData(_0); }
float (physx::PxVehicleGearsData::* unused525)(physx::PxVehicleGearsData::Enum) const = &physx::PxVehicleGearsData::getGearRatio;
void (physx::PxVehicleGearsData::* unused526)(physx::PxVehicleGearsData::Enum, float) = &physx::PxVehicleGearsData::setGearRatio;
void __PxVehicleAutoBoxData__ctor(void* _this) { new (_this) physx::PxVehicleAutoBoxData(); }
void (physx::PxVehicleAutoBoxData::* unused527)(const float) = &physx::PxVehicleAutoBoxData::setLatency;
float (physx::PxVehicleAutoBoxData::* unused528)() const = &physx::PxVehicleAutoBoxData::getLatency;
void __PxVehicleAutoBoxData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleAutoBoxData(_0); }
float (physx::PxVehicleAutoBoxData::* unused529)(physx::PxVehicleGearsData::Enum) const = &physx::PxVehicleAutoBoxData::getUpRatios;
void (physx::PxVehicleAutoBoxData::* unused530)(physx::PxVehicleGearsData::Enum, float) = &physx::PxVehicleAutoBoxData::setUpRatios;
float (physx::PxVehicleAutoBoxData::* unused531)(physx::PxVehicleGearsData::Enum) const = &physx::PxVehicleAutoBoxData::getDownRatios;
void (physx::PxVehicleAutoBoxData::* unused532)(physx::PxVehicleGearsData::Enum, float) = &physx::PxVehicleAutoBoxData::setDownRatios;
void __PxVehicleDifferential4WData__ctor(void* _this) { new (_this) physx::PxVehicleDifferential4WData(); }
void __PxVehicleDifferential4WData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleDifferential4WData(_0); }
void __PxVehicleDifferentialNWData__ctor(void* _this) { new (_this) physx::PxVehicleDifferentialNWData(); }
void (physx::PxVehicleDifferentialNWData::* unused533)(const unsigned int, const bool) = &physx::PxVehicleDifferentialNWData::setDrivenWheel;
bool (physx::PxVehicleDifferentialNWData::* unused534)(const unsigned int) const = &physx::PxVehicleDifferentialNWData::getIsDrivenWheel;
void __PxVehicleDifferentialNWData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleDifferentialNWData(_0); }
unsigned int (physx::PxVehicleDifferentialNWData::* unused535)() const = &physx::PxVehicleDifferentialNWData::getDrivenWheelStatus;
void (physx::PxVehicleDifferentialNWData::* unused536)(unsigned int) = &physx::PxVehicleDifferentialNWData::setDrivenWheelStatus;
void __PxVehicleAckermannGeometryData__ctor(void* _this) { new (_this) physx::PxVehicleAckermannGeometryData(); }
void __PxVehicleAckermannGeometryData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleAckermannGeometryData(_0); }
void __PxVehicleClutchData__ctor(void* _this) { new (_this) physx::PxVehicleClutchData(); }
void __PxVehicleClutchData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleClutchData(_0); }
void __PxVehicleTireLoadFilterData__ctor(void* _this) { new (_this) physx::PxVehicleTireLoadFilterData(); }
float (physx::PxVehicleTireLoadFilterData::* unused537)() const = &physx::PxVehicleTireLoadFilterData::getDenominator;
void __PxVehicleTireLoadFilterData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleTireLoadFilterData(_0); }
void __PxVehicleWheelData__ctor(void* _this) { new (_this) physx::PxVehicleWheelData(); }
float (physx::PxVehicleWheelData::* unused538)() const = &physx::PxVehicleWheelData::getRecipRadius;
float (physx::PxVehicleWheelData::* unused539)() const = &physx::PxVehicleWheelData::getRecipMOI;
void __PxVehicleSuspensionData__ctor(void* _this) { new (_this) physx::PxVehicleSuspensionData(); }
float (physx::PxVehicleSuspensionData::* unused540)() const = &physx::PxVehicleSuspensionData::getRecipMaxCompression;
float (physx::PxVehicleSuspensionData::* unused541)() const = &physx::PxVehicleSuspensionData::getRecipMaxDroop;
void (physx::PxVehicleSuspensionData::* unused542)(const float) = &physx::PxVehicleSuspensionData::setMassAndPreserveNaturalFrequency;
void __PxVehicleAntiRollBarData__ctor(void* _this) { new (_this) physx::PxVehicleAntiRollBarData(); }
void __PxVehicleTireData__ctor(void* _this) { new (_this) physx::PxVehicleTireData(); }
float (physx::PxVehicleTireData::* unused543)() const = &physx::PxVehicleTireData::getRecipLongitudinalStiffnessPerUnitGravity;
float (physx::PxVehicleTireData::* unused544)() const = &physx::PxVehicleTireData::getFrictionVsSlipGraphRecipx1Minusx0;
float (physx::PxVehicleTireData::* unused545)() const = &physx::PxVehicleTireData::getFrictionVsSlipGraphRecipx2Minusx1;
physx::PxVehicleWheelsSimData * (*unused546)(const unsigned int) = &physx::PxVehicleWheelsSimData::allocate;
void (physx::PxVehicleWheelsSimData::* unused547)(const float) = &physx::PxVehicleWheelsSimData::setChassisMass;
void (physx::PxVehicleWheelsSimData::* unused548)() = &physx::PxVehicleWheelsSimData::free;
physx::PxVehicleWheelsSimData & (physx::PxVehicleWheelsSimData::* unused549)(const physx::PxVehicleWheelsSimData &) = &physx::PxVehicleWheelsSimData::operator=;
void (physx::PxVehicleWheelsSimData::* unused550)(const physx::PxVehicleWheelsSimData &, const unsigned int, const unsigned int) = &physx::PxVehicleWheelsSimData::copy;
unsigned int (physx::PxVehicleWheelsSimData::* unused551)() const = &physx::PxVehicleWheelsSimData::getNbWheels;
const physx::PxVehicleSuspensionData & (physx::PxVehicleWheelsSimData::* unused552)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getSuspensionData;
const physx::PxVehicleWheelData & (physx::PxVehicleWheelsSimData::* unused553)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getWheelData;
const physx::PxVehicleTireData & (physx::PxVehicleWheelsSimData::* unused554)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getTireData;
const physx::PxVec3 & (physx::PxVehicleWheelsSimData::* unused555)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getSuspTravelDirection;
const physx::PxVec3 & (physx::PxVehicleWheelsSimData::* unused556)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getSuspForceAppPointOffset;
const physx::PxVec3 & (physx::PxVehicleWheelsSimData::* unused557)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getTireForceAppPointOffset;
const physx::PxVec3 & (physx::PxVehicleWheelsSimData::* unused558)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getWheelCentreOffset;
int (physx::PxVehicleWheelsSimData::* unused559)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getWheelShapeMapping;
const physx::PxFilterData & (physx::PxVehicleWheelsSimData::* unused560)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getSceneQueryFilterData;
unsigned int (physx::PxVehicleWheelsSimData::* unused561)() const = &physx::PxVehicleWheelsSimData::getNbAntiRollBars;
const physx::PxVehicleAntiRollBarData & (physx::PxVehicleWheelsSimData::* unused562)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getAntiRollBarData;
const physx::PxVehicleTireLoadFilterData & (physx::PxVehicleWheelsSimData::* unused563)() const = &physx::PxVehicleWheelsSimData::getTireLoadFilterData;
void (physx::PxVehicleWheelsSimData::* unused564)(const unsigned int, const physx::PxVehicleSuspensionData &) = &physx::PxVehicleWheelsSimData::setSuspensionData;
void (physx::PxVehicleWheelsSimData::* unused565)(const unsigned int, const physx::PxVehicleWheelData &) = &physx::PxVehicleWheelsSimData::setWheelData;
void (physx::PxVehicleWheelsSimData::* unused566)(const unsigned int, const physx::PxVehicleTireData &) = &physx::PxVehicleWheelsSimData::setTireData;
void (physx::PxVehicleWheelsSimData::* unused567)(const unsigned int, const physx::PxVec3 &) = &physx::PxVehicleWheelsSimData::setSuspTravelDirection;
void (physx::PxVehicleWheelsSimData::* unused568)(const unsigned int, const physx::PxVec3 &) = &physx::PxVehicleWheelsSimData::setSuspForceAppPointOffset;
void (physx::PxVehicleWheelsSimData::* unused569)(const unsigned int, const physx::PxVec3 &) = &physx::PxVehicleWheelsSimData::setTireForceAppPointOffset;
void (physx::PxVehicleWheelsSimData::* unused570)(const unsigned int, const physx::PxVec3 &) = &physx::PxVehicleWheelsSimData::setWheelCentreOffset;
void (physx::PxVehicleWheelsSimData::* unused571)(const unsigned int, const int) = &physx::PxVehicleWheelsSimData::setWheelShapeMapping;
void (physx::PxVehicleWheelsSimData::* unused572)(const unsigned int, const physx::PxFilterData &) = &physx::PxVehicleWheelsSimData::setSceneQueryFilterData;
void (physx::PxVehicleWheelsSimData::* unused573)(const physx::PxVehicleTireLoadFilterData &) = &physx::PxVehicleWheelsSimData::setTireLoadFilterData;
unsigned int (physx::PxVehicleWheelsSimData::* unused574)(const physx::PxVehicleAntiRollBarData &) = &physx::PxVehicleWheelsSimData::addAntiRollBarData;
void (physx::PxVehicleWheelsSimData::* unused575)(const unsigned int) = &physx::PxVehicleWheelsSimData::disableWheel;
void (physx::PxVehicleWheelsSimData::* unused576)(const unsigned int) = &physx::PxVehicleWheelsSimData::enableWheel;
bool (physx::PxVehicleWheelsSimData::* unused577)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getIsWheelDisabled;
void (physx::PxVehicleWheelsSimData::* unused578)(const float, const unsigned int, const unsigned int) = &physx::PxVehicleWheelsSimData::setSubStepCount;
void (physx::PxVehicleWheelsSimData::* unused579)(const float) = &physx::PxVehicleWheelsSimData::setMinLongSlipDenominator;
void (physx::PxVehicleWheelsSimData::* unused580)(physx::PxFlags<physx::PxVehicleWheelsSimFlag::Enum, unsigned int>) = &physx::PxVehicleWheelsSimData::setFlags;
physx::PxFlags<physx::PxVehicleWheelsSimFlag::Enum, unsigned int> (physx::PxVehicleWheelsSimData::* unused581)() const = &physx::PxVehicleWheelsSimData::getFlags;
void __PxVehicleWheelsSimData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleWheelsSimData(_0); }
void (*unused582)(physx::PxOutputStream &) = &physx::PxVehicleWheelsSimData::getBinaryMetaData;
unsigned int (physx::PxVehicleWheelsSimData::* unused583)() const = &physx::PxVehicleWheelsSimData::getNbWheels4;
unsigned int (physx::PxVehicleWheelsSimData::* unused584)() const = &physx::PxVehicleWheelsSimData::getNbSuspensionData;
unsigned int (physx::PxVehicleWheelsSimData::* unused585)() const = &physx::PxVehicleWheelsSimData::getNbWheelData;
unsigned int (physx::PxVehicleWheelsSimData::* unused586)() const = &physx::PxVehicleWheelsSimData::getNbSuspTravelDirection;
unsigned int (physx::PxVehicleWheelsSimData::* unused587)() const = &physx::PxVehicleWheelsSimData::getNbTireData;
unsigned int (physx::PxVehicleWheelsSimData::* unused588)() const = &physx::PxVehicleWheelsSimData::getNbSuspForceAppPointOffset;
unsigned int (physx::PxVehicleWheelsSimData::* unused589)() const = &physx::PxVehicleWheelsSimData::getNbTireForceAppPointOffset;
unsigned int (physx::PxVehicleWheelsSimData::* unused590)() const = &physx::PxVehicleWheelsSimData::getNbWheelCentreOffset;
unsigned int (physx::PxVehicleWheelsSimData::* unused591)() const = &physx::PxVehicleWheelsSimData::getNbWheelShapeMapping;
unsigned int (physx::PxVehicleWheelsSimData::* unused592)() const = &physx::PxVehicleWheelsSimData::getNbSceneQueryFilterData;
float (physx::PxVehicleWheelsSimData::* unused593)() const = &physx::PxVehicleWheelsSimData::getMinLongSlipDenominator;
void (physx::PxVehicleWheelsSimData::* unused594)(const float) = &physx::PxVehicleWheelsSimData::setThresholdLongSpeed;
float (physx::PxVehicleWheelsSimData::* unused595)() const = &physx::PxVehicleWheelsSimData::getThresholdLongSpeed;
void (physx::PxVehicleWheelsSimData::* unused596)(const unsigned int) = &physx::PxVehicleWheelsSimData::setLowForwardSpeedSubStepCount;
unsigned int (physx::PxVehicleWheelsSimData::* unused597)() const = &physx::PxVehicleWheelsSimData::getLowForwardSpeedSubStepCount;
void (physx::PxVehicleWheelsSimData::* unused598)(const unsigned int) = &physx::PxVehicleWheelsSimData::setHighForwardSpeedSubStepCount;
unsigned int (physx::PxVehicleWheelsSimData::* unused599)() const = &physx::PxVehicleWheelsSimData::getHighForwardSpeedSubStepCount;
void (physx::PxVehicleWheelsSimData::* unused600)(const unsigned int, const bool) = &physx::PxVehicleWheelsSimData::setWheelEnabledState;
bool (physx::PxVehicleWheelsSimData::* unused601)(const unsigned int) const = &physx::PxVehicleWheelsSimData::getWheelEnabledState;
unsigned int (physx::PxVehicleWheelsSimData::* unused602)() const = &physx::PxVehicleWheelsSimData::getNbWheelEnabledState;
unsigned int (physx::PxVehicleWheelsSimData::* unused603)() const = &physx::PxVehicleWheelsSimData::getNbAntiRollBars4;
unsigned int (physx::PxVehicleWheelsSimData::* unused604)() const = &physx::PxVehicleWheelsSimData::getNbAntiRollBarData;
void (physx::PxVehicleWheelsSimData::* unused605)(const unsigned int, const physx::PxVehicleAntiRollBarData &) = &physx::PxVehicleWheelsSimData::setAntiRollBarData;
void __PxVehicleWheelsSimData__ctor(void* _this) { new (_this) physx::PxVehicleWheelsSimData(); }
void __PxVehicleWheelsDynData__ctor(void* _this) { new (_this) physx::PxVehicleWheelsDynData(); }
void (physx::PxVehicleWheelsDynData::* unused606)() = &physx::PxVehicleWheelsDynData::setToRestState;
void (physx::PxVehicleWheelsDynData::* unused607)(void (*)(const void *, float, float, float, float, float, float, float, float, float, float, float, float, float &, float &, float &, float &)) = &physx::PxVehicleWheelsDynData::setTireForceShaderFunction;
void (physx::PxVehicleWheelsDynData::* unused608)(const unsigned int, const void *) = &physx::PxVehicleWheelsDynData::setTireForceShaderData;
const void * (physx::PxVehicleWheelsDynData::* unused609)(const unsigned int) const = &physx::PxVehicleWheelsDynData::getTireForceShaderData;
void (physx::PxVehicleWheelsDynData::* unused610)(const unsigned int, const float) = &physx::PxVehicleWheelsDynData::setWheelRotationSpeed;
float (physx::PxVehicleWheelsDynData::* unused611)(const unsigned int) const = &physx::PxVehicleWheelsDynData::getWheelRotationSpeed;
void (physx::PxVehicleWheelsDynData::* unused612)(const unsigned int, const float) = &physx::PxVehicleWheelsDynData::setWheelRotationAngle;
float (physx::PxVehicleWheelsDynData::* unused613)(const unsigned int) const = &physx::PxVehicleWheelsDynData::getWheelRotationAngle;
void (physx::PxVehicleWheelsDynData::* unused614)(const unsigned int, void *) = &physx::PxVehicleWheelsDynData::setUserData;
void * (physx::PxVehicleWheelsDynData::* unused615)(const unsigned int) const = &physx::PxVehicleWheelsDynData::getUserData;
void (physx::PxVehicleWheelsDynData::* unused616)(const physx::PxVehicleWheelsDynData &, const unsigned int, const unsigned int) = &physx::PxVehicleWheelsDynData::copy;
void (*unused617)(physx::PxOutputStream &) = &physx::PxVehicleWheelsDynData::getBinaryMetaData;
unsigned int (physx::PxVehicleWheelsDynData::* unused618)() const = &physx::PxVehicleWheelsDynData::getNbWheelRotationSpeed;
unsigned int (physx::PxVehicleWheelsDynData::* unused619)() const = &physx::PxVehicleWheelsDynData::getNbWheelRotationAngle;
physx::PxVehicleWheels4DynData * (physx::PxVehicleWheelsDynData::* unused620)() const = &physx::PxVehicleWheelsDynData::getWheel4DynData;
unsigned int (physx::PxVehicleWheels::* unused621)() const = &physx::PxVehicleWheels::getVehicleType;
physx::PxRigidDynamic * (physx::PxVehicleWheels::* unused622)() = &physx::PxVehicleWheels::getRigidDynamicActor;
const physx::PxRigidDynamic * (physx::PxVehicleWheels::* unused623)() const = &physx::PxVehicleWheels::getRigidDynamicActor;
float (physx::PxVehicleWheels::* unused624)() const = &physx::PxVehicleWheels::computeForwardSpeed;
float (physx::PxVehicleWheels::* unused625)() const = &physx::PxVehicleWheels::computeSidewaysSpeed;
void (physx::PxVehicleWheels::* unused626)(physx::PxDeserializationContext &) = &physx::PxVehicleWheels::importExtraData;
void (physx::PxVehicleWheels::* unused627)(physx::PxDeserializationContext &) = &physx::PxVehicleWheels::resolveReferences;
void (*unused628)(physx::PxOutputStream &) = &physx::PxVehicleWheels::getBinaryMetaData;
unsigned int (physx::PxVehicleWheels::* unused629)() const = &physx::PxVehicleWheels::getNbNonDrivenWheels;
void __PxVehicleWheels__ctor(void* _this, unsigned short _0, physx::PxFlags<physx::PxBaseFlag::Enum, unsigned short> _1) { new (_this) physx::PxVehicleWheels(_0, _1); }
void __PxVehicleWheels__ctor(void* _this, physx::PxFlags<physx::PxBaseFlag::Enum, unsigned short> _0) { new (_this) physx::PxVehicleWheels(_0); }
const physx::PxVehicleEngineData & (physx::PxVehicleDriveSimData::* unused630)() const = &physx::PxVehicleDriveSimData::getEngineData;
void (physx::PxVehicleDriveSimData::* unused631)(const physx::PxVehicleEngineData &) = &physx::PxVehicleDriveSimData::setEngineData;
const physx::PxVehicleGearsData & (physx::PxVehicleDriveSimData::* unused632)() const = &physx::PxVehicleDriveSimData::getGearsData;
void (physx::PxVehicleDriveSimData::* unused633)(const physx::PxVehicleGearsData &) = &physx::PxVehicleDriveSimData::setGearsData;
const physx::PxVehicleClutchData & (physx::PxVehicleDriveSimData::* unused634)() const = &physx::PxVehicleDriveSimData::getClutchData;
void (physx::PxVehicleDriveSimData::* unused635)(const physx::PxVehicleClutchData &) = &physx::PxVehicleDriveSimData::setClutchData;
const physx::PxVehicleAutoBoxData & (physx::PxVehicleDriveSimData::* unused636)() const = &physx::PxVehicleDriveSimData::getAutoBoxData;
void (physx::PxVehicleDriveSimData::* unused637)(const physx::PxVehicleAutoBoxData &) = &physx::PxVehicleDriveSimData::setAutoBoxData;
void __PxVehicleDriveSimData__ctor(void* _this) { new (_this) physx::PxVehicleDriveSimData(); }
void __PxVehicleDriveSimData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleDriveSimData(_0); }
void (*unused638)(physx::PxOutputStream &) = &physx::PxVehicleDriveSimData::getBinaryMetaData;
void (physx::PxVehicleDriveDynData::* unused639)() = &physx::PxVehicleDriveDynData::setToRestState;
void (physx::PxVehicleDriveDynData::* unused640)(const unsigned int, const float) = &physx::PxVehicleDriveDynData::setAnalogInput;
float (physx::PxVehicleDriveDynData::* unused641)(const unsigned int) const = &physx::PxVehicleDriveDynData::getAnalogInput;
void (physx::PxVehicleDriveDynData::* unused642)(const bool) = &physx::PxVehicleDriveDynData::setGearUp;
void (physx::PxVehicleDriveDynData::* unused643)(const bool) = &physx::PxVehicleDriveDynData::setGearDown;
bool (physx::PxVehicleDriveDynData::* unused644)() const = &physx::PxVehicleDriveDynData::getGearUp;
bool (physx::PxVehicleDriveDynData::* unused645)() const = &physx::PxVehicleDriveDynData::getGearDown;
void (physx::PxVehicleDriveDynData::* unused646)(const bool) = &physx::PxVehicleDriveDynData::setUseAutoGears;
bool (physx::PxVehicleDriveDynData::* unused647)() const = &physx::PxVehicleDriveDynData::getUseAutoGears;
void (physx::PxVehicleDriveDynData::* unused648)() = &physx::PxVehicleDriveDynData::toggleAutoGears;
void (physx::PxVehicleDriveDynData::* unused649)(unsigned int) = &physx::PxVehicleDriveDynData::setCurrentGear;
unsigned int (physx::PxVehicleDriveDynData::* unused650)() const = &physx::PxVehicleDriveDynData::getCurrentGear;
void (physx::PxVehicleDriveDynData::* unused651)(unsigned int) = &physx::PxVehicleDriveDynData::setTargetGear;
unsigned int (physx::PxVehicleDriveDynData::* unused652)() const = &physx::PxVehicleDriveDynData::getTargetGear;
void (physx::PxVehicleDriveDynData::* unused653)(const unsigned int) = &physx::PxVehicleDriveDynData::startGearChange;
void (physx::PxVehicleDriveDynData::* unused654)(const unsigned int) = &physx::PxVehicleDriveDynData::forceGearChange;
void (physx::PxVehicleDriveDynData::* unused655)(const float) = &physx::PxVehicleDriveDynData::setEngineRotationSpeed;
float (physx::PxVehicleDriveDynData::* unused656)() const = &physx::PxVehicleDriveDynData::getEngineRotationSpeed;
float (physx::PxVehicleDriveDynData::* unused657)() const = &physx::PxVehicleDriveDynData::getGearSwitchTime;
float (physx::PxVehicleDriveDynData::* unused658)() const = &physx::PxVehicleDriveDynData::getAutoBoxSwitchTime;
void __PxVehicleDriveDynData__ctor(void* _this) { new (_this) physx::PxVehicleDriveDynData(); }
void __PxVehicleDriveDynData__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleDriveDynData(_0); }
unsigned int (physx::PxVehicleDriveDynData::* unused659)() const = &physx::PxVehicleDriveDynData::getNbAnalogInput;
void (physx::PxVehicleDriveDynData::* unused660)(const unsigned int) = &physx::PxVehicleDriveDynData::setGearChange;
unsigned int (physx::PxVehicleDriveDynData::* unused661)() const = &physx::PxVehicleDriveDynData::getGearChange;
void (physx::PxVehicleDriveDynData::* unused662)(const float) = &physx::PxVehicleDriveDynData::setGearSwitchTime;
void (physx::PxVehicleDriveDynData::* unused663)(const float) = &physx::PxVehicleDriveDynData::setAutoBoxSwitchTime;
void (*unused664)(physx::PxOutputStream &) = &physx::PxVehicleDrive::getBinaryMetaData;
void __PxVehicleDrive__ctor(void* _this, physx::PxFlags<physx::PxBaseFlag::Enum, unsigned short> _0) { new (_this) physx::PxVehicleDrive(_0); }
void __PxVehicleDriveSimData4W__ctor(void* _this) { new (_this) physx::PxVehicleDriveSimData4W(); }
const physx::PxVehicleDifferential4WData & (physx::PxVehicleDriveSimData4W::* unused665)() const = &physx::PxVehicleDriveSimData4W::getDiffData;
const physx::PxVehicleAckermannGeometryData & (physx::PxVehicleDriveSimData4W::* unused666)() const = &physx::PxVehicleDriveSimData4W::getAckermannGeometryData;
void (physx::PxVehicleDriveSimData4W::* unused667)(const physx::PxVehicleDifferential4WData &) = &physx::PxVehicleDriveSimData4W::setDiffData;
void (physx::PxVehicleDriveSimData4W::* unused668)(const physx::PxVehicleAckermannGeometryData &) = &physx::PxVehicleDriveSimData4W::setAckermannGeometryData;
void __PxVehicleDriveSimData4W__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleDriveSimData4W(_0); }
void (*unused669)(physx::PxOutputStream &) = &physx::PxVehicleDriveSimData4W::getBinaryMetaData;
physx::PxVehicleDrive4W * (*unused670)(const unsigned int) = &physx::PxVehicleDrive4W::allocate;
void (physx::PxVehicleDrive4W::* unused671)() = &physx::PxVehicleDrive4W::free;
void (physx::PxVehicleDrive4W::* unused672)(physx::PxPhysics *, physx::PxRigidDynamic *, const physx::PxVehicleWheelsSimData &, const physx::PxVehicleDriveSimData4W &, const unsigned int) = &physx::PxVehicleDrive4W::setup;
physx::PxVehicleDrive4W * (*unused673)(physx::PxPhysics *, physx::PxRigidDynamic *, const physx::PxVehicleWheelsSimData &, const physx::PxVehicleDriveSimData4W &, const unsigned int) = &physx::PxVehicleDrive4W::create;
void (physx::PxVehicleDrive4W::* unused674)() = &physx::PxVehicleDrive4W::setToRestState;
physx::PxVehicleDrive4W * (*unused675)(unsigned char *&, physx::PxDeserializationContext &) = &physx::PxVehicleDrive4W::createObject;
void (*unused676)(physx::PxOutputStream &) = &physx::PxVehicleDrive4W::getBinaryMetaData;
void __PxVehicleDrive4W__ctor(void* _this, physx::PxFlags<physx::PxBaseFlag::Enum, unsigned short> _0) { new (_this) physx::PxVehicleDrive4W(_0); }
physx::PxVehicleDriveTank * (*unused677)(const unsigned int) = &physx::PxVehicleDriveTank::allocate;
void (physx::PxVehicleDriveTank::* unused678)() = &physx::PxVehicleDriveTank::free;
void (physx::PxVehicleDriveTank::* unused679)(physx::PxPhysics *, physx::PxRigidDynamic *, const physx::PxVehicleWheelsSimData &, const physx::PxVehicleDriveSimData &, const unsigned int) = &physx::PxVehicleDriveTank::setup;
physx::PxVehicleDriveTank * (*unused680)(physx::PxPhysics *, physx::PxRigidDynamic *, const physx::PxVehicleWheelsSimData &, const physx::PxVehicleDriveSimData &, const unsigned int) = &physx::PxVehicleDriveTank::create;
void (physx::PxVehicleDriveTank::* unused681)(const physx::PxVehicleDriveTankControlModel::Enum) = &physx::PxVehicleDriveTank::setDriveModel;
physx::PxVehicleDriveTankControlModel::Enum (physx::PxVehicleDriveTank::* unused682)() const = &physx::PxVehicleDriveTank::getDriveModel;
void (physx::PxVehicleDriveTank::* unused683)() = &physx::PxVehicleDriveTank::setToRestState;
void __PxVehicleDriveTank__ctor(void* _this, physx::PxFlags<physx::PxBaseFlag::Enum, unsigned short> _0) { new (_this) physx::PxVehicleDriveTank(_0); }
physx::PxVehicleDriveTank * (*unused684)(unsigned char *&, physx::PxDeserializationContext &) = &physx::PxVehicleDriveTank::createObject;
void (*unused685)(physx::PxOutputStream &) = &physx::PxVehicleDriveTank::getBinaryMetaData;
physx::PxVehicleDrivableSurfaceToTireFrictionPairs * (*unused686)(const unsigned int, const unsigned int) = &physx::PxVehicleDrivableSurfaceToTireFrictionPairs::allocate;
void (physx::PxVehicleDrivableSurfaceToTireFrictionPairs::* unused687)(const unsigned int, const unsigned int, const physx::PxMaterial **, const physx::PxVehicleDrivableSurfaceType *) = &physx::PxVehicleDrivableSurfaceToTireFrictionPairs::setup;
void (physx::PxVehicleDrivableSurfaceToTireFrictionPairs::* unused688)() = &physx::PxVehicleDrivableSurfaceToTireFrictionPairs::release;
void (physx::PxVehicleDrivableSurfaceToTireFrictionPairs::* unused689)(const unsigned int, const unsigned int, const float) = &physx::PxVehicleDrivableSurfaceToTireFrictionPairs::setTypePairFriction;
float (physx::PxVehicleDrivableSurfaceToTireFrictionPairs::* unused690)(const unsigned int, const unsigned int) const = &physx::PxVehicleDrivableSurfaceToTireFrictionPairs::getTypePairFriction;
unsigned int (physx::PxVehicleDrivableSurfaceToTireFrictionPairs::* unused691)() const = &physx::PxVehicleDrivableSurfaceToTireFrictionPairs::getMaxNbSurfaceTypes;
unsigned int (physx::PxVehicleDrivableSurfaceToTireFrictionPairs::* unused692)() const = &physx::PxVehicleDrivableSurfaceToTireFrictionPairs::getMaxNbTireTypes;
void __PxWheelQueryResult__ctor(void* _this) { new (_this) physx::PxWheelQueryResult(); }
void __PxVehicleWheelConcurrentUpdateData__ctor(void* _this) { new (_this) physx::PxVehicleWheelConcurrentUpdateData(); }
void __PxVehicleConcurrentUpdateData__ctor(void* _this) { new (_this) physx::PxVehicleConcurrentUpdateData(); }
void __PxVehicleDriveSimDataNW__ctor(void* _this) { new (_this) physx::PxVehicleDriveSimDataNW(); }
const physx::PxVehicleDifferentialNWData & (physx::PxVehicleDriveSimDataNW::* unused693)() const = &physx::PxVehicleDriveSimDataNW::getDiffData;
void (physx::PxVehicleDriveSimDataNW::* unused694)(const physx::PxVehicleDifferentialNWData &) = &physx::PxVehicleDriveSimDataNW::setDiffData;
void __PxVehicleDriveSimDataNW__ctor(void* _this, const physx::PxEMPTY _0) { new (_this) physx::PxVehicleDriveSimDataNW(_0); }
void (*unused695)(physx::PxOutputStream &) = &physx::PxVehicleDriveSimDataNW::getBinaryMetaData;
physx::PxVehicleDriveNW * (*unused696)(const unsigned int) = &physx::PxVehicleDriveNW::allocate;
void (physx::PxVehicleDriveNW::* unused697)() = &physx::PxVehicleDriveNW::free;
void (physx::PxVehicleDriveNW::* unused698)(physx::PxPhysics *, physx::PxRigidDynamic *, const physx::PxVehicleWheelsSimData &, const physx::PxVehicleDriveSimDataNW &, const unsigned int) = &physx::PxVehicleDriveNW::setup;
physx::PxVehicleDriveNW * (*unused699)(physx::PxPhysics *, physx::PxRigidDynamic *, const physx::PxVehicleWheelsSimData &, const physx::PxVehicleDriveSimDataNW &, const unsigned int) = &physx::PxVehicleDriveNW::create;
void (physx::PxVehicleDriveNW::* unused700)() = &physx::PxVehicleDriveNW::setToRestState;
void __PxVehicleDriveNW__ctor(void* _this, physx::PxFlags<physx::PxBaseFlag::Enum, unsigned short> _0) { new (_this) physx::PxVehicleDriveNW(_0); }
void __PxVehicleDriveNW__ctor(void* _this) { new (_this) physx::PxVehicleDriveNW(); }
physx::PxVehicleDriveNW * (*unused701)(unsigned char *&, physx::PxDeserializationContext &) = &physx::PxVehicleDriveNW::createObject;
void (*unused702)(physx::PxOutputStream &) = &physx::PxVehicleDriveNW::getBinaryMetaData;
void __PxVehicleDrive4WRawInputData__ctor(void* _this) { new (_this) physx::PxVehicleDrive4WRawInputData(); }
void (physx::PxVehicleDrive4WRawInputData::* unused703)(const bool) = &physx::PxVehicleDrive4WRawInputData::setDigitalAccel;
void (physx::PxVehicleDrive4WRawInputData::* unused704)(const bool) = &physx::PxVehicleDrive4WRawInputData::setDigitalBrake;
void (physx::PxVehicleDrive4WRawInputData::* unused705)(const bool) = &physx::PxVehicleDrive4WRawInputData::setDigitalHandbrake;
void (physx::PxVehicleDrive4WRawInputData::* unused706)(const bool) = &physx::PxVehicleDrive4WRawInputData::setDigitalSteerLeft;
void (physx::PxVehicleDrive4WRawInputData::* unused707)(const bool) = &physx::PxVehicleDrive4WRawInputData::setDigitalSteerRight;
bool (physx::PxVehicleDrive4WRawInputData::* unused708)() const = &physx::PxVehicleDrive4WRawInputData::getDigitalAccel;
bool (physx::PxVehicleDrive4WRawInputData::* unused709)() const = &physx::PxVehicleDrive4WRawInputData::getDigitalBrake;
bool (physx::PxVehicleDrive4WRawInputData::* unused710)() const = &physx::PxVehicleDrive4WRawInputData::getDigitalHandbrake;
bool (physx::PxVehicleDrive4WRawInputData::* unused711)() const = &physx::PxVehicleDrive4WRawInputData::getDigitalSteerLeft;
bool (physx::PxVehicleDrive4WRawInputData::* unused712)() const = &physx::PxVehicleDrive4WRawInputData::getDigitalSteerRight;
void (physx::PxVehicleDrive4WRawInputData::* unused713)(const float) = &physx::PxVehicleDrive4WRawInputData::setAnalogAccel;
void (physx::PxVehicleDrive4WRawInputData::* unused714)(const float) = &physx::PxVehicleDrive4WRawInputData::setAnalogBrake;
void (physx::PxVehicleDrive4WRawInputData::* unused715)(const float) = &physx::PxVehicleDrive4WRawInputData::setAnalogHandbrake;
void (physx::PxVehicleDrive4WRawInputData::* unused716)(const float) = &physx::PxVehicleDrive4WRawInputData::setAnalogSteer;
float (physx::PxVehicleDrive4WRawInputData::* unused717)() const = &physx::PxVehicleDrive4WRawInputData::getAnalogAccel;
float (physx::PxVehicleDrive4WRawInputData::* unused718)() const = &physx::PxVehicleDrive4WRawInputData::getAnalogBrake;
float (physx::PxVehicleDrive4WRawInputData::* unused719)() const = &physx::PxVehicleDrive4WRawInputData::getAnalogHandbrake;
float (physx::PxVehicleDrive4WRawInputData::* unused720)() const = &physx::PxVehicleDrive4WRawInputData::getAnalogSteer;
void (physx::PxVehicleDrive4WRawInputData::* unused721)(const bool) = &physx::PxVehicleDrive4WRawInputData::setGearUp;
void (physx::PxVehicleDrive4WRawInputData::* unused722)(const bool) = &physx::PxVehicleDrive4WRawInputData::setGearDown;
bool (physx::PxVehicleDrive4WRawInputData::* unused723)() const = &physx::PxVehicleDrive4WRawInputData::getGearUp;
bool (physx::PxVehicleDrive4WRawInputData::* unused724)() const = &physx::PxVehicleDrive4WRawInputData::getGearDown;
void __PxVehicleDriveNWRawInputData__ctor(void* _this) { new (_this) physx::PxVehicleDriveNWRawInputData(); }
void __PxVehicleDriveTankRawInputData__ctor(void* _this, const physx::PxVehicleDriveTankControlModel::Enum _0) { new (_this) physx::PxVehicleDriveTankRawInputData(_0); }
physx::PxVehicleDriveTankControlModel::Enum (physx::PxVehicleDriveTankRawInputData::* unused725)() const = &physx::PxVehicleDriveTankRawInputData::getDriveModel;
void (physx::PxVehicleDriveTankRawInputData::* unused726)(const bool) = &physx::PxVehicleDriveTankRawInputData::setDigitalAccel;
void (physx::PxVehicleDriveTankRawInputData::* unused727)(const bool) = &physx::PxVehicleDriveTankRawInputData::setDigitalLeftThrust;
void (physx::PxVehicleDriveTankRawInputData::* unused728)(const bool) = &physx::PxVehicleDriveTankRawInputData::setDigitalRightThrust;
void (physx::PxVehicleDriveTankRawInputData::* unused729)(const bool) = &physx::PxVehicleDriveTankRawInputData::setDigitalLeftBrake;
void (physx::PxVehicleDriveTankRawInputData::* unused730)(const bool) = &physx::PxVehicleDriveTankRawInputData::setDigitalRightBrake;
bool (physx::PxVehicleDriveTankRawInputData::* unused731)() const = &physx::PxVehicleDriveTankRawInputData::getDigitalAccel;
bool (physx::PxVehicleDriveTankRawInputData::* unused732)() const = &physx::PxVehicleDriveTankRawInputData::getDigitalLeftThrust;
bool (physx::PxVehicleDriveTankRawInputData::* unused733)() const = &physx::PxVehicleDriveTankRawInputData::getDigitalRightThrust;
bool (physx::PxVehicleDriveTankRawInputData::* unused734)() const = &physx::PxVehicleDriveTankRawInputData::getDigitalLeftBrake;
bool (physx::PxVehicleDriveTankRawInputData::* unused735)() const = &physx::PxVehicleDriveTankRawInputData::getDigitalRightBrake;
void (physx::PxVehicleDriveTankRawInputData::* unused736)(const float) = &physx::PxVehicleDriveTankRawInputData::setAnalogAccel;
void (physx::PxVehicleDriveTankRawInputData::* unused737)(const float) = &physx::PxVehicleDriveTankRawInputData::setAnalogLeftThrust;
void (physx::PxVehicleDriveTankRawInputData::* unused738)(const float) = &physx::PxVehicleDriveTankRawInputData::setAnalogRightThrust;
void (physx::PxVehicleDriveTankRawInputData::* unused739)(const float) = &physx::PxVehicleDriveTankRawInputData::setAnalogLeftBrake;
void (physx::PxVehicleDriveTankRawInputData::* unused740)(const float) = &physx::PxVehicleDriveTankRawInputData::setAnalogRightBrake;
float (physx::PxVehicleDriveTankRawInputData::* unused741)() const = &physx::PxVehicleDriveTankRawInputData::getAnalogAccel;
float (physx::PxVehicleDriveTankRawInputData::* unused742)() const = &physx::PxVehicleDriveTankRawInputData::getAnalogLeftThrust;
float (physx::PxVehicleDriveTankRawInputData::* unused743)() const = &physx::PxVehicleDriveTankRawInputData::getAnalogRightThrust;
float (physx::PxVehicleDriveTankRawInputData::* unused744)() const = &physx::PxVehicleDriveTankRawInputData::getAnalogLeftBrake;
float (physx::PxVehicleDriveTankRawInputData::* unused745)() const = &physx::PxVehicleDriveTankRawInputData::getAnalogRightBrake;
void (physx::PxVehicleDriveTankRawInputData::* unused746)(const bool) = &physx::PxVehicleDriveTankRawInputData::setGearUp;
void (physx::PxVehicleDriveTankRawInputData::* unused747)(const bool) = &physx::PxVehicleDriveTankRawInputData::setGearDown;
bool (physx::PxVehicleDriveTankRawInputData::* unused748)() const = &physx::PxVehicleDriveTankRawInputData::getGearUp;
bool (physx::PxVehicleDriveTankRawInputData::* unused749)() const = &physx::PxVehicleDriveTankRawInputData::getGearDown;
void __PxVehicleCopyDynamicsMap__ctor(void* _this) { new (_this) physx::PxVehicleCopyDynamicsMap(); }
void __PxVehicleGraphChannelDesc__ctor(void* _this) { new (_this) physx::PxVehicleGraphChannelDesc(); }
void (physx::PxVehicleGraph::* unused750)(const physx::PxVehicleGraphDesc &, const physx::PxVehicleGraphType::Enum) = &physx::PxVehicleGraph::setup;
void (physx::PxVehicleGraph::* unused751)() = &physx::PxVehicleGraph::clearRecordedChannelData;
const physx::PxVec3 & (physx::PxVehicleGraph::* unused752)() const = &physx::PxVehicleGraph::getBackgroundColor;
float (physx::PxVehicleGraph::* unused753)() const = &physx::PxVehicleGraph::getBackgroundAlpha;
void (physx::PxVehicleGraph::* unused754)(float &, float &, float &, float &) const = &physx::PxVehicleGraph::getBackgroundCoords;
void (physx::PxVehicleGraph::* unused755)(const unsigned int, float *, physx::PxVec3 *, char *) const = &physx::PxVehicleGraph::computeGraphChannel;
float (physx::PxVehicleGraph::* unused756)(const unsigned int) const = &physx::PxVehicleGraph::getLatestValue;
physx::PxVehicleTelemetryData * (*unused757)(const unsigned int) = &physx::PxVehicleTelemetryData::allocate;
void (physx::PxVehicleTelemetryData::* unused758)() = &physx::PxVehicleTelemetryData::free;
void (physx::PxVehicleTelemetryData::* unused759)(const float, const float, const float, const float, const float *const, const float *const, const physx::PxVec3 &, const physx::PxVec3 &, const physx::PxVec3 &) = &physx::PxVehicleTelemetryData::setup;
void (physx::PxVehicleTelemetryData::* unused760)() = &physx::PxVehicleTelemetryData::clear;
const physx::PxVehicleGraph & (physx::PxVehicleTelemetryData::* unused761)() const = &physx::PxVehicleTelemetryData::getEngineGraph;
unsigned int (physx::PxVehicleTelemetryData::* unused762)() const = &physx::PxVehicleTelemetryData::getNbWheelGraphs;
const physx::PxVehicleGraph & (physx::PxVehicleTelemetryData::* unused763)(const unsigned int) const = &physx::PxVehicleTelemetryData::getWheelGraph;
const physx::PxVec3 * (physx::PxVehicleTelemetryData::* unused764)() const = &physx::PxVehicleTelemetryData::getTireforceAppPoints;
const physx::PxVec3 * (physx::PxVehicleTelemetryData::* unused765)() const = &physx::PxVehicleTelemetryData::getSuspforceAppPoints;
physx::PxVehicleNoDrive * (*unused766)(const unsigned int) = &physx::PxVehicleNoDrive::allocate;
void (physx::PxVehicleNoDrive::* unused767)() = &physx::PxVehicleNoDrive::free;
void (physx::PxVehicleNoDrive::* unused768)(physx::PxPhysics *, physx::PxRigidDynamic *, const physx::PxVehicleWheelsSimData &) = &physx::PxVehicleNoDrive::setup;
physx::PxVehicleNoDrive * (*unused769)(physx::PxPhysics *, physx::PxRigidDynamic *, const physx::PxVehicleWheelsSimData &) = &physx::PxVehicleNoDrive::create;
void (physx::PxVehicleNoDrive::* unused770)() = &physx::PxVehicleNoDrive::setToRestState;
void (physx::PxVehicleNoDrive::* unused771)(const unsigned int, const float) = &physx::PxVehicleNoDrive::setBrakeTorque;
void (physx::PxVehicleNoDrive::* unused772)(const unsigned int, const float) = &physx::PxVehicleNoDrive::setDriveTorque;
void (physx::PxVehicleNoDrive::* unused773)(const unsigned int, const float) = &physx::PxVehicleNoDrive::setSteerAngle;
float (physx::PxVehicleNoDrive::* unused774)(const unsigned int) const = &physx::PxVehicleNoDrive::getBrakeTorque;
float (physx::PxVehicleNoDrive::* unused775)(const unsigned int) const = &physx::PxVehicleNoDrive::getDriveTorque;
float (physx::PxVehicleNoDrive::* unused776)(const unsigned int) const = &physx::PxVehicleNoDrive::getSteerAngle;
void __PxVehicleNoDrive__ctor(void* _this, physx::PxFlags<physx::PxBaseFlag::Enum, unsigned short> _0) { new (_this) physx::PxVehicleNoDrive(_0); }
void (physx::PxVehicleNoDrive::* unused777)(physx::PxDeserializationContext &) = &physx::PxVehicleNoDrive::importExtraData;
physx::PxVehicleNoDrive * (*unused778)(unsigned char *&, physx::PxDeserializationContext &) = &physx::PxVehicleNoDrive::createObject;
void (*unused779)(physx::PxOutputStream &) = &physx::PxVehicleNoDrive::getBinaryMetaData;
unsigned int (physx::PxVehicleNoDrive::* unused780)() const = &physx::PxVehicleNoDrive::getNbSteerAngle;
unsigned int (physx::PxVehicleNoDrive::* unused781)() const = &physx::PxVehicleNoDrive::getNbDriveTorque;
unsigned int (physx::PxVehicleNoDrive::* unused782)() const = &physx::PxVehicleNoDrive::getNbBrakeTorque;
void __PxProfileScoped__ctor(void* _this, physx::PxProfilerCallback * _0, const char * _1, bool _2, unsigned long long _3) { new (_this) physx::PxProfileScoped(_0, _1, _2, _3); }
physx::PxPvd * (*unused783)(physx::PxFoundation &) = &physx::PxCreatePvd;
physx::PxPvdTransport * (*unused784)(const char *, int, unsigned int) = &physx::PxDefaultPvdSocketTransportCreate;
physx::PxPvdTransport * (*unused785)(const char *) = &physx::PxDefaultPvdFileTransportCreate;
void (*unused786)(physx::PxCollection &, bool) = &physx::PxCollectionExt::releaseObjects;
void (*unused787)(physx::PxCollection &, unsigned short, physx::PxCollection *) = &physx::PxCollectionExt::remove;
physx::PxCollection * (*unused788)(physx::PxPhysics &) = &physx::PxCollectionExt::createCollection;
physx::PxCollection * (*unused789)(physx::PxScene &) = &physx::PxCollectionExt::createCollection;
void __RaycastCCDManager__ctor(void* _this, physx::PxScene * _0) { new (_this) physx::RaycastCCDManager(_0); }
bool (physx::RaycastCCDManager::* unused790)(physx::PxRigidDynamic *, physx::PxShape *) = &physx::RaycastCCDManager::registerRaycastCCDObject;
void (physx::RaycastCCDManager::* unused791)(bool) = &physx::RaycastCCDManager::doRaycastCCD;
bool (physx::general_PxIOStream2::PxFileBuf::* unused792)() const = &physx::general_PxIOStream2::PxFileBuf::isOpen;
void (physx::general_PxIOStream2::PxFileBuf::* unused793)(physx::general_PxIOStream2::PxFileBuf::EndianMode) = &physx::general_PxIOStream2::PxFileBuf::setEndianMode;
physx::general_PxIOStream2::PxFileBuf::EndianMode (physx::general_PxIOStream2::PxFileBuf::* unused794)() const = &physx::general_PxIOStream2::PxFileBuf::getEndianMode;
void (physx::general_PxIOStream2::PxFileBuf::* unused795)() = &physx::general_PxIOStream2::PxFileBuf::release;
bool (*unused796)() = &physx::general_PxIOStream2::PxFileBuf::isBigEndian;
void (physx::general_PxIOStream2::PxFileBuf::* unused797)(void *) const = &physx::general_PxIOStream2::PxFileBuf::swap2Bytes;
void (physx::general_PxIOStream2::PxFileBuf::* unused798)(void *) const = &physx::general_PxIOStream2::PxFileBuf::swap4Bytes;
void (physx::general_PxIOStream2::PxFileBuf::* unused799)(void *) const = &physx::general_PxIOStream2::PxFileBuf::swap8Bytes;
void (physx::general_PxIOStream2::PxFileBuf::* unused800)(unsigned int) = &physx::general_PxIOStream2::PxFileBuf::storeDword;
void (physx::general_PxIOStream2::PxFileBuf::* unused801)(float) = &physx::general_PxIOStream2::PxFileBuf::storeFloat;
void (physx::general_PxIOStream2::PxFileBuf::* unused802)(double) = &physx::general_PxIOStream2::PxFileBuf::storeDouble;
void (physx::general_PxIOStream2::PxFileBuf::* unused803)(unsigned char) = &physx::general_PxIOStream2::PxFileBuf::storeByte;
void (physx::general_PxIOStream2::PxFileBuf::* unused804)(unsigned short) = &physx::general_PxIOStream2::PxFileBuf::storeWord;
unsigned char (physx::general_PxIOStream2::PxFileBuf::* unused805)() = &physx::general_PxIOStream2::PxFileBuf::readByte;
unsigned short (physx::general_PxIOStream2::PxFileBuf::* unused806)() = &physx::general_PxIOStream2::PxFileBuf::readWord;
unsigned int (physx::general_PxIOStream2::PxFileBuf::* unused807)() = &physx::general_PxIOStream2::PxFileBuf::readDword;
float (physx::general_PxIOStream2::PxFileBuf::* unused808)() = &physx::general_PxIOStream2::PxFileBuf::readFloat;
double (physx::general_PxIOStream2::PxFileBuf::* unused809)() = &physx::general_PxIOStream2::PxFileBuf::readDouble;
float (*unused810)(float) = &physx::intrinsics::abs;
float (*unused811)(float, float, float) = &physx::intrinsics::fsel;
float (*unused812)(float) = &physx::intrinsics::sign;
float (*unused813)(float) = &physx::intrinsics::recip;
float (*unused814)(float) = &physx::intrinsics::recipFast;
float (*unused815)(float) = &physx::intrinsics::sqrt;
float (*unused816)(float) = &physx::intrinsics::recipSqrt;
float (*unused817)(float) = &physx::intrinsics::recipSqrtFast;
float (*unused818)(float) = &physx::intrinsics::sin;
float (*unused819)(float) = &physx::intrinsics::cos;
float (*unused820)(float, float) = &physx::intrinsics::selectMin;
float (*unused821)(float, float) = &physx::intrinsics::selectMax;
bool (*unused822)(float) = &physx::intrinsics::isFinite;
bool (*unused823)(double) = &physx::intrinsics::isFinite;
void * (*unused824)(void *, unsigned int) = &physx::intrinsics::memZero;
void * (*unused825)(void *, int, unsigned int) = &physx::intrinsics::memSet;
void * (*unused826)(void *, const void *, unsigned int) = &physx::intrinsics::memCopy;
void * (*unused827)(void *, const void *, unsigned int) = &physx::intrinsics::memMove;
void (*unused828)(void *, unsigned int) = &physx::intrinsics::memZero128;
float (*unused829)(float) = &physx::PxAbs;
bool (*unused830)(float, float, float) = &physx::PxEquals;
double (*unused831)(double) = &physx::PxAbs;
int (*unused832)(int) = &physx::PxAbs;
float (*unused833)(float) = &physx::PxSqrt;
double (*unused834)(double) = &physx::PxSqrt;
float (*unused835)(float) = &physx::PxRecipSqrt;
double (*unused836)(double) = &physx::PxRecipSqrt;
float (*unused837)(float) = &physx::PxSin;
double (*unused838)(double) = &physx::PxSin;
float (*unused839)(float) = &physx::PxCos;
double (*unused840)(double) = &physx::PxCos;
float (*unused841)(float) = &physx::PxTan;
double (*unused842)(double) = &physx::PxTan;
float (*unused843)(float) = &physx::PxAsin;
double (*unused844)(double) = &physx::PxAsin;
float (*unused845)(float) = &physx::PxAcos;
double (*unused846)(double) = &physx::PxAcos;
float (*unused847)(float) = &physx::PxAtan;
double (*unused848)(double) = &physx::PxAtan;
float (*unused849)(float, float) = &physx::PxAtan2;
double (*unused850)(double, double) = &physx::PxAtan2;
bool (*unused851)(float) = &physx::PxIsFinite;
bool (*unused852)(double) = &physx::PxIsFinite;
float (*unused853)(float) = &physx::PxFloor;
float (*unused854)(float) = &physx::PxExp;
float (*unused855)(float) = &physx::PxCeil;
float (*unused856)(float) = &physx::PxSign;
float (*unused857)(float, float) = &physx::PxPow;
float (*unused858)(float) = &physx::PxLog;
physx::PxFlags<physx::PxArticulationAxis::Enum, unsigned char> (*unused859)(physx::PxArticulationAxis::Enum, physx::PxArticulationAxis::Enum) = &physx::operator|;
physx::PxFlags<physx::PxArticulationAxis::Enum, unsigned char> (*unused860)(physx::PxArticulationAxis::Enum, physx::PxArticulationAxis::Enum) = &physx::operator&;
physx::PxFlags<physx::PxArticulationAxis::Enum, unsigned char> (*unused861)(physx::PxArticulationAxis::Enum) = &physx::operator~;
physx::PxAssertHandler & (*unused862)() = &physx::PxGetAssertHandler;
void (*unused863)(physx::PxAssertHandler &) = &physx::PxSetAssertHandler;
void * (*unused864)(void *, unsigned int) = &physx::PxMemZero;
void * (*unused865)(void *, int, unsigned int) = &physx::PxMemSet;
void * (*unused866)(void *, const void *, unsigned int) = &physx::PxMemCopy;
void * (*unused867)(void *, const void *, unsigned int) = &physx::PxMemMove;
physx::PxFilterObjectType::Enum (*unused868)(unsigned int) = &physx::PxGetFilterObjectType;
bool (*unused869)(unsigned int) = &physx::PxFilterObjectIsKinematic;
bool (*unused870)(unsigned int) = &physx::PxFilterObjectIsTrigger;
void (*unused871)(const physx::immediate::PxRigidBodyData *, physx::PxSolverBodyData *, const unsigned int, const physx::PxVec3 &, const float) = &physx::immediate::PxConstructSolverBodies;
void (*unused872)(const physx::PxTransform &, physx::PxSolverBodyData &) = &physx::immediate::PxConstructStaticSolverBody;
unsigned int (*unused873)(const physx::PxSolverConstraintDesc *, const unsigned int, physx::PxSolverBody *, const unsigned int, physx::PxConstraintBatchHeader *, physx::PxSolverConstraintDesc *, physx::Dy::ArticulationV **, const unsigned int) = &physx::immediate::PxBatchConstraints;
bool (*unused874)(physx::PxConstraintBatchHeader *, const unsigned int, physx::PxSolverContactDesc *, physx::PxConstraintAllocator &, const float, const float, const float, const float) = &physx::immediate::PxCreateContactConstraints;
bool (*unused875)(physx::PxConstraintBatchHeader *, const unsigned int, physx::PxSolverConstraintPrepDesc *, physx::PxConstraintAllocator &, const float, const float) = &physx::immediate::PxCreateJointConstraints;
bool (*unused876)(physx::PxConstraintBatchHeader *, const unsigned int, physx::PxConstraint **, physx::PxSolverConstraintPrepDesc *, physx::PxConstraintAllocator &, const float, const float) = &physx::immediate::PxCreateJointConstraintsWithShaders;
bool (*unused877)(physx::PxConstraintBatchHeader *, const unsigned int, physx::immediate::PxImmediateConstraint *, physx::PxSolverConstraintPrepDesc *, physx::PxConstraintAllocator &, const float, const float) = &physx::immediate::PxCreateJointConstraintsWithImmediateShaders;
void (*unused878)(const physx::PxConstraintBatchHeader *, const unsigned int, const physx::PxSolverConstraintDesc *, const physx::PxSolverBody *, physx::PxVec3 *, physx::PxVec3 *, const unsigned int, const unsigned int, const unsigned int, const float, const float, const unsigned int, physx::Dy::ArticulationV **) = &physx::immediate::PxSolveConstraints;
void (*unused879)(physx::PxSolverBodyData *, physx::PxSolverBody *, const physx::PxVec3 *, const physx::PxVec3 *, const unsigned int, const float) = &physx::immediate::PxIntegrateSolverBodies;
bool (*unused880)(const physx::PxGeometry *const *, const physx::PxGeometry *const *, const physx::PxTransform *, const physx::PxTransform *, physx::PxCache *, const unsigned int, physx::immediate::PxContactRecorder &, const float, const float, const float, physx::PxCacheAllocator &) = &physx::immediate::PxGenerateContacts;
void (*unused881)() = &physx::immediate::PxRegisterImmediateArticulations;
physx::Dy::ArticulationV * (*unused882)(const physx::immediate::PxFeatherstoneArticulationData &) = &physx::immediate::PxCreateFeatherstoneArticulation;
void (*unused883)(physx::Dy::ArticulationV *) = &physx::immediate::PxReleaseArticulation;
physx::PxArticulationCache * (*unused884)(physx::Dy::ArticulationV *) = &physx::immediate::PxCreateArticulationCache;
void (*unused885)(physx::Dy::ArticulationV *, physx::PxArticulationCache &, physx::PxFlags<physx::PxArticulationCache::Enum, unsigned char>) = &physx::immediate::PxCopyInternalStateToArticulationCache;
void (*unused886)(physx::Dy::ArticulationV *, physx::PxArticulationCache &, physx::PxFlags<physx::PxArticulationCache::Enum, unsigned char>) = &physx::immediate::PxApplyArticulationCache;
void (*unused887)(physx::PxArticulationCache &) = &physx::immediate::PxReleaseArticulationCache;
unsigned long long (*unused888)(physx::Dy::ArticulationV *, const physx::immediate::PxFeatherstoneArticulationLinkData &, bool) = &physx::immediate::PxAddArticulationLink;
physx::Dy::ArticulationV * (*unused889)(const unsigned long long) = &physx::immediate::PxGetLinkArticulation;
unsigned int (*unused890)(const unsigned long long) = &physx::immediate::PxGetLinkIndex;
bool (*unused891)(const unsigned long long, physx::immediate::PxLinkData &) = &physx::immediate::PxGetLinkData;
unsigned int (*unused892)(const physx::Dy::ArticulationV *, physx::immediate::PxLinkData *) = &physx::immediate::PxGetAllLinkData;
bool (*unused893)(const unsigned long long, physx::immediate::PxMutableLinkData &) = &physx::immediate::PxGetMutableLinkData;
bool (*unused894)(unsigned long long, const physx::immediate::PxMutableLinkData &) = &physx::immediate::PxSetMutableLinkData;
bool (*unused895)(const unsigned long long, physx::immediate::PxFeatherstoneArticulationJointData &) = &physx::immediate::PxGetJointData;
bool (*unused896)(unsigned long long, const physx::immediate::PxFeatherstoneArticulationJointData &) = &physx::immediate::PxSetJointData;
void (*unused897)(physx::Dy::ArticulationV *, const physx::PxVec3 &, const float) = &physx::immediate::PxComputeUnconstrainedVelocities;
void (*unused898)(physx::Dy::ArticulationV *, const float) = &physx::immediate::PxUpdateArticulationBodies;
void (*unused899)(physx::Dy::ArticulationV *, const physx::PxVec3 &, const float, const float, const float, const float) = &physx::immediate::PxComputeUnconstrainedVelocitiesTGS;
void (*unused900)(physx::Dy::ArticulationV *, const float) = &physx::immediate::PxUpdateArticulationBodiesTGS;
void (*unused901)(const physx::immediate::PxRigidBodyData *, physx::PxTGSSolverBodyVel *, physx::PxTGSSolverBodyTxInertia *, physx::PxTGSSolverBodyData *, const unsigned int, const physx::PxVec3 &, const float) = &physx::immediate::PxConstructSolverBodiesTGS;
void (*unused902)(const physx::PxTransform &, physx::PxTGSSolverBodyVel &, physx::PxTGSSolverBodyTxInertia &, physx::PxTGSSolverBodyData &) = &physx::immediate::PxConstructStaticSolverBodyTGS;
unsigned int (*unused903)(const physx::PxSolverConstraintDesc *, const unsigned int, physx::PxTGSSolverBodyVel *, const unsigned int, physx::PxConstraintBatchHeader *, physx::PxSolverConstraintDesc *, physx::Dy::ArticulationV **, const unsigned int) = &physx::immediate::PxBatchConstraintsTGS;
bool (*unused904)(physx::PxConstraintBatchHeader *, const unsigned int, physx::PxTGSSolverContactDesc *, physx::PxConstraintAllocator &, const float, const float, const float, const float, const float) = &physx::immediate::PxCreateContactConstraintsTGS;
bool (*unused905)(physx::PxConstraintBatchHeader *, const unsigned int, physx::PxTGSSolverConstraintPrepDesc *, physx::PxConstraintAllocator &, const float, const float, const float, const float, const float) = &physx::immediate::PxCreateJointConstraintsTGS;
bool (*unused906)(physx::PxConstraintBatchHeader *, const unsigned int, physx::PxConstraint **, physx::PxTGSSolverConstraintPrepDesc *, physx::PxConstraintAllocator &, const float, const float, const float, const float, const float) = &physx::immediate::PxCreateJointConstraintsWithShadersTGS;
bool (*unused907)(physx::PxConstraintBatchHeader *, const unsigned int, physx::immediate::PxImmediateConstraint *, physx::PxTGSSolverConstraintPrepDesc *, physx::PxConstraintAllocator &, const float, const float, const float, const float, const float) = &physx::immediate::PxCreateJointConstraintsWithImmediateShadersTGS;
void (*unused908)(const physx::PxConstraintBatchHeader *, const unsigned int, const physx::PxSolverConstraintDesc *, physx::PxTGSSolverBodyVel *, physx::PxTGSSolverBodyTxInertia *, const unsigned int, const unsigned int, const unsigned int, const float, const float, const unsigned int, physx::Dy::ArticulationV **) = &physx::immediate::PxSolveConstraintsTGS;
void (*unused909)(physx::PxTGSSolverBodyVel *, physx::PxTGSSolverBodyTxInertia *, physx::PxTransform *, const unsigned int, const float) = &physx::immediate::PxIntegrateSolverBodiesTGS;
physx::PxQuat (*unused910)(const physx::PxVec3 &, const physx::PxVec3 &) = &physx::PxShortestRotation;
physx::PxVec3 (*unused911)(const physx::PxMat33 &, physx::PxQuat &) = &physx::PxDiagonalize;
void (*unused912)(const PxGpuLoadHook *) = &PxSetPhysXGpuLoadHook;
int (*unused913)(physx::PxErrorCallback &) = &PxGetSuggestedCudaDeviceOrdinal;
physx::PxCudaContextManager * (*unused914)(physx::PxFoundation &, const physx::PxCudaContextManagerDesc &, physx::PxProfilerCallback *) = &PxCreateCudaContextManager;
physx::PxVec3 (*unused915)(const physx::PxExtendedVec3 &) = &physx::toVec3;
physx::PxFlags<physx::PxFilterFlag::Enum, unsigned short> (*unused916)(unsigned int, physx::PxFilterData, unsigned int, physx::PxFilterData, physx::PxFlags<physx::PxPairFlag::Enum, unsigned short> &, const void *, unsigned int) = &physx::PxDefaultSimulationFilterShader;
bool (*unused917)(const unsigned short, const unsigned short) = &physx::PxGetGroupCollisionFlag;
void (*unused918)(const unsigned short, const unsigned short, const bool) = &physx::PxSetGroupCollisionFlag;
unsigned short (*unused919)(const physx::PxActor &) = &physx::PxGetGroup;
void (*unused920)(physx::PxActor &, const unsigned short) = &physx::PxSetGroup;
void (*unused921)(physx::PxFilterOp::Enum &, physx::PxFilterOp::Enum &, physx::PxFilterOp::Enum &) = &physx::PxGetFilterOps;
void (*unused922)(const physx::PxFilterOp::Enum &, const physx::PxFilterOp::Enum &, const physx::PxFilterOp::Enum &) = &physx::PxSetFilterOps;
bool (*unused923)() = &physx::PxGetFilterBool;
void (*unused924)(const bool) = &physx::PxSetFilterBool;
void (*unused925)(physx::PxGroupsMask &, physx::PxGroupsMask &) = &physx::PxGetFilterConstants;
void (*unused926)(const physx::PxGroupsMask &, const physx::PxGroupsMask &) = &physx::PxSetFilterConstants;
physx::PxGroupsMask (*unused927)(const physx::PxActor &) = &physx::PxGetGroupsMask;
void (*unused928)(physx::PxActor &, const physx::PxGroupsMask &) = &physx::PxSetGroupsMask;
bool (*unused929)(physx::PxVec3 &, float &, const physx::PxGeometry &, const physx::PxTransform &, const physx::PxTriangleMeshGeometry &, const physx::PxTransform &, unsigned int, unsigned int *) = &physx::PxComputeTriangleMeshPenetration;
bool (*unused930)(physx::PxVec3 &, float &, const physx::PxGeometry &, const physx::PxTransform &, const physx::PxHeightFieldGeometry &, const physx::PxTransform &, unsigned int, unsigned int *) = &physx::PxComputeHeightFieldPenetration;
bool (*unused931)(unsigned int, unsigned int, const physx::PxVec3 *, const unsigned int *, const unsigned short *, physx::PxVec3 *, bool) = &PxBuildSmoothNormals;
physx::PxRigidDynamic * (*unused932)(physx::PxPhysics &, const physx::PxTransform &, const physx::PxGeometry &, physx::PxMaterial &, float, const physx::PxTransform &) = &physx::PxCreateDynamic;
physx::PxRigidDynamic * (*unused933)(physx::PxPhysics &, const physx::PxTransform &, physx::PxShape &, float) = &physx::PxCreateDynamic;
physx::PxRigidDynamic * (*unused934)(physx::PxPhysics &, const physx::PxTransform &, const physx::PxGeometry &, physx::PxMaterial &, float, const physx::PxTransform &) = &physx::PxCreateKinematic;
physx::PxRigidDynamic * (*unused935)(physx::PxPhysics &, const physx::PxTransform &, physx::PxShape &, float) = &physx::PxCreateKinematic;
physx::PxRigidStatic * (*unused936)(physx::PxPhysics &, const physx::PxTransform &, const physx::PxGeometry &, physx::PxMaterial &, const physx::PxTransform &) = &physx::PxCreateStatic;
physx::PxRigidStatic * (*unused937)(physx::PxPhysics &, const physx::PxTransform &, physx::PxShape &) = &physx::PxCreateStatic;
physx::PxShape * (*unused938)(physx::PxPhysics &, const physx::PxShape &, bool) = &physx::PxCloneShape;
physx::PxRigidStatic * (*unused939)(physx::PxPhysics &, const physx::PxTransform &, const physx::PxRigidActor &) = &physx::PxCloneStatic;
physx::PxRigidDynamic * (*unused940)(physx::PxPhysics &, const physx::PxTransform &, const physx::PxRigidDynamic &) = &physx::PxCloneDynamic;
physx::PxRigidStatic * (*unused941)(physx::PxPhysics &, const physx::PxPlane &, physx::PxMaterial &) = &physx::PxCreatePlane;
void (*unused942)(physx::PxRigidActor &, float, bool) = &physx::PxScaleRigidActor;
bool (*unused943)(physx::PxPhysics &, physx::PxPvd *) = &PxInitExtensions;
void (*unused944)() = &PxCloseExtensions;
unsigned int (*unused945)(const physx::PxConvexMeshGeometry &, const physx::PxTransform &, const physx::PxVec3 &, const physx::PxVec3 &) = &physx::PxFindFaceIndex;
bool (*unused946)(physx::PxPhysics &, physx::PxSerializationRegistry *) = &physx::PxInitVehicleSDK;
void (*unused947)(physx::PxSerializationRegistry *) = &physx::PxCloseVehicleSDK;
void (*unused948)(const physx::PxVec3 &, const physx::PxVec3 &) = &physx::PxVehicleSetBasisVectors;
void (*unused949)(physx::PxVehicleUpdateMode::Enum) = &physx::PxVehicleSetUpdateMode;
void (*unused950)(const float, const float) = &physx::PxVehicleSetSweepHitRejectionAngles;
void (*unused951)(const float) = &physx::PxVehicleSetMaxHitActorAcceleration;
void (*unused952)(physx::PxBatchQuery *, const unsigned int, physx::PxVehicleWheels **, const unsigned int, physx::PxBatchQueryResult<physx::PxRaycastHit> *, const bool *) = &physx::PxVehicleSuspensionRaycasts;
void (*unused953)(physx::PxBatchQuery *, const unsigned int, physx::PxVehicleWheels **, const unsigned int, physx::PxBatchQueryResult<physx::PxSweepHit> *, const unsigned short, const bool *, const float, const float) = &physx::PxVehicleSuspensionSweeps;
unsigned int (*unused954)(const physx::PxVehicleWheels &, const unsigned int, const float, const float, physx::PxContactModifyPair &) = &physx::PxVehicleModifyWheelContacts;
void (*unused955)(const float, const physx::PxVec3 &, const physx::PxVehicleDrivableSurfaceToTireFrictionPairs &, const unsigned int, physx::PxVehicleWheels **, physx::PxVehicleWheelQueryResult *, physx::PxVehicleConcurrentUpdateData *) = &physx::PxVehicleUpdates;
void (*unused956)(const physx::PxVehicleConcurrentUpdateData *, const unsigned int, physx::PxVehicleWheels **) = &physx::PxVehiclePostUpdates;
void (*unused957)(const physx::PxVec3 &, const unsigned int, physx::PxVehicleWheels **) = &physx::PxVehicleShiftOrigin;
void (*unused958)(const float, const physx::PxVec3 &, const physx::PxVehicleDrivableSurfaceToTireFrictionPairs &, physx::PxVehicleWheels *, physx::PxVehicleWheelQueryResult *, physx::PxVehicleTelemetryData &) = &physx::PxVehicleUpdateSingleVehicleAndStoreTelemetryData;
void (*unused959)(const physx::PxVehicleKeySmoothingData &, const physx::PxFixedSizeLookupTable<8> &, const physx::PxVehicleDrive4WRawInputData &, const float, const bool, physx::PxVehicleDrive4W &) = &physx::PxVehicleDrive4WSmoothDigitalRawInputsAndSetAnalogInputs;
void (*unused960)(const physx::PxVehiclePadSmoothingData &, const physx::PxFixedSizeLookupTable<8> &, const physx::PxVehicleDrive4WRawInputData &, const float, const bool, physx::PxVehicleDrive4W &) = &physx::PxVehicleDrive4WSmoothAnalogRawInputsAndSetAnalogInputs;
void (*unused961)(const physx::PxVehicleKeySmoothingData &, const physx::PxFixedSizeLookupTable<8> &, const physx::PxVehicleDriveNWRawInputData &, const float, const bool, physx::PxVehicleDriveNW &) = &physx::PxVehicleDriveNWSmoothDigitalRawInputsAndSetAnalogInputs;
void (*unused962)(const physx::PxVehiclePadSmoothingData &, const physx::PxFixedSizeLookupTable<8> &, const physx::PxVehicleDriveNWRawInputData &, const float, const bool, physx::PxVehicleDriveNW &) = &physx::PxVehicleDriveNWSmoothAnalogRawInputsAndSetAnalogInputs;
void (*unused963)(const physx::PxVehicleKeySmoothingData &, const physx::PxVehicleDriveTankRawInputData &, const float, physx::PxVehicleDriveTank &) = &physx::PxVehicleDriveTankSmoothDigitalRawInputsAndSetAnalogInputs;
void (*unused964)(const physx::PxVehiclePadSmoothingData &, const physx::PxVehicleDriveTankRawInputData &, const float, physx::PxVehicleDriveTank &) = &physx::PxVehicleDriveTankSmoothAnalogRawInputsAndSetAnalogInputs;
void (*unused965)(physx::PxVehicleWheelsSimData &, physx::PxVehicleWheelsDynData &, physx::PxVehicleDriveSimData4W &) = &physx::PxVehicle4WEnable3WTadpoleMode;
void (*unused966)(physx::PxVehicleWheelsSimData &, physx::PxVehicleWheelsDynData &, physx::PxVehicleDriveSimData4W &) = &physx::PxVehicle4WEnable3WDeltaMode;
void (*unused967)(const unsigned int, const physx::PxVec3 *, const physx::PxVec3 &, const float, const unsigned int, float *) = &physx::PxVehicleComputeSprungMasses;
void (*unused968)(const physx::PxTransform &, const physx::PxTransform &, const unsigned int, physx::PxVehicleWheels *) = &physx::PxVehicleUpdateCMassLocalPose;
void (*unused969)(const physx::PxVehicleCopyDynamicsMap &, const physx::PxVehicleWheels &, physx::PxVehicleWheels *) = &physx::PxVehicleCopyDynamicsData;
void (*unused970)(physx::PxOutputStream &) = &PxGetPhysicsBinaryMetaData;
void (*unused971)(physx::PxSerializationRegistry &) = &PxRegisterPhysicsSerializers;
void (*unused972)(physx::PxSerializationRegistry &) = &PxUnregisterPhysicsSerializers;
void (*unused973)(const physx::PxCollection &) = &PxAddCollectionToPhysics;
physx::PxJoint * (*unused974)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxVec3 &, physx::PxRigidActor *, const physx::PxVec3 &, bool) = &physx::PxD6JointCreate_Fixed;
physx::PxJoint * (*unused975)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxVec3 &, physx::PxRigidActor *, const physx::PxVec3 &, float, bool) = &physx::PxD6JointCreate_Distance;
physx::PxJoint * (*unused976)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxVec3 &, physx::PxRigidActor *, const physx::PxVec3 &, const physx::PxVec3 &, float, float, bool) = &physx::PxD6JointCreate_Prismatic;
physx::PxJoint * (*unused977)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxVec3 &, physx::PxRigidActor *, const physx::PxVec3 &, const physx::PxVec3 &, float, float, bool) = &physx::PxD6JointCreate_Revolute;
physx::PxJoint * (*unused978)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxVec3 &, physx::PxRigidActor *, const physx::PxVec3 &, const physx::PxVec3 &, float, float, bool) = &physx::PxD6JointCreate_Spherical;
physx::PxJoint * (*unused979)(float &, float &, physx::PxPhysics &, physx::PxRigidActor *, const physx::PxVec3 &, physx::PxRigidActor *, const physx::PxVec3 &, float, float, float, float, bool) = &physx::PxD6JointCreate_GenericCone;
physx::PxJoint * (*unused980)(physx::PxPhysics &, physx::PxRigidActor *, const physx::PxVec3 &, physx::PxRigidActor *, const physx::PxVec3 &, const physx::PxVec3 &, float, float, float, float) = &physx::PxD6JointCreate_Pyramid;
bool (*unused981)(const physx::PxVehicleWheelQueryResult &) = &physx::PxVehicleIsInAir;
void (*unused982)(const physx::PxDelayLoadHook *) = &physx::PxSetPhysXDelayLoadHook;
void (*unused983)(const physx::PxDelayLoadHook *) = &physx::PxSetPhysXCookingDelayLoadHook;
void (*unused984)(const physx::PxDelayLoadHook *) = &physx::PxSetPhysXCommonDelayLoadHook;
