// This file was automatically generated by Biohazrd and should not be modified by hand!
using System.Runtime.InteropServices;

[StructLayout(LayoutKind.Explicit, Size = 224)]
public unsafe partial struct PxVehicleNoDrive
{
    [FieldOffset(0)] public PxVehicleWheels Base;

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?allocate@PxVehicleNoDrive@physx@@SAPEAV12@I@Z", ExactSpelling = true)]
    public static extern PxVehicleNoDrive* allocate(uint nbWheels);

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?free@PxVehicleNoDrive@physx@@QEAAXXZ", ExactSpelling = true)]
    private static extern void free_PInvoke(PxVehicleNoDrive* @this);

    public unsafe void free()
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { free_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setup@PxVehicleNoDrive@physx@@QEAAXPEAVPxPhysics@2@PEAVPxRigidDynamic@2@AEBVPxVehicleWheelsSimData@2@@Z", ExactSpelling = true)]
    private static extern void setup_PInvoke(PxVehicleNoDrive* @this, PxPhysics* physics, PxRigidDynamic* vehActor, PxVehicleWheelsSimData* wheelsData);

    public unsafe void setup(PxPhysics* physics, PxRigidDynamic* vehActor, PxVehicleWheelsSimData* wheelsData)
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { setup_PInvoke(@this, physics, vehActor, wheelsData); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?create@PxVehicleNoDrive@physx@@SAPEAV12@PEAVPxPhysics@2@PEAVPxRigidDynamic@2@AEBVPxVehicleWheelsSimData@2@@Z", ExactSpelling = true)]
    public static extern PxVehicleNoDrive* create(PxPhysics* physics, PxRigidDynamic* vehActor, PxVehicleWheelsSimData* wheelsData);

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setToRestState@PxVehicleNoDrive@physx@@QEAAXXZ", ExactSpelling = true)]
    private static extern void setToRestState_PInvoke(PxVehicleNoDrive* @this);

    public unsafe void setToRestState()
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { setToRestState_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setBrakeTorque@PxVehicleNoDrive@physx@@QEAAXIM@Z", ExactSpelling = true)]
    private static extern void setBrakeTorque_PInvoke(PxVehicleNoDrive* @this, uint id, float brakeTorque);

    public unsafe void setBrakeTorque(uint id, float brakeTorque)
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { setBrakeTorque_PInvoke(@this, id, brakeTorque); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setDriveTorque@PxVehicleNoDrive@physx@@QEAAXIM@Z", ExactSpelling = true)]
    private static extern void setDriveTorque_PInvoke(PxVehicleNoDrive* @this, uint id, float driveTorque);

    public unsafe void setDriveTorque(uint id, float driveTorque)
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { setDriveTorque_PInvoke(@this, id, driveTorque); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setSteerAngle@PxVehicleNoDrive@physx@@QEAAXIM@Z", ExactSpelling = true)]
    private static extern void setSteerAngle_PInvoke(PxVehicleNoDrive* @this, uint id, float steerAngle);

    public unsafe void setSteerAngle(uint id, float steerAngle)
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { setSteerAngle_PInvoke(@this, id, steerAngle); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getBrakeTorque@PxVehicleNoDrive@physx@@QEBAMI@Z", ExactSpelling = true)]
    private static extern float getBrakeTorque_PInvoke(PxVehicleNoDrive* @this, uint id);

    public unsafe float getBrakeTorque(uint id)
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { return getBrakeTorque_PInvoke(@this, id); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getDriveTorque@PxVehicleNoDrive@physx@@QEBAMI@Z", ExactSpelling = true)]
    private static extern float getDriveTorque_PInvoke(PxVehicleNoDrive* @this, uint id);

    public unsafe float getDriveTorque(uint id)
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { return getDriveTorque_PInvoke(@this, id); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getSteerAngle@PxVehicleNoDrive@physx@@QEBAMI@Z", ExactSpelling = true)]
    private static extern float getSteerAngle_PInvoke(PxVehicleNoDrive* @this, uint id);

    public unsafe float getSteerAngle(uint id)
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { return getSteerAngle_PInvoke(@this, id); }
    }

    [FieldOffset(192)] public float* mSteerAngles;

    [FieldOffset(200)] public float* mDriveTorques;

    [FieldOffset(208)] public float* mBrakeTorques;

    [FieldOffset(216)] public ConstantArray_physx__UNICODE_003A____UNICODE_003A__PxU32_2 mPad;

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?isValid@PxVehicleNoDrive@physx@@AEBA_NXZ", ExactSpelling = true)]
    [return: MarshalAs(UnmanagedType.I1)]
    private static extern bool isValid_PInvoke(PxVehicleNoDrive* @this);

    public unsafe bool isValid()
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { return isValid_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxVehicleNoDrive@physx@@QEAA@V?$PxFlags@W4Enum@PxBaseFlag@physx@@G@1@@Z", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxVehicleNoDrive* @this, PxBaseFlags baseFlags);

    public unsafe void Constructor(PxBaseFlags baseFlags)
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { Constructor_PInvoke(@this, baseFlags); }
    }

    public unsafe void exportExtraData(PxSerializationContext* __UNICODE_003C____UNICODE_003E__UnnamedTranslatedParameter)
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { VirtualMethodTablePointer->exportExtraData(@this, __UNICODE_003C____UNICODE_003E__UnnamedTranslatedParameter); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?importExtraData@PxVehicleNoDrive@physx@@QEAAXAEAVPxDeserializationContext@2@@Z", ExactSpelling = true)]
    private static extern void importExtraData_PInvoke(PxVehicleNoDrive* @this, PxDeserializationContext* __UNICODE_003C____UNICODE_003E__UnnamedTranslatedParameter);

    public unsafe void importExtraData(PxDeserializationContext* __UNICODE_003C____UNICODE_003E__UnnamedTranslatedParameter)
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { importExtraData_PInvoke(@this, __UNICODE_003C____UNICODE_003E__UnnamedTranslatedParameter); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?createObject@PxVehicleNoDrive@physx@@SAPEAV12@AEAPEAEAEAVPxDeserializationContext@2@@Z", ExactSpelling = true)]
    public static extern PxVehicleNoDrive* createObject(byte** address, PxDeserializationContext* context);

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getBinaryMetaData@PxVehicleNoDrive@physx@@SAXAEAVPxOutputStream@2@@Z", ExactSpelling = true)]
    public static extern void getBinaryMetaData(PxOutputStream* stream);

    public unsafe byte* getConcreteTypeName()
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { return VirtualMethodTablePointer->getConcreteTypeName(@this); }
    }

    public unsafe bool isKindOf(byte* name)
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { return VirtualMethodTablePointer->isKindOf(@this, name); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getNbSteerAngle@PxVehicleNoDrive@physx@@QEBAIXZ", ExactSpelling = true)]
    private static extern uint getNbSteerAngle_PInvoke(PxVehicleNoDrive* @this);

    public unsafe uint getNbSteerAngle()
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { return getNbSteerAngle_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getNbDriveTorque@PxVehicleNoDrive@physx@@QEBAIXZ", ExactSpelling = true)]
    private static extern uint getNbDriveTorque_PInvoke(PxVehicleNoDrive* @this);

    public unsafe uint getNbDriveTorque()
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { return getNbDriveTorque_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getNbBrakeTorque@PxVehicleNoDrive@physx@@QEBAIXZ", ExactSpelling = true)]
    private static extern uint getNbBrakeTorque_PInvoke(PxVehicleNoDrive* @this);

    public unsafe uint getNbBrakeTorque()
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { return getNbBrakeTorque_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxVehicleNoDrive@physx@@IEAA@XZ", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxVehicleNoDrive* @this);

    public unsafe void Constructor()
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { Constructor_PInvoke(@this); }
    }

    public unsafe void Destructor()
    {
        fixed (PxVehicleNoDrive* @this = &this)
        { VirtualMethodTablePointer->__DeletingDestructorPointer(@this); }
    }


    [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

    [StructLayout(LayoutKind.Sequential)]
    public unsafe struct VirtualMethodTable
    {
        /// <summary>Virtual method pointer for `release`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleWheels*, void> release;
        /// <summary>Virtual method pointer for `getConcreteTypeName`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleNoDrive*, byte*> getConcreteTypeName;
        /// <summary>Virtual method pointer for `isReleasable`</summary>
        public delegate* unmanaged[Cdecl]<PxBase*, NativeBoolean> isReleasable;
        /// <summary>Virtual method pointer for `~PxVehicleNoDrive`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleNoDrive*, void> __DeletingDestructorPointer;
        /// <summary>Virtual method pointer for `isKindOf`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleNoDrive*, byte*, NativeBoolean> isKindOf;
        /// <summary>Virtual method pointer for `init`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleWheels*, uint, void> init;
        /// <summary>Virtual method pointer for `requiresObjects`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleWheels*, PxProcessPxBaseCallback*, void> requiresObjects;
        /// <summary>Virtual method pointer for `preExportDataReset`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleWheels*, void> preExportDataReset;
        /// <summary>Virtual method pointer for `exportExtraData`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleNoDrive*, PxSerializationContext*, void> exportExtraData;
    }
}
