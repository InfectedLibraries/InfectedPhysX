// This file was automatically generated by Biohazrd and should not be modified by hand!
using System.Runtime.InteropServices;

[StructLayout(LayoutKind.Explicit, Size = 24)]
public unsafe partial struct PxBaseTask
{
    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxBaseTask@physx@@QEAA@XZ", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxBaseTask* @this);

    public unsafe void Constructor()
    {
        fixed (PxBaseTask* @this = &this)
        { Constructor_PInvoke(@this); }
    }

    public unsafe void Destructor()
    {
        fixed (PxBaseTask* @this = &this)
        { VirtualMethodTablePointer->__DeletingDestructorPointer(@this); }
    }

    public unsafe void run()
    {
        fixed (PxBaseTask* @this = &this)
        { VirtualMethodTablePointer->run(@this); }
    }

    public unsafe byte* getName()
    {
        fixed (PxBaseTask* @this = &this)
        { return VirtualMethodTablePointer->getName(@this); }
    }

    public unsafe void addReference()
    {
        fixed (PxBaseTask* @this = &this)
        { VirtualMethodTablePointer->addReference(@this); }
    }

    public unsafe void removeReference()
    {
        fixed (PxBaseTask* @this = &this)
        { VirtualMethodTablePointer->removeReference(@this); }
    }

    public unsafe int getReference()
    {
        fixed (PxBaseTask* @this = &this)
        { return VirtualMethodTablePointer->getReference(@this); }
    }

    public unsafe void release()
    {
        fixed (PxBaseTask* @this = &this)
        { VirtualMethodTablePointer->release(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getTaskManager@PxBaseTask@physx@@QEBAPEAVPxTaskManager@2@XZ", ExactSpelling = true)]
    private static extern PxTaskManager* getTaskManager_PInvoke(PxBaseTask* @this);

    public unsafe PxTaskManager* getTaskManager()
    {
        fixed (PxBaseTask* @this = &this)
        { return getTaskManager_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setContextId@PxBaseTask@physx@@QEAAX_K@Z", ExactSpelling = true)]
    private static extern void setContextId_PInvoke(PxBaseTask* @this, ulong id);

    public unsafe void setContextId(ulong id)
    {
        fixed (PxBaseTask* @this = &this)
        { setContextId_PInvoke(@this, id); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getContextId@PxBaseTask@physx@@QEBA_KXZ", ExactSpelling = true)]
    private static extern ulong getContextId_PInvoke(PxBaseTask* @this);

    public unsafe ulong getContextId()
    {
        fixed (PxBaseTask* @this = &this)
        { return getContextId_PInvoke(@this); }
    }

    [FieldOffset(8)] public ulong mContextID;

    [FieldOffset(16)] public PxTaskManager* mTm;


    [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

    [StructLayout(LayoutKind.Sequential)]
    public unsafe struct VirtualMethodTable
    {
        /// <summary>Virtual method pointer for `~PxBaseTask`</summary>
        public delegate* unmanaged[Cdecl]<PxBaseTask*, void> __DeletingDestructorPointer;
        /// <summary>Virtual method pointer for `run`</summary>
        public delegate* unmanaged[Cdecl]<PxBaseTask*, void> run;
        /// <summary>Virtual method pointer for `getName`</summary>
        public delegate* unmanaged[Cdecl]<PxBaseTask*, byte*> getName;
        /// <summary>Virtual method pointer for `addReference`</summary>
        public delegate* unmanaged[Cdecl]<PxBaseTask*, void> addReference;
        /// <summary>Virtual method pointer for `removeReference`</summary>
        public delegate* unmanaged[Cdecl]<PxBaseTask*, void> removeReference;
        /// <summary>Virtual method pointer for `getReference`</summary>
        public delegate* unmanaged[Cdecl]<PxBaseTask*, int> getReference;
        /// <summary>Virtual method pointer for `release`</summary>
        public delegate* unmanaged[Cdecl]<PxBaseTask*, void> release;
    }
}
