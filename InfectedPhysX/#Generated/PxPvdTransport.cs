// This file was automatically generated by Biohazrd and should not be modified by hand!
using System.Runtime.InteropServices;

[StructLayout(LayoutKind.Explicit, Size = 8)]
public unsafe partial struct PxPvdTransport
{
    public unsafe bool connect()
    {
        fixed (PxPvdTransport* @this = &this)
        { return VirtualMethodTablePointer->connect(@this); }
    }

    public unsafe void disconnect()
    {
        fixed (PxPvdTransport* @this = &this)
        { VirtualMethodTablePointer->disconnect(@this); }
    }

    public unsafe bool isConnected()
    {
        fixed (PxPvdTransport* @this = &this)
        { return VirtualMethodTablePointer->isConnected(@this); }
    }

    public unsafe bool write(byte* inBytes, uint inLength)
    {
        fixed (PxPvdTransport* @this = &this)
        { return VirtualMethodTablePointer->write(@this, inBytes, inLength); }
    }

    public unsafe PxPvdTransport* @lock()
    {
        fixed (PxPvdTransport* @this = &this)
        { return VirtualMethodTablePointer->@lock(@this); }
    }

    public unsafe void unlock()
    {
        fixed (PxPvdTransport* @this = &this)
        { VirtualMethodTablePointer->unlock(@this); }
    }

    public unsafe void flush()
    {
        fixed (PxPvdTransport* @this = &this)
        { VirtualMethodTablePointer->flush(@this); }
    }

    public unsafe ulong getWrittenDataSize()
    {
        fixed (PxPvdTransport* @this = &this)
        { return VirtualMethodTablePointer->getWrittenDataSize(@this); }
    }

    public unsafe void release()
    {
        fixed (PxPvdTransport* @this = &this)
        { VirtualMethodTablePointer->release(@this); }
    }

    public unsafe void Destructor()
    {
        fixed (PxPvdTransport* @this = &this)
        { VirtualMethodTablePointer->__DeletingDestructorPointer(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
    public static extern PxPvdTransport* PxDefaultPvdSocketTransportCreate(byte* host, int port, uint timeoutInMilliseconds);

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
    public static extern PxPvdTransport* PxDefaultPvdFileTransportCreate(byte* name);


    [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

    [StructLayout(LayoutKind.Sequential)]
    public unsafe struct VirtualMethodTable
    {
        /// <summary>Virtual method pointer for `connect`</summary>
        public delegate* unmanaged[Cdecl]<PxPvdTransport*, bool> connect;
        /// <summary>Virtual method pointer for `disconnect`</summary>
        public delegate* unmanaged[Cdecl]<PxPvdTransport*, void> disconnect;
        /// <summary>Virtual method pointer for `isConnected`</summary>
        public delegate* unmanaged[Cdecl]<PxPvdTransport*, bool> isConnected;
        /// <summary>Virtual method pointer for `write`</summary>
        public delegate* unmanaged[Cdecl]<PxPvdTransport*, byte*, uint, bool> write;
        /// <summary>Virtual method pointer for `lock`</summary>
        public delegate* unmanaged[Cdecl]<PxPvdTransport*, PxPvdTransport*> @lock;
        /// <summary>Virtual method pointer for `unlock`</summary>
        public delegate* unmanaged[Cdecl]<PxPvdTransport*, void> unlock;
        /// <summary>Virtual method pointer for `flush`</summary>
        public delegate* unmanaged[Cdecl]<PxPvdTransport*, void> flush;
        /// <summary>Virtual method pointer for `getWrittenDataSize`</summary>
        public delegate* unmanaged[Cdecl]<PxPvdTransport*, ulong> getWrittenDataSize;
        /// <summary>Virtual method pointer for `release`</summary>
        public delegate* unmanaged[Cdecl]<PxPvdTransport*, void> release;
        /// <summary>Virtual method pointer for `~PxPvdTransport`</summary>
        public delegate* unmanaged[Cdecl]<PxPvdTransport*, void> __DeletingDestructorPointer;
    }
}
