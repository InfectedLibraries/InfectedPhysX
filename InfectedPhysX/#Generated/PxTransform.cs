// This file was automatically generated by Biohazrd and should not be modified by hand!
using System.Runtime.InteropServices;

[StructLayout(LayoutKind.Explicit, Size = 28)]
public unsafe partial struct PxTransform
{
    [FieldOffset(0)] public PxQuat q;

    [FieldOffset(16)] public PxVec3 p;

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxTransform@physx@@QEAA@XZ", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxTransform* @this);

    public unsafe void Constructor()
    {
        fixed (PxTransform* @this = &this)
        { Constructor_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxTransform@physx@@QEAA@AEBVPxVec3@1@@Z", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxTransform* @this, PxVec3* position);

    public unsafe void Constructor(PxVec3* position)
    {
        fixed (PxTransform* @this = &this)
        { Constructor_PInvoke(@this, position); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxTransform@physx@@QEAA@W4PxIDENTITY@1@@Z", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxTransform* @this, PxIDENTITY r);

    public unsafe void Constructor(PxIDENTITY r)
    {
        fixed (PxTransform* @this = &this)
        { Constructor_PInvoke(@this, r); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxTransform@physx@@QEAA@AEBVPxQuat@1@@Z", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxTransform* @this, PxQuat* orientation);

    public unsafe void Constructor(PxQuat* orientation)
    {
        fixed (PxTransform* @this = &this)
        { Constructor_PInvoke(@this, orientation); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxTransform@physx@@QEAA@MMMVPxQuat@1@@Z", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxTransform* @this, float x, float y, float z, PxQuat* aQ);

    public unsafe void Constructor(float x, float y, float z, PxQuat* aQ)
    {
        fixed (PxTransform* @this = &this)
        { Constructor_PInvoke(@this, x, y, z, aQ); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxTransform@physx@@QEAA@AEBVPxVec3@1@AEBVPxQuat@1@@Z", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxTransform* @this, PxVec3* p0, PxQuat* q0);

    public unsafe void Constructor(PxVec3* p0, PxQuat* q0)
    {
        fixed (PxTransform* @this = &this)
        { Constructor_PInvoke(@this, p0, q0); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxTransform@physx@@QEAA@AEBVPxMat44@1@@Z", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxTransform* @this, PxMat44* m);

    public unsafe void Constructor(PxMat44* m)
    {
        fixed (PxTransform* @this = &this)
        { Constructor_PInvoke(@this, m); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??8PxTransform@physx@@QEBA_NAEBV01@@Z", ExactSpelling = true)]
    private static extern bool operator_EqualEqual_PInvoke(PxTransform* @this, PxTransform* t);

    public unsafe bool operator_EqualEqual(PxTransform* t)
    {
        fixed (PxTransform* @this = &this)
        { return operator_EqualEqual_PInvoke(@this, t); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??DPxTransform@physx@@QEBA?AV01@AEBV01@@Z", ExactSpelling = true)]
    private static extern void operator_Star_PInvoke(PxTransform* @this, out PxTransform __returnBuffer, PxTransform* x);

    public unsafe PxTransform operator_Star(PxTransform* x)
    {
        fixed (PxTransform* @this = &this)
        {
            PxTransform __returnBuffer;
            operator_Star_PInvoke(@this, out __returnBuffer, x);
            return __returnBuffer;
        }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??XPxTransform@physx@@QEAAAEAV01@AEAV01@@Z", ExactSpelling = true)]
    private static extern PxTransform* operator_StarEqual_PInvoke(PxTransform* @this, PxTransform* other);

    public unsafe PxTransform* operator_StarEqual(PxTransform* other)
    {
        fixed (PxTransform* @this = &this)
        { return operator_StarEqual_PInvoke(@this, other); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getInverse@PxTransform@physx@@QEBA?AV12@XZ", ExactSpelling = true)]
    private static extern void getInverse_PInvoke(PxTransform* @this, out PxTransform __returnBuffer);

    public unsafe PxTransform getInverse()
    {
        fixed (PxTransform* @this = &this)
        {
            PxTransform __returnBuffer;
            getInverse_PInvoke(@this, out __returnBuffer);
            return __returnBuffer;
        }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?transform@PxTransform@physx@@QEBA?AVPxVec3@2@AEBV32@@Z", ExactSpelling = true)]
    private static extern void transform_PInvoke(PxTransform* @this, out PxVec3 __returnBuffer, PxVec3* input);

    public unsafe PxVec3 transform(PxVec3* input)
    {
        fixed (PxTransform* @this = &this)
        {
            PxVec3 __returnBuffer;
            transform_PInvoke(@this, out __returnBuffer, input);
            return __returnBuffer;
        }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?transformInv@PxTransform@physx@@QEBA?AVPxVec3@2@AEBV32@@Z", ExactSpelling = true)]
    private static extern void transformInv_PInvoke(PxTransform* @this, out PxVec3 __returnBuffer, PxVec3* input);

    public unsafe PxVec3 transformInv(PxVec3* input)
    {
        fixed (PxTransform* @this = &this)
        {
            PxVec3 __returnBuffer;
            transformInv_PInvoke(@this, out __returnBuffer, input);
            return __returnBuffer;
        }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?rotate@PxTransform@physx@@QEBA?AVPxVec3@2@AEBV32@@Z", ExactSpelling = true)]
    private static extern void rotate_PInvoke(PxTransform* @this, out PxVec3 __returnBuffer, PxVec3* input);

    public unsafe PxVec3 rotate(PxVec3* input)
    {
        fixed (PxTransform* @this = &this)
        {
            PxVec3 __returnBuffer;
            rotate_PInvoke(@this, out __returnBuffer, input);
            return __returnBuffer;
        }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?rotateInv@PxTransform@physx@@QEBA?AVPxVec3@2@AEBV32@@Z", ExactSpelling = true)]
    private static extern void rotateInv_PInvoke(PxTransform* @this, out PxVec3 __returnBuffer, PxVec3* input);

    public unsafe PxVec3 rotateInv(PxVec3* input)
    {
        fixed (PxTransform* @this = &this)
        {
            PxVec3 __returnBuffer;
            rotateInv_PInvoke(@this, out __returnBuffer, input);
            return __returnBuffer;
        }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?transform@PxTransform@physx@@QEBA?AV12@AEBV12@@Z", ExactSpelling = true)]
    private static extern void transform_PInvoke(PxTransform* @this, out PxTransform __returnBuffer, PxTransform* src);

    public unsafe PxTransform transform(PxTransform* src)
    {
        fixed (PxTransform* @this = &this)
        {
            PxTransform __returnBuffer;
            transform_PInvoke(@this, out __returnBuffer, src);
            return __returnBuffer;
        }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?isValid@PxTransform@physx@@QEBA_NXZ", ExactSpelling = true)]
    private static extern bool isValid_PInvoke(PxTransform* @this);

    public unsafe bool isValid()
    {
        fixed (PxTransform* @this = &this)
        { return isValid_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?isSane@PxTransform@physx@@QEBA_NXZ", ExactSpelling = true)]
    private static extern bool isSane_PInvoke(PxTransform* @this);

    public unsafe bool isSane()
    {
        fixed (PxTransform* @this = &this)
        { return isSane_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?isFinite@PxTransform@physx@@QEBA_NXZ", ExactSpelling = true)]
    private static extern bool isFinite_PInvoke(PxTransform* @this);

    public unsafe bool isFinite()
    {
        fixed (PxTransform* @this = &this)
        { return isFinite_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?transformInv@PxTransform@physx@@QEBA?AV12@AEBV12@@Z", ExactSpelling = true)]
    private static extern void transformInv_PInvoke(PxTransform* @this, out PxTransform __returnBuffer, PxTransform* src);

    public unsafe PxTransform transformInv(PxTransform* src)
    {
        fixed (PxTransform* @this = &this)
        {
            PxTransform __returnBuffer;
            transformInv_PInvoke(@this, out __returnBuffer, src);
            return __returnBuffer;
        }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?transform@PxTransform@physx@@QEBA?AVPxPlane@2@AEBV32@@Z", ExactSpelling = true)]
    private static extern void transform_PInvoke(PxTransform* @this, out PxPlane __returnBuffer, PxPlane* plane);

    public unsafe PxPlane transform(PxPlane* plane)
    {
        fixed (PxTransform* @this = &this)
        {
            PxPlane __returnBuffer;
            transform_PInvoke(@this, out __returnBuffer, plane);
            return __returnBuffer;
        }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?inverseTransform@PxTransform@physx@@QEBA?AVPxPlane@2@AEBV32@@Z", ExactSpelling = true)]
    private static extern void inverseTransform_PInvoke(PxTransform* @this, out PxPlane __returnBuffer, PxPlane* plane);

    public unsafe PxPlane inverseTransform(PxPlane* plane)
    {
        fixed (PxTransform* @this = &this)
        {
            PxPlane __returnBuffer;
            inverseTransform_PInvoke(@this, out __returnBuffer, plane);
            return __returnBuffer;
        }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getNormalized@PxTransform@physx@@QEBA?AV12@XZ", ExactSpelling = true)]
    private static extern void getNormalized_PInvoke(PxTransform* @this, out PxTransform __returnBuffer);

    public unsafe PxTransform getNormalized()
    {
        fixed (PxTransform* @this = &this)
        {
            PxTransform __returnBuffer;
            getNormalized_PInvoke(@this, out __returnBuffer);
            return __returnBuffer;
        }
    }
}
