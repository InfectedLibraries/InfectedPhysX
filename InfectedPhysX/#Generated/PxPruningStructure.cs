// This file was automatically generated by Biohazrd and should not be modified by hand!
using System.Runtime.InteropServices;

[StructLayout(LayoutKind.Explicit, Size = 16)]
public unsafe partial struct PxPruningStructure
{
    [FieldOffset(0)] public PxBase Base;

    public unsafe void release()
    {
        fixed (PxPruningStructure* @this = &this)
        { VirtualMethodTablePointer->release(@this); }
    }

    public unsafe uint getRigidActors(PxRigidActor** userBuffer, uint bufferSize, uint startIndex = 0)
    {
        fixed (PxPruningStructure* @this = &this)
        { return VirtualMethodTablePointer->getRigidActors(@this, userBuffer, bufferSize, startIndex); }
    }

    public unsafe uint getNbRigidActors()
    {
        fixed (PxPruningStructure* @this = &this)
        { return VirtualMethodTablePointer->getNbRigidActors(@this); }
    }

    public unsafe byte* getConcreteTypeName()
    {
        fixed (PxPruningStructure* @this = &this)
        { return VirtualMethodTablePointer->getConcreteTypeName(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxPruningStructure@physx@@IEAA@GV?$PxFlags@W4Enum@PxBaseFlag@physx@@G@1@@Z", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxPruningStructure* @this, ushort concreteType, PxBaseFlags baseFlags);

    public unsafe void Constructor(ushort concreteType, PxBaseFlags baseFlags)
    {
        fixed (PxPruningStructure* @this = &this)
        { Constructor_PInvoke(@this, concreteType, baseFlags); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxPruningStructure@physx@@IEAA@V?$PxFlags@W4Enum@PxBaseFlag@physx@@G@1@@Z", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxPruningStructure* @this, PxBaseFlags baseFlags);

    public unsafe void Constructor(PxBaseFlags baseFlags)
    {
        fixed (PxPruningStructure* @this = &this)
        { Constructor_PInvoke(@this, baseFlags); }
    }

    public unsafe void Destructor()
    {
        fixed (PxPruningStructure* @this = &this)
        { VirtualMethodTablePointer->__DeletingDestructorPointer(@this); }
    }

    public unsafe bool isKindOf(byte* name)
    {
        fixed (PxPruningStructure* @this = &this)
        { return VirtualMethodTablePointer->isKindOf(@this, name); }
    }


    [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

    [StructLayout(LayoutKind.Sequential)]
    public unsafe struct VirtualMethodTable
    {
        /// <summary>Virtual method pointer for `release`</summary>
        public delegate* unmanaged[Cdecl]<PxPruningStructure*, void> release;
        /// <summary>Virtual method pointer for `getConcreteTypeName`</summary>
        public delegate* unmanaged[Cdecl]<PxPruningStructure*, byte*> getConcreteTypeName;
        /// <summary>Virtual method pointer for `isReleasable`</summary>
        public delegate* unmanaged[Cdecl]<PxBase*, NativeBoolean> isReleasable;
        /// <summary>Virtual method pointer for `~PxPruningStructure`</summary>
        public delegate* unmanaged[Cdecl]<PxPruningStructure*, void> __DeletingDestructorPointer;
        /// <summary>Virtual method pointer for `isKindOf`</summary>
        public delegate* unmanaged[Cdecl]<PxPruningStructure*, byte*, NativeBoolean> isKindOf;
        /// <summary>Virtual method pointer for `getRigidActors`</summary>
        public delegate* unmanaged[Cdecl]<PxPruningStructure*, PxRigidActor**, uint, uint, uint> getRigidActors;
        /// <summary>Virtual method pointer for `getNbRigidActors`</summary>
        public delegate* unmanaged[Cdecl]<PxPruningStructure*, uint> getNbRigidActors;
    }
}
