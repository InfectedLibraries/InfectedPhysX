// This file was automatically generated by Biohazrd and should not be modified by hand!
using System.Runtime.InteropServices;

[StructLayout(LayoutKind.Explicit, Size = 8)]
public unsafe partial struct PxFoundation
{
    public unsafe void release()
    {
        fixed (PxFoundation* @this = &this)
        { VirtualMethodTablePointer->release(@this); }
    }

    public unsafe PxErrorCallback* getErrorCallback()
    {
        fixed (PxFoundation* @this = &this)
        { return VirtualMethodTablePointer->getErrorCallback(@this); }
    }

    public unsafe void setErrorLevel(PxErrorCode mask = (PxErrorCode)(-1))
    {
        fixed (PxFoundation* @this = &this)
        { VirtualMethodTablePointer->setErrorLevel(@this, mask); }
    }

    public unsafe PxErrorCode getErrorLevel()
    {
        fixed (PxFoundation* @this = &this)
        { return VirtualMethodTablePointer->getErrorLevel(@this); }
    }

    public unsafe PxAllocatorCallback* getAllocatorCallback()
    {
        fixed (PxFoundation* @this = &this)
        { return VirtualMethodTablePointer->getAllocatorCallback(@this); }
    }

    public unsafe bool getReportAllocationNames()
    {
        fixed (PxFoundation* @this = &this)
        { return VirtualMethodTablePointer->getReportAllocationNames(@this); }
    }

    public unsafe void setReportAllocationNames(bool value)
    {
        fixed (PxFoundation* @this = &this)
        { VirtualMethodTablePointer->setReportAllocationNames(@this, value); }
    }

    public unsafe void Destructor()
    {
        fixed (PxFoundation* @this = &this)
        { VirtualMethodTablePointer->__DeletingDestructorPointer(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
    public static extern PxFoundation* PxCreateFoundation(uint version, PxAllocatorCallback* allocator, PxErrorCallback* errorCallback);

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
    public static extern PxFoundation* PxGetFoundation();

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
    public static extern PxProfilerCallback* PxGetProfilerCallback();

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
    public static extern void PxSetProfilerCallback(PxProfilerCallback* profiler);


    [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

    [StructLayout(LayoutKind.Sequential)]
    public unsafe struct VirtualMethodTable
    {
        /// <summary>Virtual method pointer for `release`</summary>
        public delegate* unmanaged[Cdecl]<PxFoundation*, void> release;
        /// <summary>Virtual method pointer for `getErrorCallback`</summary>
        public delegate* unmanaged[Cdecl]<PxFoundation*, PxErrorCallback*> getErrorCallback;
        /// <summary>Virtual method pointer for `setErrorLevel`</summary>
        public delegate* unmanaged[Cdecl]<PxFoundation*, PxErrorCode, void> setErrorLevel;
        /// <summary>Virtual method pointer for `getErrorLevel`</summary>
        public delegate* unmanaged[Cdecl]<PxFoundation*, PxErrorCode> getErrorLevel;
        /// <summary>Virtual method pointer for `getAllocatorCallback`</summary>
        public delegate* unmanaged[Cdecl]<PxFoundation*, PxAllocatorCallback*> getAllocatorCallback;
        /// <summary>Virtual method pointer for `getReportAllocationNames`</summary>
        public delegate* unmanaged[Cdecl]<PxFoundation*, bool> getReportAllocationNames;
        /// <summary>Virtual method pointer for `setReportAllocationNames`</summary>
        public delegate* unmanaged[Cdecl]<PxFoundation*, bool, void> setReportAllocationNames;
        /// <summary>Virtual method pointer for `~PxFoundation`</summary>
        public delegate* unmanaged[Cdecl]<PxFoundation*, void> __DeletingDestructorPointer;
    }
}
