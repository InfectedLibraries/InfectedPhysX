// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Runtime.InteropServices;

namespace PhysX
{
    public unsafe static partial class Globals
    {
        public static readonly float* PxPi = (float*)NativeLibrary.GetExport(NativeLibrary.Load("TODO.dll"), "?PxPi@physx@@3MB");

        public static readonly float* PxHalfPi = (float*)NativeLibrary.GetExport(NativeLibrary.Load("TODO.dll"), "?PxHalfPi@physx@@3MB");

        public static readonly float* PxTwoPi = (float*)NativeLibrary.GetExport(NativeLibrary.Load("TODO.dll"), "?PxTwoPi@physx@@3MB");

        public static readonly float* PxInvPi = (float*)NativeLibrary.GetExport(NativeLibrary.Load("TODO.dll"), "?PxInvPi@physx@@3MB");

        public static readonly float* PxInvTwoPi = (float*)NativeLibrary.GetExport(NativeLibrary.Load("TODO.dll"), "?PxInvTwoPi@physx@@3MB");

        public static readonly float* PxPiDivTwo = (float*)NativeLibrary.GetExport(NativeLibrary.Load("TODO.dll"), "?PxPiDivTwo@physx@@3MB");

        public static readonly float* PxPiDivFour = (float*)NativeLibrary.GetExport(NativeLibrary.Load("TODO.dll"), "?PxPiDivFour@physx@@3MB");

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxAbs@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxAbs(float a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxEquals@physx@@YA_NMMM@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxEquals(float a, float b, float eps);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxAbs@physx@@YANN@Z", ExactSpelling = true)]
        public static extern double PxAbs(double a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxAbs@physx@@YAHH@Z", ExactSpelling = true)]
        public static extern int PxAbs(int a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSqrt@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxSqrt(float a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSqrt@physx@@YANN@Z", ExactSpelling = true)]
        public static extern double PxSqrt(double a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxRecipSqrt@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxRecipSqrt(float a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxRecipSqrt@physx@@YANN@Z", ExactSpelling = true)]
        public static extern double PxRecipSqrt(double a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSin@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxSin(float a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSin@physx@@YANN@Z", ExactSpelling = true)]
        public static extern double PxSin(double a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCos@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxCos(float a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCos@physx@@YANN@Z", ExactSpelling = true)]
        public static extern double PxCos(double a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxTan@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxTan(float a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxTan@physx@@YANN@Z", ExactSpelling = true)]
        public static extern double PxTan(double a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxAsin@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxAsin(float f);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxAsin@physx@@YANN@Z", ExactSpelling = true)]
        public static extern double PxAsin(double f);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxAcos@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxAcos(float f);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxAcos@physx@@YANN@Z", ExactSpelling = true)]
        public static extern double PxAcos(double f);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxAtan@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxAtan(float a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxAtan@physx@@YANN@Z", ExactSpelling = true)]
        public static extern double PxAtan(double a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxAtan2@physx@@YAMMM@Z", ExactSpelling = true)]
        public static extern float PxAtan2(float x, float y);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxAtan2@physx@@YANNN@Z", ExactSpelling = true)]
        public static extern double PxAtan2(double x, double y);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxIsFinite@physx@@YA_NM@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxIsFinite(float f);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxIsFinite@physx@@YA_NN@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxIsFinite(double f);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxFloor@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxFloor(float a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxExp@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxExp(float a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCeil@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxCeil(float a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSign@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxSign(float a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxPow@physx@@YAMMM@Z", ExactSpelling = true)]
        public static extern float PxPow(float x, float y);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxLog@physx@@YAMM@Z", ExactSpelling = true)]
        public static extern float PxLog(float x);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??Dphysx@@YA?AVPxVec3@0@MAEBV10@@Z", ExactSpelling = true)]
        public static extern PxVec3* operator_Star(out PxVec3 __returnBuffer, float f, PxVec3* v);

        public static readonly byte* PX_DEFAULT_CLIENT = (byte*)NativeLibrary.GetExport(NativeLibrary.Load("TODO.dll"), "?PX_DEFAULT_CLIENT@physx@@3EB");

        public static readonly byte* PX_MAX_CLIENTS = (byte*)NativeLibrary.GetExport(NativeLibrary.Load("TODO.dll"), "?PX_MAX_CLIENTS@physx@@3EB");

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCreateCollection@@YAPEAVPxCollection@physx@@XZ", ExactSpelling = true)]
        public static extern PxCollection* PxCreateCollection();

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??Uphysx@@YA?AV?$PxFlags@W4Enum@PxArticulationAxis@physx@@E@0@W4Enum@PxArticulationAxis@0@0@Z", ExactSpelling = true)]
        public static extern /* Failed to emit TranslatedFunction operator_Pipe: Failed to resolve `Ref resolved by PxFlags` during emit time. */
        int operator_Pipe(PxArticulationAxis a, PxArticulationAxis b);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??Iphysx@@YA?AV?$PxFlags@W4Enum@PxArticulationAxis@physx@@E@0@W4Enum@PxArticulationAxis@0@0@Z", ExactSpelling = true)]
        public static extern /* Failed to emit TranslatedFunction operator_Amp: Failed to resolve `Ref resolved by PxFlags` during emit time. */
        int operator_Amp(PxArticulationAxis a, PxArticulationAxis b);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??Sphysx@@YA?AV?$PxFlags@W4Enum@PxArticulationAxis@physx@@E@0@W4Enum@PxArticulationAxis@0@@Z", ExactSpelling = true)]
        public static extern /* Failed to emit TranslatedFunction operator_Tilde: Failed to resolve `Ref resolved by PxFlags` during emit time. */
        int operator_Tilde(PxArticulationAxis a);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxTransformFromSegment@physx@@YA?AVPxTransform@1@AEBVPxVec3@1@0PEAM@Z", ExactSpelling = true)]
        public static extern PxTransform* PxTransformFromSegment(out PxTransform __returnBuffer, PxVec3* p0, PxVec3* p1, float* halfHeight = null);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxTransformFromPlaneEquation@physx@@YA?AVPxTransform@1@AEBVPxPlane@1@@Z", ExactSpelling = true)]
        public static extern PxTransform* PxTransformFromPlaneEquation(out PxTransform __returnBuffer, PxPlane* plane);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxPlaneEquationFromTransform@physx@@YA?AVPxPlane@1@AEBVPxTransform@1@@Z", ExactSpelling = true)]
        public static extern PxPlane* PxPlaneEquationFromTransform(out PxPlane __returnBuffer, PxTransform* transform);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxGetAssertHandler@physx@@YAAEAVPxAssertHandler@1@XZ", ExactSpelling = true)]
        public static extern PxAssertHandler* PxGetAssertHandler();

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSetAssertHandler@physx@@YAXAEAVPxAssertHandler@1@@Z", ExactSpelling = true)]
        public static extern void PxSetAssertHandler(PxAssertHandler* handler);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxMemZero@physx@@YAPEAXPEAXI@Z", ExactSpelling = true)]
        public static extern void* PxMemZero(void* dest, uint count);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxMemSet@physx@@YAPEAXPEAXHI@Z", ExactSpelling = true)]
        public static extern void* PxMemSet(void* dest, int c, uint count);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxMemCopy@physx@@YAPEAXPEAXPEBXI@Z", ExactSpelling = true)]
        public static extern void* PxMemCopy(void* dest, void* src, uint count);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxMemMove@physx@@YAPEAXPEAXPEBXI@Z", ExactSpelling = true)]
        public static extern void* PxMemMove(void* dest, void* src, uint count);

        public static readonly uint* INVALID_FILTER_PAIR_INDEX = (uint*)NativeLibrary.GetExport(NativeLibrary.Load("TODO.dll"), "?INVALID_FILTER_PAIR_INDEX@physx@@3IB");

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxGetFilterObjectType@physx@@YA?AW4Enum@PxFilterObjectType@1@I@Z", ExactSpelling = true)]
        public static extern PxFilterObjectType PxGetFilterObjectType(uint attr);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxFilterObjectIsKinematic@physx@@YA_NI@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxFilterObjectIsKinematic(uint attr);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxFilterObjectIsTrigger@physx@@YA_NI@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxFilterObjectIsTrigger(uint attr);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern PxFoundation* PxCreateFoundation(uint version, PxAllocatorCallback* allocator, PxErrorCallback* errorCallback);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern PxFoundation* PxGetFoundation();

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern PxProfilerCallback* PxGetProfilerCallback();

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxSetProfilerCallback(PxProfilerCallback* profiler);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxRegisterArticulations(PxPhysics* physics);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxRegisterArticulationsReducedCoordinate(PxPhysics* physics);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxRegisterHeightFields(PxPhysics* physics);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern PxPhysics* PxCreateBasePhysics(uint version, PxFoundation* foundation, PxTolerancesScale* scale, [MarshalAs(UnmanagedType.I1)] bool trackOutstandingAllocations = false, PxPvd* pvd = null);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCreatePhysics@@YAPEAVPxPhysics@physx@@IAEAVPxFoundation@2@AEBVPxTolerancesScale@2@_NPEAVPxPvd@2@@Z", ExactSpelling = true)]
        public static extern PxPhysics* PxCreatePhysics(uint version, PxFoundation* foundation, PxTolerancesScale* scale, [MarshalAs(UnmanagedType.I1)] bool trackOutstandingAllocations = false, PxPvd* pvd = null);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern PxPhysics* PxGetPhysics();

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??Dphysx@@YA?AVPxVec4@0@MAEBV10@@Z", ExactSpelling = true)]
        public static extern PxVec4* operator_Star(out PxVec4 __returnBuffer, float f, PxVec4* v);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxShortestRotation@physx@@YA?AVPxQuat@1@AEBVPxVec3@1@0@Z", ExactSpelling = true)]
        public static extern PxQuat* PxShortestRotation(out PxQuat __returnBuffer, PxVec3* from, PxVec3* target);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxDiagonalize@physx@@YA?AVPxVec3@1@AEBVPxMat33@1@AEAVPxQuat@1@@Z", ExactSpelling = true)]
        public static extern PxVec3* PxDiagonalize(out PxVec3 __returnBuffer, PxMat33* m, PxQuat* axes);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??Dphysx@@YA?AVPxVec2@0@MAEBV10@@Z", ExactSpelling = true)]
        public static extern PxVec2* operator_Star(out PxVec2 __returnBuffer, float f, PxVec2* v);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxSetPhysXGpuLoadHook(PxGpuLoadHook* hook);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int PxGetSuggestedCudaDeviceOrdinal(PxErrorCallback* errc);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern PxCudaContextManager* PxCreateCudaContextManager(PxFoundation* foundation, PxCudaContextManagerDesc* desc, PxProfilerCallback* profilerCallback = null);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?toVec3@physx@@YA?AVPxVec3@1@AEBUPxExtendedVec3@1@@Z", ExactSpelling = true)]
        public static extern PxVec3* toVec3(out PxVec3 __returnBuffer, PxExtendedVec3* v);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern PxControllerManager* PxCreateControllerManager(PxScene* scene, [MarshalAs(UnmanagedType.I1)] bool lockingEnabled = false);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern PxCooking* PxCreateCooking(uint version, PxFoundation* foundation, PxCookingParams* @params);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxSetJointGlobalFrame(PxJoint* joint, PxVec3* wsAnchor, PxVec3* wsAxis);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxDistanceJointCreate@physx@@YAPEAVPxDistanceJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxTransform@1@12@Z", ExactSpelling = true)]
        public static extern PxDistanceJoint* PxDistanceJointCreate(PxPhysics* physics, PxRigidActor* actor0, PxTransform* localFrame0, PxRigidActor* actor1, PxTransform* localFrame1);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?platformAlignedAlloc@physx@@YAPEAX_K@Z", ExactSpelling = true)]
        public static extern void* platformAlignedAlloc(ulong size);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?platformAlignedFree@physx@@YAXPEAX@Z", ExactSpelling = true)]
        public static extern void platformAlignedFree(void* ptr);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxContactJointCreate@physx@@YAPEAVPxContactJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxTransform@1@12@Z", ExactSpelling = true)]
        public static extern PxContactJoint* PxContactJointCreate(PxPhysics* physics, PxRigidActor* actor0, PxTransform* localFrame0, PxRigidActor* actor1, PxTransform* localFrame1);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxFixedJointCreate@physx@@YAPEAVPxFixedJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxTransform@1@12@Z", ExactSpelling = true)]
        public static extern PxFixedJoint* PxFixedJointCreate(PxPhysics* physics, PxRigidActor* actor0, PxTransform* localFrame0, PxRigidActor* actor1, PxTransform* localFrame1);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxPrismaticJointCreate@physx@@YAPEAVPxPrismaticJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxTransform@1@12@Z", ExactSpelling = true)]
        public static extern PxPrismaticJoint* PxPrismaticJointCreate(PxPhysics* physics, PxRigidActor* actor0, PxTransform* localFrame0, PxRigidActor* actor1, PxTransform* localFrame1);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxRevoluteJointCreate@physx@@YAPEAVPxRevoluteJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxTransform@1@12@Z", ExactSpelling = true)]
        public static extern PxRevoluteJoint* PxRevoluteJointCreate(PxPhysics* physics, PxRigidActor* actor0, PxTransform* localFrame0, PxRigidActor* actor1, PxTransform* localFrame1);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSphericalJointCreate@physx@@YAPEAVPxSphericalJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxTransform@1@12@Z", ExactSpelling = true)]
        public static extern PxSphericalJoint* PxSphericalJointCreate(PxPhysics* physics, PxRigidActor* actor0, PxTransform* localFrame0, PxRigidActor* actor1, PxTransform* localFrame1);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxD6JointCreate@physx@@YAPEAVPxD6Joint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxTransform@1@12@Z", ExactSpelling = true)]
        public static extern PxD6Joint* PxD6JointCreate(PxPhysics* physics, PxRigidActor* actor0, PxTransform* localFrame0, PxRigidActor* actor1, PxTransform* localFrame1);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxDefaultSimulationFilterShader@physx@@YA?AV?$PxFlags@W4Enum@PxFilterFlag@physx@@G@1@IUPxFilterData@1@I0AEAV?$PxFlags@W4Enum@PxPairFlag@physx@@G@1@PEBXI@Z", ExactSpelling = true)]
        public static extern PxFilterFlags PxDefaultSimulationFilterShader(uint attributes0, PxFilterData* filterData0, uint attributes1, PxFilterData* filterData1, PxPairFlags* pairFlags, void* constantBlock, uint constantBlockSize);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxGetGroupCollisionFlag@physx@@YA_NGG@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxGetGroupCollisionFlag(ushort group1, ushort group2);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSetGroupCollisionFlag@physx@@YAXGG_N@Z", ExactSpelling = true)]
        public static extern void PxSetGroupCollisionFlag(ushort group1, ushort group2, [MarshalAs(UnmanagedType.I1)] bool enable);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxGetGroup@physx@@YAGAEBVPxActor@1@@Z", ExactSpelling = true)]
        public static extern ushort PxGetGroup(PxActor* actor);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSetGroup@physx@@YAXAEAVPxActor@1@G@Z", ExactSpelling = true)]
        public static extern void PxSetGroup(PxActor* actor, ushort collisionGroup);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxGetFilterOps@physx@@YAXAEAW4Enum@PxFilterOp@1@00@Z", ExactSpelling = true)]
        public static extern void PxGetFilterOps(PxFilterOp* op0, PxFilterOp* op1, PxFilterOp* op2);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSetFilterOps@physx@@YAXAEBW4Enum@PxFilterOp@1@00@Z", ExactSpelling = true)]
        public static extern void PxSetFilterOps(PxFilterOp* op0, PxFilterOp* op1, PxFilterOp* op2);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxGetFilterBool@physx@@YA_NXZ", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxGetFilterBool();

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSetFilterBool@physx@@YAX_N@Z", ExactSpelling = true)]
        public static extern void PxSetFilterBool([MarshalAs(UnmanagedType.I1)] bool enable);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxGetFilterConstants@physx@@YAXAEAVPxGroupsMask@1@0@Z", ExactSpelling = true)]
        public static extern void PxGetFilterConstants(PxGroupsMask* c0, PxGroupsMask* c1);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSetFilterConstants@physx@@YAXAEBVPxGroupsMask@1@0@Z", ExactSpelling = true)]
        public static extern void PxSetFilterConstants(PxGroupsMask* c0, PxGroupsMask* c1);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxGetGroupsMask@physx@@YA?AVPxGroupsMask@1@AEBVPxActor@1@@Z", ExactSpelling = true)]
        public static extern PxGroupsMask PxGetGroupsMask(PxActor* actor);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxSetGroupsMask@physx@@YAXAEAVPxActor@1@AEBVPxGroupsMask@1@@Z", ExactSpelling = true)]
        public static extern void PxSetGroupsMask(PxActor* actor, PxGroupsMask* mask);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxComputeTriangleMeshPenetration@physx@@YA_NAEAVPxVec3@1@AEAMAEBVPxGeometry@1@AEBVPxTransform@1@AEBVPxTriangleMeshGeometry@1@3IPEAI@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxComputeTriangleMeshPenetration(PxVec3* direction, float* depth, PxGeometry* geom, PxTransform* geomPose, PxTriangleMeshGeometry* meshGeom, PxTransform* meshPose, uint maxIter, uint* usedIter = null);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxComputeHeightFieldPenetration@physx@@YA_NAEAVPxVec3@1@AEAMAEBVPxGeometry@1@AEBVPxTransform@1@AEBVPxHeightFieldGeometry@1@3IPEAI@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxComputeHeightFieldPenetration(PxVec3* direction, float* depth, PxGeometry* geom, PxTransform* geomPose, PxHeightFieldGeometry* heightFieldGeom, PxTransform* heightFieldPose, uint maxIter, uint* usedIter = null);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxDefaultCpuDispatcherCreate@physx@@YAPEAVPxDefaultCpuDispatcher@1@IPEAI@Z", ExactSpelling = true)]
        public static extern PxDefaultCpuDispatcher* PxDefaultCpuDispatcherCreate(uint numThreads, uint* affinityMasks = null);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxBuildSmoothNormals(uint nbTris, uint nbVerts, PxVec3* verts, uint* dFaces, ushort* wFaces, PxVec3* normals, [MarshalAs(UnmanagedType.I1)] bool flip);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCreateDynamic@physx@@YAPEAVPxRigidDynamic@1@AEAVPxPhysics@1@AEBVPxTransform@1@AEBVPxGeometry@1@AEAVPxMaterial@1@M1@Z", ExactSpelling = true)]
        public static extern PxRigidDynamic* PxCreateDynamic(PxPhysics* sdk, PxTransform* transform, PxGeometry* geometry, PxMaterial* material, float density, PxTransform* shapeOffset);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCreateDynamic@physx@@YAPEAVPxRigidDynamic@1@AEAVPxPhysics@1@AEBVPxTransform@1@AEAVPxShape@1@M@Z", ExactSpelling = true)]
        public static extern PxRigidDynamic* PxCreateDynamic(PxPhysics* sdk, PxTransform* transform, PxShape* shape, float density);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCreateKinematic@physx@@YAPEAVPxRigidDynamic@1@AEAVPxPhysics@1@AEBVPxTransform@1@AEBVPxGeometry@1@AEAVPxMaterial@1@M1@Z", ExactSpelling = true)]
        public static extern PxRigidDynamic* PxCreateKinematic(PxPhysics* sdk, PxTransform* transform, PxGeometry* geometry, PxMaterial* material, float density, PxTransform* shapeOffset);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCreateKinematic@physx@@YAPEAVPxRigidDynamic@1@AEAVPxPhysics@1@AEBVPxTransform@1@AEAVPxShape@1@M@Z", ExactSpelling = true)]
        public static extern PxRigidDynamic* PxCreateKinematic(PxPhysics* sdk, PxTransform* transform, PxShape* shape, float density);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCreateStatic@physx@@YAPEAVPxRigidStatic@1@AEAVPxPhysics@1@AEBVPxTransform@1@AEBVPxGeometry@1@AEAVPxMaterial@1@1@Z", ExactSpelling = true)]
        public static extern PxRigidStatic* PxCreateStatic(PxPhysics* sdk, PxTransform* transform, PxGeometry* geometry, PxMaterial* material, PxTransform* shapeOffset);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCreateStatic@physx@@YAPEAVPxRigidStatic@1@AEAVPxPhysics@1@AEBVPxTransform@1@AEAVPxShape@1@@Z", ExactSpelling = true)]
        public static extern PxRigidStatic* PxCreateStatic(PxPhysics* sdk, PxTransform* transform, PxShape* shape);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCloneShape@physx@@YAPEAVPxShape@1@AEAVPxPhysics@1@AEBV21@_N@Z", ExactSpelling = true)]
        public static extern PxShape* PxCloneShape(PxPhysics* physicsSDK, PxShape* shape, [MarshalAs(UnmanagedType.I1)] bool isExclusive);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCloneStatic@physx@@YAPEAVPxRigidStatic@1@AEAVPxPhysics@1@AEBVPxTransform@1@AEBVPxRigidActor@1@@Z", ExactSpelling = true)]
        public static extern PxRigidStatic* PxCloneStatic(PxPhysics* physicsSDK, PxTransform* transform, PxRigidActor* actor);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCloneDynamic@physx@@YAPEAVPxRigidDynamic@1@AEAVPxPhysics@1@AEBVPxTransform@1@AEBV21@@Z", ExactSpelling = true)]
        public static extern PxRigidDynamic* PxCloneDynamic(PxPhysics* physicsSDK, PxTransform* transform, PxRigidDynamic* body);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCreatePlane@physx@@YAPEAVPxRigidStatic@1@AEAVPxPhysics@1@AEBVPxPlane@1@AEAVPxMaterial@1@@Z", ExactSpelling = true)]
        public static extern PxRigidStatic* PxCreatePlane(PxPhysics* sdk, PxPlane* plane, PxMaterial* material);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxScaleRigidActor@physx@@YAXAEAVPxRigidActor@1@M_N@Z", ExactSpelling = true)]
        public static extern void PxScaleRigidActor(PxRigidActor* actor, float scale, [MarshalAs(UnmanagedType.I1)] bool scaleMassProps = true);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxInitExtensions(PxPhysics* physics, PxPvd* pvd);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxCloseExtensions();

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxFindFaceIndex@physx@@YAIAEBVPxConvexMeshGeometry@1@AEBVPxTransform@1@AEBVPxVec3@1@2@Z", ExactSpelling = true)]
        public static extern uint PxFindFaceIndex(PxConvexMeshGeometry* convexGeom, PxTransform* geomPose, PxVec3* impactPos, PxVec3* unitDir);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxCreateRepXObject@@YA?AUPxRepXObject@physx@@PEBVPxBase@2@_K@Z", ExactSpelling = true)]
        public static extern PxRepXObject* PxCreateRepXObject(out PxRepXObject __returnBuffer, PxBase* inType, ulong inId);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxInitVehicleSDK(PxPhysics* physics, PxSerializationRegistry* serializationRegistry = null);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxCloseVehicleSDK(PxSerializationRegistry* serializationRegistry = null);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleSetBasisVectors@physx@@YAXAEBVPxVec3@1@0@Z", ExactSpelling = true)]
        public static extern void PxVehicleSetBasisVectors(PxVec3* up, PxVec3* forward);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleSetUpdateMode@physx@@YAXW4Enum@PxVehicleUpdateMode@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicleSetUpdateMode(PxVehicleUpdateMode vehicleUpdateMode);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleSetSweepHitRejectionAngles@physx@@YAXMM@Z", ExactSpelling = true)]
        public static extern void PxVehicleSetSweepHitRejectionAngles(float pointRejectAngle, float normalRejectAngle);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleSetMaxHitActorAcceleration@physx@@YAXM@Z", ExactSpelling = true)]
        public static extern void PxVehicleSetMaxHitActorAcceleration(float maxHitActorAcceleration);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleSuspensionRaycasts@physx@@YAXPEAVPxBatchQuery@1@IPEAPEAVPxVehicleWheels@1@IPEAU?$PxBatchQueryResult@UPxRaycastHit@physx@@@1@PEB_N@Z", ExactSpelling = true)]
        public static extern void PxVehicleSuspensionRaycasts(PxBatchQuery* batchQuery, uint nbVehicles, PxVehicleWheels** vehicles, uint nbSceneQueryResults, /* Failed to emit TranslatedParameter sceneQueryResults: Failed to resolve `Ref resolved by PxBatchQueryResult` during emit time. */
        int* sceneQueryResults, bool* vehiclesToRaycast = null);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleSuspensionSweeps@physx@@YAXPEAVPxBatchQuery@1@IPEAPEAVPxVehicleWheels@1@IPEAU?$PxBatchQueryResult@UPxSweepHit@physx@@@1@GPEB_NMM@Z", ExactSpelling = true)]
        public static extern void PxVehicleSuspensionSweeps(PxBatchQuery* batchQuery, uint nbVehicles, PxVehicleWheels** vehicles, uint nbSceneQueryResults, /* Failed to emit TranslatedParameter sceneQueryResults: Failed to resolve `Ref resolved by PxBatchQueryResult` during emit time. */
        int* sceneQueryResults, ushort nbHitsPerQuery, bool* vehiclesToSweep = null, float sweepWidthScale = 1f, float sweepRadiusScale = 1f);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleModifyWheelContacts@physx@@YAIAEBVPxVehicleWheels@1@IMMAEAVPxContactModifyPair@1@@Z", ExactSpelling = true)]
        public static extern uint PxVehicleModifyWheelContacts(PxVehicleWheels* vehicle, uint wheelId, float wheelTangentVelocityMultiplier, float maxImpulse, PxContactModifyPair* contactModifyPair);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleUpdates@physx@@YAXMAEBVPxVec3@1@AEBVPxVehicleDrivableSurfaceToTireFrictionPairs@1@IPEAPEAVPxVehicleWheels@1@PEAUPxVehicleWheelQueryResult@1@PEAUPxVehicleConcurrentUpdateData@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicleUpdates(float timestep, PxVec3* gravity, PxVehicleDrivableSurfaceToTireFrictionPairs* vehicleDrivableSurfaceToTireFrictionPairs, uint nbVehicles, PxVehicleWheels** vehicles, PxVehicleWheelQueryResult* vehicleWheelQueryResults, PxVehicleConcurrentUpdateData* vehicleConcurrentUpdates = null);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehiclePostUpdates@physx@@YAXPEBUPxVehicleConcurrentUpdateData@1@IPEAPEAVPxVehicleWheels@1@@Z", ExactSpelling = true)]
        public static extern void PxVehiclePostUpdates(PxVehicleConcurrentUpdateData* vehicleConcurrentUpdates, uint nbVehicles, PxVehicleWheels** vehicles);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleShiftOrigin@physx@@YAXAEBVPxVec3@1@IPEAPEAVPxVehicleWheels@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicleShiftOrigin(PxVec3* shift, uint nbVehicles, PxVehicleWheels** vehicles);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleUpdateSingleVehicleAndStoreTelemetryData@physx@@YAXMAEBVPxVec3@1@AEBVPxVehicleDrivableSurfaceToTireFrictionPairs@1@PEAVPxVehicleWheels@1@PEAUPxVehicleWheelQueryResult@1@AEAVPxVehicleTelemetryData@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicleUpdateSingleVehicleAndStoreTelemetryData(float timestep, PxVec3* gravity, PxVehicleDrivableSurfaceToTireFrictionPairs* vehicleDrivableSurfaceToTireFrictionPairs, PxVehicleWheels* focusVehicle, PxVehicleWheelQueryResult* vehicleWheelQueryResults, PxVehicleTelemetryData* telemetryData);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleDrive4WSmoothDigitalRawInputsAndSetAnalogInputs@physx@@YAXAEBUPxVehicleKeySmoothingData@1@AEBV?$PxFixedSizeLookupTable@$07@1@AEBVPxVehicleDrive4WRawInputData@1@M_NAEAVPxVehicleDrive4W@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicleDrive4WSmoothDigitalRawInputsAndSetAnalogInputs(PxVehicleKeySmoothingData* keySmoothing, /* Failed to emit TranslatedParameter steerVsForwardSpeedTable: Failed to resolve `Ref resolved by PxFixedSizeLookupTable` during emit time. */
        int* steerVsForwardSpeedTable, PxVehicleDrive4WRawInputData* rawInputData, float timestep, [MarshalAs(UnmanagedType.I1)] bool isVehicleInAir, PxVehicleDrive4W* focusVehicle);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleDrive4WSmoothAnalogRawInputsAndSetAnalogInputs@physx@@YAXAEBUPxVehiclePadSmoothingData@1@AEBV?$PxFixedSizeLookupTable@$07@1@AEBVPxVehicleDrive4WRawInputData@1@M_NAEAVPxVehicleDrive4W@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicleDrive4WSmoothAnalogRawInputsAndSetAnalogInputs(PxVehiclePadSmoothingData* padSmoothing, /* Failed to emit TranslatedParameter steerVsForwardSpeedTable: Failed to resolve `Ref resolved by PxFixedSizeLookupTable` during emit time. */
        int* steerVsForwardSpeedTable, PxVehicleDrive4WRawInputData* rawInputData, float timestep, [MarshalAs(UnmanagedType.I1)] bool isVehicleInAir, PxVehicleDrive4W* focusVehicle);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleDriveNWSmoothDigitalRawInputsAndSetAnalogInputs@physx@@YAXAEBUPxVehicleKeySmoothingData@1@AEBV?$PxFixedSizeLookupTable@$07@1@AEBVPxVehicleDriveNWRawInputData@1@M_NAEAVPxVehicleDriveNW@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicleDriveNWSmoothDigitalRawInputsAndSetAnalogInputs(PxVehicleKeySmoothingData* keySmoothing, /* Failed to emit TranslatedParameter steerVsForwardSpeedTable: Failed to resolve `Ref resolved by PxFixedSizeLookupTable` during emit time. */
        int* steerVsForwardSpeedTable, PxVehicleDriveNWRawInputData* rawInputData, float timestep, [MarshalAs(UnmanagedType.I1)] bool isVehicleInAir, PxVehicleDriveNW* focusVehicle);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleDriveNWSmoothAnalogRawInputsAndSetAnalogInputs@physx@@YAXAEBUPxVehiclePadSmoothingData@1@AEBV?$PxFixedSizeLookupTable@$07@1@AEBVPxVehicleDriveNWRawInputData@1@M_NAEAVPxVehicleDriveNW@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicleDriveNWSmoothAnalogRawInputsAndSetAnalogInputs(PxVehiclePadSmoothingData* padSmoothing, /* Failed to emit TranslatedParameter steerVsForwardSpeedTable: Failed to resolve `Ref resolved by PxFixedSizeLookupTable` during emit time. */
        int* steerVsForwardSpeedTable, PxVehicleDriveNWRawInputData* rawInputData, float timestep, [MarshalAs(UnmanagedType.I1)] bool isVehicleInAir, PxVehicleDriveNW* focusVehicle);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleDriveTankSmoothDigitalRawInputsAndSetAnalogInputs@physx@@YAXAEBUPxVehicleKeySmoothingData@1@AEBVPxVehicleDriveTankRawInputData@1@MAEAVPxVehicleDriveTank@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicleDriveTankSmoothDigitalRawInputsAndSetAnalogInputs(PxVehicleKeySmoothingData* keySmoothing, PxVehicleDriveTankRawInputData* rawInputData, float timestep, PxVehicleDriveTank* focusVehicle);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleDriveTankSmoothAnalogRawInputsAndSetAnalogInputs@physx@@YAXAEBUPxVehiclePadSmoothingData@1@AEBVPxVehicleDriveTankRawInputData@1@MAEAVPxVehicleDriveTank@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicleDriveTankSmoothAnalogRawInputsAndSetAnalogInputs(PxVehiclePadSmoothingData* padSmoothing, PxVehicleDriveTankRawInputData* rawInputData, float timestep, PxVehicleDriveTank* focusVehicle);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicle4WEnable3WTadpoleMode@physx@@YAXAEAVPxVehicleWheelsSimData@1@AEAVPxVehicleWheelsDynData@1@AEAVPxVehicleDriveSimData4W@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicle4WEnable3WTadpoleMode(PxVehicleWheelsSimData* wheelsSimData, PxVehicleWheelsDynData* wheelsDynData, PxVehicleDriveSimData4W* driveSimData);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicle4WEnable3WDeltaMode@physx@@YAXAEAVPxVehicleWheelsSimData@1@AEAVPxVehicleWheelsDynData@1@AEAVPxVehicleDriveSimData4W@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicle4WEnable3WDeltaMode(PxVehicleWheelsSimData* wheelsSimData, PxVehicleWheelsDynData* wheelsDynData, PxVehicleDriveSimData4W* driveSimData);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleComputeSprungMasses@physx@@YAXIPEBVPxVec3@1@AEBV21@MIPEAM@Z", ExactSpelling = true)]
        public static extern void PxVehicleComputeSprungMasses(uint nbSprungMasses, PxVec3* sprungMassCoordinates, PxVec3* centreOfMass, float totalMass, uint gravityDirection, float* sprungMasses);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleUpdateCMassLocalPose@physx@@YAXAEBVPxTransform@1@0IPEAVPxVehicleWheels@1@@Z", ExactSpelling = true)]
        public static extern void PxVehicleUpdateCMassLocalPose(PxTransform* oldCMassLocalPose, PxTransform* newCMassLocalPose, uint gravityDirection, PxVehicleWheels* vehicle);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleCopyDynamicsData@physx@@YAXAEBVPxVehicleCopyDynamicsMap@1@AEBVPxVehicleWheels@1@PEAV31@@Z", ExactSpelling = true)]
        public static extern void PxVehicleCopyDynamicsData(PxVehicleCopyDynamicsMap* wheelMap, PxVehicleWheels* src, PxVehicleWheels* trg);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern PxPvd* PxCreatePvd(PxFoundation* foundation);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern PxPvdTransport* PxDefaultPvdSocketTransportCreate(byte* host, int port, uint timeoutInMilliseconds);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern PxPvdTransport* PxDefaultPvdFileTransportCreate(byte* name);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxGetPhysicsBinaryMetaData(PxOutputStream* stream);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxRegisterPhysicsSerializers(PxSerializationRegistry* sr);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxUnregisterPhysicsSerializers(PxSerializationRegistry* sr);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxAddCollectionToPhysics(PxCollection* collection);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxD6JointCreate_Fixed@physx@@YAPEAVPxJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxVec3@1@12_N@Z", ExactSpelling = true)]
        public static extern PxJoint* PxD6JointCreate_Fixed(PxPhysics* physics, PxRigidActor* actor0, PxVec3* localPos0, PxRigidActor* actor1, PxVec3* localPos1, [MarshalAs(UnmanagedType.I1)] bool useD6);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxD6JointCreate_Distance@physx@@YAPEAVPxJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxVec3@1@12M_N@Z", ExactSpelling = true)]
        public static extern PxJoint* PxD6JointCreate_Distance(PxPhysics* physics, PxRigidActor* actor0, PxVec3* localPos0, PxRigidActor* actor1, PxVec3* localPos1, float maxDist, [MarshalAs(UnmanagedType.I1)] bool useD6);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxD6JointCreate_Prismatic@physx@@YAPEAVPxJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxVec3@1@122MM_N@Z", ExactSpelling = true)]
        public static extern PxJoint* PxD6JointCreate_Prismatic(PxPhysics* physics, PxRigidActor* actor0, PxVec3* localPos0, PxRigidActor* actor1, PxVec3* localPos1, PxVec3* axis, float minLimit, float maxLimit, [MarshalAs(UnmanagedType.I1)] bool useD6);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxD6JointCreate_Revolute@physx@@YAPEAVPxJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxVec3@1@122MM_N@Z", ExactSpelling = true)]
        public static extern PxJoint* PxD6JointCreate_Revolute(PxPhysics* physics, PxRigidActor* actor0, PxVec3* localPos0, PxRigidActor* actor1, PxVec3* localPos1, PxVec3* axis, float minLimit, float maxLimit, [MarshalAs(UnmanagedType.I1)] bool useD6);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxD6JointCreate_Spherical@physx@@YAPEAVPxJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxVec3@1@122MM_N@Z", ExactSpelling = true)]
        public static extern PxJoint* PxD6JointCreate_Spherical(PxPhysics* physics, PxRigidActor* actor0, PxVec3* localPos0, PxRigidActor* actor1, PxVec3* localPos1, PxVec3* axis, float limit1, float limit2, [MarshalAs(UnmanagedType.I1)] bool useD6);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxD6JointCreate_GenericCone@physx@@YAPEAVPxJoint@1@AEAM0AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxVec3@1@23MMMM_N@Z", ExactSpelling = true)]
        public static extern PxJoint* PxD6JointCreate_GenericCone(float* apiroty, float* apirotz, PxPhysics* physics, PxRigidActor* actor0, PxVec3* localPos0, PxRigidActor* actor1, PxVec3* localPos1, float minLimit1, float maxLimit1, float minLimit2, float maxLimit2, [MarshalAs(UnmanagedType.I1)] bool useD6);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxD6JointCreate_Pyramid@physx@@YAPEAVPxJoint@1@AEAVPxPhysics@1@PEAVPxRigidActor@1@AEBVPxVec3@1@122MMMM@Z", ExactSpelling = true)]
        public static extern PxJoint* PxD6JointCreate_Pyramid(PxPhysics* physics, PxRigidActor* actor0, PxVec3* localPos0, PxRigidActor* actor1, PxVec3* localPos1, PxVec3* axis, float minLimit1, float maxLimit1, float minLimit2, float maxLimit2);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?PxVehicleIsInAir@physx@@YA_NAEBUPxVehicleWheelQueryResult@1@@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool PxVehicleIsInAir(PxVehicleWheelQueryResult* vehWheelQueryResults);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxSetPhysXDelayLoadHook(PxDelayLoadHook* hook);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxSetPhysXCookingDelayLoadHook(PxDelayLoadHook* hook);

        [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void PxSetPhysXCommonDelayLoadHook(PxDelayLoadHook* hook);
    }
}
