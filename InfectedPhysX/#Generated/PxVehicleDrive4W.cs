// This file was automatically generated by Biohazrd and should not be modified by hand!
using System.Runtime.InteropServices;

[StructLayout(LayoutKind.Explicit, Size = 864)]
public unsafe partial struct PxVehicleDrive4W
{
    [FieldOffset(0)] public PxVehicleDrive Base;

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?allocate@PxVehicleDrive4W@physx@@SAPEAV12@I@Z", ExactSpelling = true)]
    public static extern PxVehicleDrive4W* allocate(uint nbWheels);

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?free@PxVehicleDrive4W@physx@@QEAAXXZ", ExactSpelling = true)]
    private static extern void free_PInvoke(PxVehicleDrive4W* @this);

    public unsafe void free()
    {
        fixed (PxVehicleDrive4W* @this = &this)
        { free_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setup@PxVehicleDrive4W@physx@@QEAAXPEAVPxPhysics@2@PEAVPxRigidDynamic@2@AEBVPxVehicleWheelsSimData@2@AEBVPxVehicleDriveSimData4W@2@I@Z", ExactSpelling = true)]
    private static extern void setup_PInvoke(PxVehicleDrive4W* @this, PxPhysics* physics, PxRigidDynamic* vehActor, PxVehicleWheelsSimData* wheelsData, PxVehicleDriveSimData4W* driveData, uint nbNonDrivenWheels);

    public unsafe void setup(PxPhysics* physics, PxRigidDynamic* vehActor, PxVehicleWheelsSimData* wheelsData, PxVehicleDriveSimData4W* driveData, uint nbNonDrivenWheels)
    {
        fixed (PxVehicleDrive4W* @this = &this)
        { setup_PInvoke(@this, physics, vehActor, wheelsData, driveData, nbNonDrivenWheels); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?create@PxVehicleDrive4W@physx@@SAPEAV12@PEAVPxPhysics@2@PEAVPxRigidDynamic@2@AEBVPxVehicleWheelsSimData@2@AEBVPxVehicleDriveSimData4W@2@I@Z", ExactSpelling = true)]
    public static extern PxVehicleDrive4W* create(PxPhysics* physics, PxRigidDynamic* vehActor, PxVehicleWheelsSimData* wheelsData, PxVehicleDriveSimData4W* driveData, uint nbNonDrivenWheels);

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setToRestState@PxVehicleDrive4W@physx@@QEAAXXZ", ExactSpelling = true)]
    private static extern void setToRestState_PInvoke(PxVehicleDrive4W* @this);

    public unsafe void setToRestState()
    {
        fixed (PxVehicleDrive4W* @this = &this)
        { setToRestState_PInvoke(@this); }
    }

    [FieldOffset(288)] public PxVehicleDriveSimData4W mDriveSimData;

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?isValid@PxVehicleDrive4W@physx@@AEBA_NXZ", ExactSpelling = true)]
    private static extern bool isValid_PInvoke(PxVehicleDrive4W* @this);

    public unsafe bool isValid()
    {
        fixed (PxVehicleDrive4W* @this = &this)
        { return isValid_PInvoke(@this); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxVehicleDrive4W@physx@@IEAA@XZ", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxVehicleDrive4W* @this);

    public unsafe void Constructor()
    {
        fixed (PxVehicleDrive4W* @this = &this)
        { Constructor_PInvoke(@this); }
    }

    public unsafe void Destructor()
    {
        fixed (PxVehicleDrive4W* @this = &this)
        { VirtualMethodTablePointer->__DeletingDestructorPointer(@this); }
    }

    public unsafe bool isKindOf(byte* name)
    {
        fixed (PxVehicleDrive4W* @this = &this)
        { return VirtualMethodTablePointer->isKindOf(@this, name); }
    }

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?createObject@PxVehicleDrive4W@physx@@SAPEAV12@AEAPEAEAEAVPxDeserializationContext@2@@Z", ExactSpelling = true)]
    public static extern PxVehicleDrive4W* createObject(byte** address, PxDeserializationContext* context);

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getBinaryMetaData@PxVehicleDrive4W@physx@@SAXAEAVPxOutputStream@2@@Z", ExactSpelling = true)]
    public static extern void getBinaryMetaData(PxOutputStream* stream);

    [DllImport("TODO.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxVehicleDrive4W@physx@@QEAA@V?$PxFlags@W4Enum@PxBaseFlag@physx@@G@1@@Z", ExactSpelling = true)]
    private static extern void Constructor_PInvoke(PxVehicleDrive4W* @this, PxBaseFlags baseFlags);

    public unsafe void Constructor(PxBaseFlags baseFlags)
    {
        fixed (PxVehicleDrive4W* @this = &this)
        { Constructor_PInvoke(@this, baseFlags); }
    }

    public unsafe byte* getConcreteTypeName()
    {
        fixed (PxVehicleDrive4W* @this = &this)
        { return VirtualMethodTablePointer->getConcreteTypeName(@this); }
    }


    [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

    [StructLayout(LayoutKind.Sequential)]
    public unsafe struct VirtualMethodTable
    {
        /// <summary>Virtual method pointer for `release`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleWheels*, void> release;
        /// <summary>Virtual method pointer for `getConcreteTypeName`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleDrive4W*, byte*> getConcreteTypeName;
        /// <summary>Virtual method pointer for `isReleasable`</summary>
        public delegate* unmanaged[Cdecl]<PxBase*, bool> isReleasable;
        /// <summary>Virtual method pointer for `~PxVehicleDrive4W`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleDrive4W*, void> __DeletingDestructorPointer;
        /// <summary>Virtual method pointer for `isKindOf`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleDrive4W*, byte*, bool> isKindOf;
        /// <summary>Virtual method pointer for `init`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleDrive*, uint, void> init;
        /// <summary>Virtual method pointer for `requiresObjects`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleWheels*, PxProcessPxBaseCallback*, void> requiresObjects;
        /// <summary>Virtual method pointer for `preExportDataReset`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleWheels*, void> preExportDataReset;
        /// <summary>Virtual method pointer for `exportExtraData`</summary>
        public delegate* unmanaged[Cdecl]<PxVehicleWheels*, PxSerializationContext*, void> exportExtraData;
    }
}
